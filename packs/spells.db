{"_id":"0VzNMJQ7RY99wJGA","name":"Enlarge/Reduce","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You cause a creature or an object you can see within range to grow larger or smaller for the Duration. Choose either a creature or an object that is neither worn nor carried. If the target is unwilling, it can make a Constitution saving throw. On a success, the spell has no effect.</p>\n<p>If the target is a creature, everything it is wearing and carrying changes size with it. Any item dropped by an affected creature returns to normal size at once.</p>\n<p><strong>Enlarge</strong>. The target’s size doubles in all dimensions, and its weight is multiplied by eight. This growth increases its size by one category—from Medium to Large, for example. If there isn’t enough room for the target to double its size, the creature or object attains the maximum possible size in the space available. Until the spell ends, the target also has advantage on Strength Checks and Strength Saving Throws. The target’s Weapons also grow to match its new size. While these Weapons are enlarged, the target’s attacks with them deal 1d4 extra damage.</p>\n<p><strong>Reduce</strong>. The target’s size is halved in all dimensions, and its weight is reduced to one-eighth of normal. This reduction decreases its size by one category—from Medium to Small, for example. Until the spell ends, the target also has disadvantage on Strength Checks and Strength Saving Throws. The target’s Weapons also shrink to match its new size. While these Weapons are reduced, the target’s attacks with them deal 1d4 less damage (this can’t reduce the damage below 1).</p>","chat":"","unidentified":""},"source":"PHB pg. 237","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A pinch of powdered iron","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"EnlargeReduce @target","mode":"+","targetSpecific":false,"id":1,"itemId":"l3i21wVEWMHVOXyj","active":true,"_targets":[],"label":"Macro Execute"}]},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Enlarge/Reduce","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\n/**\n * For each target, the GM will have to choose \n */\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet target = canvas.tokens.get(lastArg.tokenId);\nlet originalSize = target.data.width;\nlet mwak = target.actor.data.data.bonuses.mwak.damage;\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Enlarge or Reduce\",\n        buttons: {\n            one: {\n                label: \"Enlarge\",\n                callback: () => {\n                    let bonus = mwak + \"+ 1d4\";\n                    let enlarge = (originalSize + 1);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": enlarge, \"height\": enlarge });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is enlarged` });\n                }\n            },\n            two: {\n                label: \"Reduce\",\n                callback: () => {\n                    let bonus = mwak + \" -1d4\";\n                    let size = originalSize;\n                    let newSize = (size > 1) ? (size - 1) : (size - 0.3);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": newSize, \"height\": newSize });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is reduced` });\n                }\n            },\n        }\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, 'enlageReduceSpell');\n    tactor.update({ \"data.bonuses.mwak.damage\": flag.ogMwak });\n    target.update({ \"width\": flag.size, \"height\": flag.size });\n    DAE.unsetFlag(tactor, 'enlageReduceSpell');\n    ChatMessage.create({ content: `${target.name} is returned to normal size` });\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Enlarge/Reduce","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\n/**\n * For each target, the GM will have to choose \n */\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet target = canvas.tokens.get(lastArg.tokenId);\nlet originalSize = target.data.width;\nlet mwak = target.actor.data.data.bonuses.mwak.damage;\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Enlarge or Reduce\",\n        buttons: {\n            one: {\n                label: \"Enlarge\",\n                callback: () => {\n                    let bonus = mwak + \"+ 1d4\";\n                    let enlarge = (originalSize + 1);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": enlarge, \"height\": enlarge });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is enlarged` });\n                }\n            },\n            two: {\n                label: \"Reduce\",\n                callback: () => {\n                    let bonus = mwak + \" -1d4\";\n                    let size = originalSize;\n                    let newSize = (size > 1) ? (size - 1) : (size - 0.3);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": newSize, \"height\": newSize });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is reduced` });\n                }\n            },\n        }\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, 'enlageReduceSpell');\n    tactor.update({ \"data.bonuses.mwak.damage\": flag.ogMwak });\n    target.update({ \"width\": flag.size, \"height\": flag.size });\n    DAE.unsetFlag(tactor, 'enlageReduceSpell');\n    ChatMessage.create({ content: `${target.name} is returned to normal size` });\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/link-blue-2.jpg","effects":[{"_id":"a7fBAHk1NcIg80wi","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/link-blue-2.jpg","label":"Enlarge/Reduce","tint":"","transfer":false}]}
{"_id":"1998iBxDW9aRFCYF","name":"Dominate Person","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You attempt to beguile a humanoid that you can see within range. It must succeed on a Wisdom saving throw or be charmed by you for the duration. If you or creatures that are friendly to you are fighting it, it has advantage on the saving throw.</p>\n<p>While the target is charmed, you have a telepathic link with it as long as the two of you are on the same plane of existence. You can use this telepathic link to issue commands to the creature while you are conscious (no action required), which it does its best to obey. You can specify a simple and general course of action, such as \"Attack that creature,\" \"Run over there,\" or \"Fetch that object.\" If the creature completes the order and doesn't receive further direction from you, it defends and preserves itself to the best of its ability.</p>\n<p>You can use your action to take total and precise control of the target. Until the end of your next turn, the creature takes only the actions you choose, and doesn't do anything that you don't allow it to do. During this time you can also cause the creature to use a reaction, but this requires you to use your own reaction as well.</p>\n<p>Each time the target takes damage, it makes a new Wisdom saving throw against the spell. If the saving throw succeeds, the spell ends.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a 6th-level spell slot, the duration is concentration, up to 10 minutes. When you use a 7th-level spell slot, the duration is concentration, up to 1 hour. When you use a spell slot of 8th level or higher, the duration is concentration, up to 8 hours.</p>","chat":"","unidentified":""},"source":"PHB pg. 235","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":5,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"gKzO4fpcwMOcAGi7","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/air-burst-magenta-3.jpg","effects":[{"_id":"qwxxhaX6mG8Lod2G","flags":{"core":{"statusId":"combat-utility-belt.charmed"},"combat-utility-belt":{"conditionId":"charmed"},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/charmed.svg","label":"Charmed","tint":"","transfer":false}]}
{"_id":"1X15PXtKKJUD5ePr","name":"Entangle","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>Grasping weeds and vines sprout from the ground in a 20-foot square starting from a point within range. For the Duration, these Plants turn the ground in the area into difficult terrain.</p>\n<p>A creature in the area when you cast the spell must succeed on a Strength saving throw or be Restrained by the entangling Plants until the spell ends. A creature restra⁠ined by the plant⁠s can use its action to make a Stren⁠gth check against your spell save DC. On a success, it frees itself.</p>\n<p>When the spell ends, the conjured Plants wilt away.</p>","chat":"","unidentified":""},"source":"PHB pg. 238","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":20,"width":null,"units":"ft","type":"square"},"range":{"value":90,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":1,"school":"con","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":false,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Restrained","mode":"+","targetSpecific":false,"id":1,"itemId":"SC2lBI48lFJMM3B3","active":true,"_targets":[]}]}},"img":"systems/dnd5e/icons/spells/vines-acid-2.jpg","effects":[{"_id":"XrBNGDLZKKuxSi7Z","flags":{"dae":{"statusId":"restrained","transfer":false},"core":{"statusId":"restrain"}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/svg/net.svg","label":"Restrained","tint":"","transfer":false}]}
{"_id":"26xAryg5qdG9n23b","name":"Enhance Ability","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You touch a creature and bestow upon it a magical enhancement. Choose one of the following effects; the target gains that effect until the spell ends.</p>\n<ul>\n<li><strong>Bear’s Endurance</strong>. The target has advantage on Constitution Checks. It also gains 2d6 Temporary Hit Points, which are lost when the spell ends.</li>\n<li><strong>Bull’s Strength</strong>. The target has advantage on Strength Checks, and his or her carrying capacity doubles.</li>\n<li><strong>Cat’s Grace</strong>. The target has advantage on Dexterity Checks. It also doesn’t take damage from Falling 20 feet or less if it isn’t Incapacitated.</li>\n<li><strong>Eagle’s Splendor</strong>. The target has advantage on Charisma Checks.</li>\n<li><strong>Fox’s Cunning</strong>. The target has advantage on Intelligence Checks.</li>\n<li><strong>Owl’s Wisdom</strong>. The target has advantage on Wisdom Checks.</li>\n</ul>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>\n<p>&nbsp;</p>","chat":"","unidentified":""},"source":"PHB pg. 237","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Fur or a feather from a beast","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"\"Enhance Ability\"","mode":"+","targetSpecific":false,"id":1,"itemId":"yZNhz0so7VoYLpZZ","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""},"core":{"sourceId":"Compendium.Dynamic-Effects-SRD.DAE SRD Spells.26xAryg5qdG9n23b"},"itemacro":{"macro":{"_data":{"name":"Enhance Ability","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" \n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\n\n/**\n * For each target select the effect (GM selection)\n */\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Choose enhance ability effect for \" + tactor.name,\n        buttons: {\n            one: {\n                label: \"Bear's Endurance\",\n                callback: () => {\n                    let formula = `2d6`;\n                    let amount = new Roll(formula).roll().total;\n                    DAE.setFlag(tactor, 'enhanceAbility', {\n                        name: \"bear\",\n                    });\n                    ChatMessage.create({ content: `${tactor.name} gains ${amount} temp Hp` });\n                    tactor.update({ \"data.attributes.hp.temp\": amount });\n\n                }\n            },\n            two: {\n                label: \"Bull's Strength\",\n                callback: () => {\n                    ChatMessage.create({ content: `${tactor.name}'s encumberance is doubled` });\n                    DAE.setFlag(tactor, 'enhanceAbility', {\n                        name: \"bull\",\n                    });\n                    tactor.setFlag('dnd5e', 'powerfulBuild', true);\n                }\n            },\n            three: {\n                label: \"Other\",\n                callback: () => {\n                    DAE.setFlag(tactor, 'enhanceAbility', {\n                        name: \"other\",\n                    });\n                    ChatMessage.create({ content: `A non automated Ability was enhanced for ${tactor.name}`});\n                }\n            }\n        }\n    }).render(true);\n}\n\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, 'enhanceAbility');\n    if (flag.name === \"bull\") tactor.unsetFlag('dnd5e', 'powerfulBuild', false);\n    DAE.unsetFlag(tactor, 'enhanceAbility');\n    ChatMessage.create({ content: \"Enhance Ability has expired\" });\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Enhance Ability","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" \n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\n\n/**\n * For each target select the effect (GM selection)\n */\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Choose enhance ability effect for \" + tactor.name,\n        buttons: {\n            one: {\n                label: \"Bear's Endurance\",\n                callback: () => {\n                    let formula = `2d6`;\n                    let amount = new Roll(formula).roll().total;\n                    DAE.setFlag(tactor, 'enhanceAbility', {\n                        name: \"bear\",\n                    });\n                    ChatMessage.create({ content: `${tactor.name} gains ${amount} temp Hp` });\n                    tactor.update({ \"data.attributes.hp.temp\": amount });\n\n                }\n            },\n            two: {\n                label: \"Bull's Strength\",\n                callback: () => {\n                    ChatMessage.create({ content: `${tactor.name}'s encumberance is doubled` });\n                    DAE.setFlag(tactor, 'enhanceAbility', {\n                        name: \"bull\",\n                    });\n                    tactor.setFlag('dnd5e', 'powerfulBuild', true);\n                }\n            },\n            three: {\n                label: \"Other\",\n                callback: () => {\n                    DAE.setFlag(tactor, 'enhanceAbility', {\n                        name: \"other\",\n                    });\n                    ChatMessage.create({ content: `A non automated Ability was enhanced for ${tactor.name}`});\n                }\n            }\n        }\n    }).render(true);\n}\n\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, 'enhanceAbility');\n    if (flag.name === \"bull\") tactor.unsetFlag('dnd5e', 'powerfulBuild', false);\n    DAE.unsetFlag(tactor, 'enhanceAbility');\n    ChatMessage.create({ content: \"Enhance Ability has expired\" });\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/haste-royal-2.jpg","effects":[{"_id":"8uI9aer4rZEihWfG","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/haste-royal-2.jpg","label":"Enhance Ability","tint":"","transfer":false}]}
{"_id":"28KxBq0sSUZf0KJc","name":"Command","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You speak a one-word command to a creature you can see within range. The target must succeed on a Wisdom saving throw or follow the command on its next turn. The spell has no effect if the target is undead, if it doesn’t understand your language, or if your command is directly harmful to it.</p>\n<p>Some typical commands and their effects follow. You might issue a command other than one described here. If you do so, the DM determines how the target behaves. If the target can’t follow your command, the spell ends.</p>\n<p><strong>Approach.</strong> The target moves toward you by the shortest and most direct route, ending its turn if it moves within 5 feet of you.</p>\n<p><strong>Drop.</strong> The target drops whatever it is holding and then ends its turn.</p>\n<p><strong>Flee.</strong> The target spends its turn moving away from you by the fastest available means.</p>\n<p><strong>Grovel.</strong> The target falls prone and then ends its turn.</p>\n<p><strong>Halt.</strong> The target doesn’t move and takes no actions. A flying creature stays aloft, provided that it is able to do so. If it must move to stay aloft, it flies the minimum distance needed to remain in the air.</p>\n<p><strong>Higher Levels.&nbsp;</strong>When you cast this spell using a spell slot of 2nd level or higher, you can affect one additional creature for each slot level above 1st. The creatures must be within 30 feet of each other when you target them.</p>","chat":"","unidentified":""},"source":"PHB pg. 223","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"round"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"Rkamxk5rL0RQpiYv","active":true,"_targets":[]}],"equipActive":true,"alwaysActive":false},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/explosion-magenta-1.jpg","effects":[{"_id":"4bqCZI0NEfbFmhgx","flags":{"core":{"statusId":"combat-utility-belt.charmed"},"combat-utility-belt":{"conditionId":"charmed"},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/charmed.svg","label":"Charmed","tint":"","transfer":false}]}
{"_id":"2xOEEH5Ga1S1lfbW","name":"Flesh to Stone","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>You attempt to turn one creature that you can see within range into stone. If the target’s body is made of flesh, the creature must make a Constitution saving throw. On a failed save, it is Restrained as its flesh begins to harden. On a successful save, the creature isn’t affected.</p><p>A creature Restrained by this spell must make another Constitution saving throw at the end of each of its turns. If it successfully saves against this spell three times, the spell ends. If it fails its saves three times, it is turned to stone and subjected to the Petrified condition for the Duration. The successes and failures don’t need to be consecutive; keep track of both until the target collects three of a kind.</p><p>If the creature is physically broken while Petrified, it suffers from similar deformities if it reverts to its original state.</p><p>If you maintain your Concentration on this spell for the entire possible Duration, the creature is turned to stone until the effect is removed.</p>","chat":"","unidentified":""},"source":"PHB pg. 243","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":6,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A pinch of lime, water, and earth","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"itemacro":{"macro":{"_data":{"name":"Flesh to Stone","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\n\nif (args[0] === \"on\") {\n\n    DAE.setFlag(tactor, \"FleshToStoneSpell\", {\n        successes: 0,\n        failures: 0\n    });\n}\n\nif (args[0] === \"off\") {\n    DAE.unsetFlag(\"world\", \"FleshToStoneSpell\");\n    ChatMessage.create({ content: \"Flesh to stone ends, if concentration was maintained for the entire duration,the creature is turned to stone until the effect is removed. \" });\n}\n\nif(args[0] === \"each\") {\n    let flag = DAE.getFlag(tactor, \"FleshToStoneSpell\");\nif(flag.failures === 3) return;\n    const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n    let saveRoll = (await tactor.rollAbilitySave(saveData.ability, {flavor})).total;\n\n    ChatMessage.create({content: `${tactor.name}'s save roll is ${saveRoll} vs ${saveData.dc}`});\n    if (saveRoll < saveData.dc) {\n        if (flag.failures === 2) {\n            let fleshToStoneFailures = (flag.failures + 1);\n\n            DAE.setFlag(tactor, \"FleshToStoneSpell\", {\n                failures: fleshToStoneFailures\n            });\n            ChatMessage.create({ content: `Flesh To Stone on ${tactor.name} is complete` });\n            FleshToStoneUpdate();\n            return;\n        }\n        else {\n            let fleshToStoneFailures = (flag.failures + 1);\n\n            DAE.setFlag(tactor, \"FleshToStoneSpell\", {\n                failures: fleshToStoneFailures\n            });\n            console.log(`Flesh To Stone failures increments to ${fleshToStoneFailures}`);\n\n        }\n    }\n    else if (saveRoll >= save) {\n        if (flag.successes === 2) {\n            ChatMessage.create({ content: `Flesh To Stone on ${tactor.name} ends` });\n            tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId); \n            return;\n        }\n        else {\n            let fleshToStoneSuccesses = (flag.successes + 1);\n            DAE.setFlag(tactor, \"FleshToStoneSpell\", {\n                successes: fleshToStoneSuccesses\n            });\n            console.log(`Flesh To Stone successes to ${fleshToStoneSuccesses}`);\n        }\n    }\n}\n\n/**\n * Update token with accurate DAE effect\n */\nasync function FleshToStoneUpdate() {\n    let fleshToStone = tactor.effects.get(lastArg.effectId);\n    let icon = fleshToStone.data.icon;\n    if(game.modules.get(\"combat-utility-belt\").active) icon = \"modules/combat-utility-belt/icons/petrified.svg\";\n    else icon = \"icons/svg/paralysis.svg\"\n    let label = fleshToStone.data.label;\n    label = \"Flesh to Stone - Petrified\";\n    fleshToStone.update({ icon, label });\n\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Flesh to Stone","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\n\nif (args[0] === \"on\") {\n\n    DAE.setFlag(tactor, \"FleshToStoneSpell\", {\n        successes: 0,\n        failures: 0\n    });\n}\n\nif (args[0] === \"off\") {\n    DAE.unsetFlag(\"world\", \"FleshToStoneSpell\");\n    ChatMessage.create({ content: \"Flesh to stone ends, if concentration was maintained for the entire duration,the creature is turned to stone until the effect is removed. \" });\n}\n\nif(args[0] === \"each\") {\n    let flag = DAE.getFlag(tactor, \"FleshToStoneSpell\");\nif(flag.failures === 3) return;\n    const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n    let saveRoll = (await tactor.rollAbilitySave(saveData.ability, {flavor})).total;\n\n    ChatMessage.create({content: `${tactor.name}'s save roll is ${saveRoll} vs ${saveData.dc}`});\n    if (saveRoll < saveData.dc) {\n        if (flag.failures === 2) {\n            let fleshToStoneFailures = (flag.failures + 1);\n\n            DAE.setFlag(tactor, \"FleshToStoneSpell\", {\n                failures: fleshToStoneFailures\n            });\n            ChatMessage.create({ content: `Flesh To Stone on ${tactor.name} is complete` });\n            FleshToStoneUpdate();\n            return;\n        }\n        else {\n            let fleshToStoneFailures = (flag.failures + 1);\n\n            DAE.setFlag(tactor, \"FleshToStoneSpell\", {\n                failures: fleshToStoneFailures\n            });\n            console.log(`Flesh To Stone failures increments to ${fleshToStoneFailures}`);\n\n        }\n    }\n    else if (saveRoll >= save) {\n        if (flag.successes === 2) {\n            ChatMessage.create({ content: `Flesh To Stone on ${tactor.name} ends` });\n            tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId); \n            return;\n        }\n        else {\n            let fleshToStoneSuccesses = (flag.successes + 1);\n            DAE.setFlag(tactor, \"FleshToStoneSpell\", {\n                successes: fleshToStoneSuccesses\n            });\n            console.log(`Flesh To Stone successes to ${fleshToStoneSuccesses}`);\n        }\n    }\n}\n\n/**\n * Update token with accurate DAE effect\n */\nasync function FleshToStoneUpdate() {\n    let fleshToStone = tactor.effects.get(lastArg.effectId);\n    let icon = fleshToStone.data.icon;\n    if(game.modules.get(\"combat-utility-belt\").active) icon = \"modules/combat-utility-belt/icons/petrified.svg\";\n    else icon = \"icons/svg/paralysis.svg\"\n    let label = fleshToStone.data.label;\n    label = \"Flesh to Stone - Petrified\";\n    fleshToStone.update({ icon, label });\n\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/link-blue-2.jpg","effects":[{"_id":"rcvkBwQW0yl4arjK","flags":{"dae":{"stackable":false,"specialDuration":"None","macroRepeat":"endEveryTurn","transfer":false}},"changes":[{"key":"macro.itemMacro","value":"@target @attributes.spelldc @item","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/link-blue-2.jpg","label":"Flesh to Stone","tint":"","transfer":false}]}
{"_id":"9jAiOoDIA5EdZHin","name":"Hold Person","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>Choose a humanoid that you can see within range. The target must succeed on a Wisdom saving throw or be paralyzed for the duration. At the end of each of its turns, the target can make another Wisdom saving throw. On a success, the spell ends on the target.</p>\n<p><strong>Higher Levels.&nbsp;</strong>When you cast this spell using a spell slot of 3rd level or higher, you can target one additional humanoid for each slot level above 2nd. The humanoids must be within 30 feet of each other when you target them.</p>","chat":"","unidentified":""},"source":"PHB pg. 251","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":2,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A small, straight piece of iron","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Paralyzed","mode":"+","targetSpecific":false,"id":1,"itemId":"OG2582mWdvDlpOLo","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/shielding-eerie-2.jpg","effects":[{"_id":"iYD78XXVg3RIDGHt","flags":{"dae":{"statusId":"paralyzed","transfer":false},"core":{"statusId":"paralysis"}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/svg/paralysis.svg","label":"Paralyzed","tint":"","transfer":false}]}
{"_id":"AOchbceeKrPusKst","name":"Ray of Frost","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>A frigid beam of blue-white light streaks toward a creature within range. Make a ranged spell attack against the target. On a hit, it takes 1d8 cold damage, and its speed is reduced by 10 feet until the start of your next turn.</p>\n<p>The spell's damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8).</p>","chat":"","unidentified":""},"source":"PHB pg. 271","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":null,"units":"inst"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"rsak","attackBonus":"0","chatFlavor":"","critical":null,"damage":{"parts":[["1d8","cold"]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":0,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"cantrip","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"macro.execute","value":"\"Ray of Frost\" @target","mode":"+","targetSpecific":false,"id":1,"itemId":"6Oqiqd9OC1K8G9es","active":true,"_targets":[]}],"equipActive":true,"alwaysActive":false},"dae":{"activeEquipped":false,"alwaysActive":false},"core":{"sourceId":"Item.FyPDa7dCge2GASdr"}},"img":"systems/dnd5e/icons/spells/beam-blue-1.jpg","effects":[{"_id":"dNFOxJA3UGDHtSmJ","flags":{"dae":{"transfer":false,"stackable":false}},"changes":[{"key":"data.attributes.movement.walk","value":-10,"mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/beam-blue-1.jpg","label":"Ray of Frost","tint":"","transfer":false}]}
{"_id":"AwMLvifkyNIYzSUh","name":"Divine Word","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>You utter a divine word, imbued with the power that shaped the world at the dawn of Creation. Choose any number of creatures you can see within range. Each creature that can hear you must make a Charisma saving throw. On a failed save, a creature suffers an effect based on its current hit points:</p>\n<ul>\n<li>50 Hit Points or fewer: Deafened for 1 minute</li>\n<li>40 Hit Points or fewer: Deafened and Blinded for 10 minutes</li>\n<li>30 Hit Points or fewer: Blinded, Deafened, and Stunned for 1 Hour</li>\n<li>20 Hit Points or fewer: killed instantly</li>\n</ul>\n<p>Regardless of its current Hit Points, a Celestial, an elemental, a fey, or a fiend that fails its save is forced back to its plane of Origin (if it isn&rsquo;t there already) and can&rsquo;t return to your current plane for 24 hours by any means short of a wish spell.</p>","chat":"","unidentified":""},"source":"PHB pg. 234","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":null,"units":"inst"},"target":{"value":0,"width":null,"units":"any","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"cha","dc":null,"scaling":"spell","value":""},"level":7,"school":"evo","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dae":{"activeEquipped":false,"alwaysActive":false},"mess":{"templateTexture":""},"midi-qol":{"onUseMacroName":""},"itemacro":{"macro":{"_data":{"name":"Divine Word","type":"script","scope":"global","command":"////DAE Item Macro, requires CUB and About Time\n\n/**\n * Apply Divine Word to targeted tokens\n * @param {Number} targetHp \n * @param {Boolean} linked \n */\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nlet target = canvas.tokens.get(args[1]);\n\nasync function DivineWordApply(target, targetHp, linked) {\n    switch (targetHP) {\n        case (targetHp <= 20): {\n            if (linked = true) {\n                await tactor.update({ \"data.attributes.hp.value\": 0 });\n            } else if (linked = false) {\n                await target.update({ \"actorData.data.attributes.hp.value\": 0 })\n            }\n        }\n            break;\n        case (targetHp <= 30): {\n            await game.cub.addCondition([\"Blinded\", \"Deafened\", \"Stunned\"], target)\n            game.Gametime.doIn({ hours: 1 }, async () => {\n                game.cub.removeCondition([\"Blinded\", \"Deafened\", \"Stunned\"], target)\n            });\n        }\n            break;\n\n        case (targetHp <= 40): {\n            await game.cub.addCondition([\"Blinded\", \"Deafened\"], target)\n            game.Gametime.doIn({ minutes: 10 }, async () => {\n                game.cub.removeCondition([\"Blinded\", \"Deafened\", target])\n            });\n        }\n            break;\n        case (targetHp <= 50): {\n            await game.cub.addCondition(\"Deafened\", target)\n            game.Gametime.doIn({ minutes: 1 }, async () => {\n                game.cub.removeCondition(\"Deafened\", target)\n            });\n        }\n            break;\n    }\n}\nif (args[0] === \"on\") {\n    let targetHp = null;\n    let linked = null;\n    if (target.data.actorLink == true) {\n        targetHp = target.actor.data.data.attributes.hp.value\n        linked = true\n    } else {\n        targetHp = getProperty(target, \"actorData.data.attributes.hp\") || getProperty(target.actor, \"data.data.attributes.hp.value\")\n        linked = false\n    }\n    DivineWordApply(target, targetHp, linked)\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Divine Word","type":"script","scope":"global","command":"////DAE Item Macro, requires CUB and About Time\n\n/**\n * Apply Divine Word to targeted tokens\n * @param {Number} targetHp \n * @param {Boolean} linked \n */\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nlet target = canvas.tokens.get(args[1]);\n\nasync function DivineWordApply(target, targetHp, linked) {\n    switch (targetHP) {\n        case (targetHp <= 20): {\n            if (linked = true) {\n                await tactor.update({ \"data.attributes.hp.value\": 0 });\n            } else if (linked = false) {\n                await target.update({ \"actorData.data.attributes.hp.value\": 0 })\n            }\n        }\n            break;\n        case (targetHp <= 30): {\n            await game.cub.addCondition([\"Blinded\", \"Deafened\", \"Stunned\"], target)\n            game.Gametime.doIn({ hours: 1 }, async () => {\n                game.cub.removeCondition([\"Blinded\", \"Deafened\", \"Stunned\"], target)\n            });\n        }\n            break;\n\n        case (targetHp <= 40): {\n            await game.cub.addCondition([\"Blinded\", \"Deafened\"], target)\n            game.Gametime.doIn({ minutes: 10 }, async () => {\n                game.cub.removeCondition([\"Blinded\", \"Deafened\", target])\n            });\n        }\n            break;\n        case (targetHp <= 50): {\n            await game.cub.addCondition(\"Deafened\", target)\n            game.Gametime.doIn({ minutes: 1 }, async () => {\n                game.cub.removeCondition(\"Deafened\", target)\n            });\n        }\n            break;\n    }\n}\nif (args[0] === \"on\") {\n    let targetHp = null;\n    let linked = null;\n    if (target.data.actorLink == true) {\n        targetHp = target.actor.data.data.attributes.hp.value\n        linked = true\n    } else {\n        targetHp = getProperty(target, \"actorData.data.attributes.hp\") || getProperty(target.actor, \"data.data.attributes.hp.value\")\n        linked = false\n    }\n    DivineWordApply(target, targetHp, linked)\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/light-royal-3.jpg","effects":[{"_id":"Myt28nWsdGluTtkO","flags":{"dae":{"stackable":false,"specialDuration":["None"],"transfer":false,"macroRepeat":"none"}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/light-royal-3.jpg","label":"Divine Word","tint":"","transfer":false}]}
{"_id":"BdJOmZHsRt8GKEV2","name":"Hideous Laughter","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>A creature of your choice that you can see within range perceives everything as hilariously funny and falls into fits of laughter if this spell affects it. The target must succeed on a Wisdom saving throw or fall prone, becoming Incapacitated and unable to stand up for the Duration. A creature with an Intelligence score of 4 or less isn’t affected.</p>\n<p>At the end of each of its turns, and each time it takes damage, the target can make another Wisdom saving throw. The target has advantage on the saving throw if it’s triggered by damage. On a success, the spell ends.</p>","chat":"","unidentified":""},"source":"","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Tiny tarts and a feather that is waved in the air","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Incapacitated","mode":"+","targetSpecific":false,"id":1,"itemId":"q3HatlCWUJa7m80R","active":true,"_targets":[],"label":"Flags Condition"},{"modSpecKey":"flags.dnd5e.conditions","value":"Prone","mode":"+","targetSpecific":false,"id":2,"itemId":"q3HatlCWUJa7m80R","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/explosion-magenta-2.jpg","effects":[{"_id":"ypgf9rYsCtSlWzbH","flags":{"core":{"statusId":"combat-utility-belt.prone"},"combat-utility-belt":{"conditionId":"prone","overlay":false},"dae":{"stackable":false,"specialDuration":[],"macroRepeat":"none","transfer":false}},"changes":[{"key":"flags.midi-qol.grants.advantage.attack.all","value":"1","mode":0,"priority":50}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/prone.svg","label":"Prone","tint":"","transfer":false},{"_id":"hOcbGyBBIpjwLp6P","flags":{"core":{"statusId":"combat-utility-belt.incapacitated"},"combat-utility-belt":{"conditionId":"incapacitated","overlay":false},"dae":{"stackable":false,"specialDuration":[],"macroRepeat":"none","transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/incapacitated.svg","label":"Incapacitated","tint":"","transfer":false}]}
{"_id":"CGIrZkLJSKUZCzaz","name":"Sunbeam","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>A beam of brilliant light flashes out from your hand in a 5-foot-wide, 60-foot-long line. Each creature in the line must make a Constitution saving throw. On a failed save, a creature takes 6d8 radiant damage and is Blinded until your next turn. On a successful save, it takes half as much damage and isn’t b⁠linded by this spell. Undead and oozes have disadvantage on this saving throw.</p>\n<p>You can create a new line of radiance as your action on any turn until the spell ends.</p>\n<p>For the Duration, a mote of brilliant radiance shines in your hand. It sheds bright light in a 30-foot radius and dim light for an additional 30 feet. This light is sunlight.</p>","chat":"","unidentified":""},"source":"PHB pg. 279","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":60,"width":null,"units":"ft","type":"line"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["6d8","radiant"]],"versatile":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":6,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A magnifying glass","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Blinded","mode":"+","targetSpecific":false,"id":1,"itemId":"36XZH7ErzipKvuY8","active":true,"_targets":[]}],"equipActive":false,"alwaysActive":false},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/beam-royal-3.jpg","effects":[{"_id":"KHl6jtzrMk0x8ash","flags":{"core":{"statusId":"combat-utility-belt.blinded"},"combat-utility-belt":{"conditionId":"blinded","overlay":false},"dae":{"transfer":false}},"changes":[{"key":"data.abilities.cha.min","value":"","mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/blinded.svg","label":"Blinded","tint":"","transfer":false}]}
{"_id":"CPDlGQUUKkLUhU2q","name":"Stoneskin","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>This spell turns the flesh of a willing creature you touch as hard as stone. Until the spell ends, the target has resistance to nonmagical bludgeoning, piercing, and slashing damage.</p>","chat":"","unidentified":""},"source":"PHB pg. 278","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":4,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Diamond dust worth 100 gp, which the spell consumes","consumed":true,"cost":100,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"data.traits.dr.value","value":"physical","mode":"+","targetSpecific":false,"id":1,"itemId":"ccUx49HUGslLri7o","active":true,"_targets":[]}],"equipActive":false,"alwaysActive":false},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/protect-orange-2.jpg","effects":[{"_id":"fhvmjRblnjrDRxWO","flags":{"dae":{"transfer":false}},"changes":[{"key":"data.traits.dr.value","value":"physical","mode":0,"priority":0}],"duration":{},"icon":"systems/dnd5e/icons/spells/protect-orange-2.jpg","label":"Stoneskin","transfer":false}]}
{"_id":"CWojuH0EwSnKPJzf","name":"Aid","permission":{"default":0,"NQHxXfbiVgh4JBIs":3},"type":"spell","data":{"description":{"value":"<p>Your spell bolsters your allies with toughness and resolve. Choose up to three creatures within range. Each target's hit point maximum and current hit points increase by 5 for the duration.</p>\n                                                        <p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, a target's hit points increase by an additional 5 for each slot level above 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 211","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":8,"units":"hour"},"target":{"value":null,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":null,"units":""},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A tiny strip of white cloth.","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":true},"scaling":{"mode":"level","formula":""},"attributes":{"spelldc":10}},"flags":{"midi-qol":{"onUseMacroName":""},"dynamiceffects":{"equipActive":false,"alwaysActive":false,"effects":[{"modSpecKey":"data.attributes.hp.max","value":"5 * @spellLevel + @classes.paladin.levels","mode":"+","targetSpecific":false,"id":1,"itemId":"aAyxEwNPeiB4nsCs","active":true,"_targets":[],"label":"Attributes HP Max"},{"modSpecKey":"data.bonuses.mwak.damage","value":"(ceil(@classes.paladin.levels/2))d6","mode":"+","targetSpecific":false,"id":2,"itemId":"aAyxEwNPeiB4nsCs","active":true,"_targets":[]}]},"favtab":{"isFavourite":true},"dae":{"alwaysActive":false,"activeEquipped":false},"itemacro":{"macro":{"_data":{"name":"Aid","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nlet buf = (parseInt(args[1])-1) * 5;\nlet curHP = tactor.data.data.attributes.hp.value;\nlet curMax = tactor.data.data.attributes.hp.max;\n\nif (args[0] === \"on\") {\n    tactor.update({\"data.attributes.hp.value\": curHP+buf})\n} else {\n  if (curHP > (curMax)) {\n     tactor.update({\"data.attributes.hp.value\": curMax})\n  }\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Aid","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nlet buf = (parseInt(args[1])-1) * 5;\nlet curHP = tactor.data.data.attributes.hp.value;\nlet curMax = tactor.data.data.attributes.hp.max;\n\nif (args[0] === \"on\") {\n    tactor.update({\"data.attributes.hp.value\": curHP+buf})\n} else {\n  if (curHP > (curMax)) {\n     tactor.update({\"data.attributes.hp.value\": curMax})\n  }\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"exportSource":{"world":"testWorld","system":"dnd5e","coreVersion":"0.7.7","systemVersion":"1.1.1"},"core":{"sourceId":"Item.F6gMC9VPMrxfyGGN"},"mess":{"templateTexture":""}},"img":"systems/dnd5e/icons/spells/heal-sky-1.jpg","effects":[{"_id":"9lafpgID8ffkvJ9q","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"}},"changes":[{"key":"data.attributes.hp.max","value":"5 * (@spellLevel - 1)","mode":2,"priority":20},{"key":"macro.itemMacro","value":"@spellLevel @data.attributes.hp.max","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/heal-sky-1.jpg","label":"Aid","tint":"","transfer":false}]}
{"_id":"Cb8qfKv8PmvasTzm","name":"Protection from Poison","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You touch a creature. If it is poisoned, you neutralize the poison. If more than one poison afflicts the target, you neutralize one poison that you know is present, or you neutralize one at random.</p>\n<p>For the duration, the target has advantage on saving throws against being poisoned, and it has resistance to poison damage.</p>","chat":"","unidentified":""},"source":"PHB pg. 270","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.traits.dr.value","value":"poison","mode":"+","targetSpecific":false,"id":1,"itemId":"RfhTb4CznKyRRdrn","active":true,"_targets":[]}]}},"img":"systems/dnd5e/icons/spells/protect-acid-1.jpg","effects":[{"_id":"KVURJew2xJb5OH6P","flags":{"dae":{"transfer":false}},"changes":[{"key":"data.traits.dr.value","value":"poison","mode":0,"priority":0}],"duration":{},"icon":"systems/dnd5e/icons/spells/protect-acid-1.jpg","label":"Protection from Poison","transfer":false}]}
{"_id":"Czam16c0aXlcuPo3","name":"Flame Blade","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You evoke a fiery blade in your free hand. The blade is similar in size and shape to a Scimitar, and it lasts for the Duration. If you let go of the blade, it disappears, but you can evoke the blade again as a Bonus Action.</p><p>You can use your action to make a melee spell Attack with the fiery blade. On a hit, the target takes 3d6 fire damage.</p><p>The flaming blade sheds bright light in a 10-foot radius and dim light for an additional 10 feet.</p><p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d6 for every two slot levels above 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 242","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":"0","chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Leaf of sumac","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dae":{"activeEquipped":false,"alwaysActive":false},"core":{"sourceId":"Item.0r4QmdC8ZIFaryNp"},"itemacro":{"macro":{"_data":{"name":"Flame Blade","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @item.level\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\n/**\n * Create Flame Blade item in inventory\n */\nif (args[0] === \"on\") {\n  let weaponDamge = 2 + Math.floor(DAEItem.data.level / 2);\n  await tactor.createOwnedItem(\n    {\n      \"name\": \"Summoned Flame Blade\",\n      \"type\": \"weapon\",\n      \"data\": {\n        \"quantity\": 1,\n        \"activation\": {\n          \"type\": \"action\",\n          \"cost\": 1,\n          \"condition\": \"\"\n        },\n        \"target\": {\n          \"value\": 1,\n          \"width\": null,\n          \"units\": \"\",\n          \"type\": \"creature\"\n        },\n        \"range\": {\n          \"value\": 5,\n        },\n        \"ability\": \"\",\n        \"actionType\": \"msak\",\n        \"attackBonus\": \"0\",\n        \"damage\": {\n          \"parts\": [\n            [\n              `${weaponDamge}d6`,\n              \"fire\"\n            ]\n          ],\n        },\n        \"weaponType\": \"simpleM\",\n        \"proficient\": true,\n      },\n      \"img\": DAEItem.img,\n    }\n  );\n  ui.notifications.notify(\"A Flame Blade appears in your inventory\")\n}\n\n// Delete Flame Blade\nif (args[0] === \"off\") {\n  let castItem = tactor.data.items.find(i => i.name === \"Summoned Flame Blade\" && i.type === \"weapon\")\n  if(castItem) await tactor.deleteOwnedItem(castItem._id)\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Flame Blade","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @item.level\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\n/**\n * Create Flame Blade item in inventory\n */\nif (args[0] === \"on\") {\n  let weaponDamge = 2 + Math.floor(DAEItem.data.level / 2);\n  await tactor.createOwnedItem(\n    {\n      \"name\": \"Summoned Flame Blade\",\n      \"type\": \"weapon\",\n      \"data\": {\n        \"quantity\": 1,\n        \"activation\": {\n          \"type\": \"action\",\n          \"cost\": 1,\n          \"condition\": \"\"\n        },\n        \"target\": {\n          \"value\": 1,\n          \"width\": null,\n          \"units\": \"\",\n          \"type\": \"creature\"\n        },\n        \"range\": {\n          \"value\": 5,\n        },\n        \"ability\": \"\",\n        \"actionType\": \"msak\",\n        \"attackBonus\": \"0\",\n        \"damage\": {\n          \"parts\": [\n            [\n              `${weaponDamge}d6`,\n              \"fire\"\n            ]\n          ],\n        },\n        \"weaponType\": \"simpleM\",\n        \"proficient\": true,\n      },\n      \"img\": DAEItem.img,\n    }\n  );\n  ui.notifications.notify(\"A Flame Blade appears in your inventory\")\n}\n\n// Delete Flame Blade\nif (args[0] === \"off\") {\n  let castItem = tactor.data.items.find(i => i.name === \"Summoned Flame Blade\" && i.type === \"weapon\")\n  if(castItem) await tactor.deleteOwnedItem(castItem._id)\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/enchant-orange-2.jpg","effects":[{"_id":"Hbbgg0VPMOMqUVyZ","flags":{"dae":{"stackable":false,"specialDuration":["None"],"transfer":false,"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"@item.level @attributes.spellcasting","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/enchant-orange-2.jpg","label":"Flame Blade","tint":"","transfer":false}]}
{"_id":"EsNIVoGQLOhgp5pA","name":"Spider Climb","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>Until the spell ends, one willing creature you touch gains the ability to move up, down, and across vertical surfaces and upside down along ceilings, while leaving its hands free. The target also gains a climbing speed equal to its walking speed.</p>","chat":"","unidentified":""},"source":"PHB pg. 277","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A drop of bitumen and a spider","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.attributes.speed.special","value":"@attributes.speed.value Climb","mode":"+","targetSpecific":false,"id":1,"itemId":"1RuE9QEAMV24ZiAS","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"core":{"sourceId":"Item.EWlYTVbRHdyv5wkw"},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/shielding-spirit-1.jpg","effects":[{"_id":"B1Ms7nmQEQssY0ZY","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"alignment":"","type":"","aura":"None","radius":null,"save":"","savedc":null}},"changes":[{"key":"data.attributes.movement.climb","value":"@attributes.movement.walk","mode":4,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/shielding-spirit-1.jpg","label":"Spider Climb","tint":"","transfer":false}]}
{"_id":"Ffuih3Tpj4DRxh3B","name":"Darkness","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>Magical darkness spreads from a point you choose within range to fill a 15-foot-radius sphere for the duration. The darkness spreads around corners. A creature with darkvision can't see through this darkness, and nonmagical light can't illuminate it.</p><p>If the point you choose is on an object you are holding or one that isn't being worn or carried, the darkness emanates from the object and moves with it. Completely covering the source of the darkness with an opaque object, such as a bowl or a helm, blocks the darkness.</p><p>If any of this spell's area overlaps with an area of light created by a spell of 2nd level or lower, the spell that created the light is dispelled.</p>","chat":"","unidentified":""},"source":"PHB pg. 230","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"evo","components":{"value":"","vocal":true,"somatic":false,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Bat fur and a drop of pitch or piece of coal","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"itemacro":{"macro":{"_data":{"name":"Darkness","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId) || token;\n\n\nif (args[0] === \"on\") {\n\n    let templateData = {\n        t: \"circle\",\n        user: game.user._id,\n        distance: 15,\n        direction: 0,\n        x: 0,\n        y: 0,\n        fillColor: game.user.color,\n        flags: {\n            DAESRD: {\n                Darkness: {\n                    ActorId: tactor.id\n                }\n            }\n        }\n    };\n\n    Hooks.once(\"createMeasuredTemplate\", async (scene, template) => {\n        let radius = canvas.grid.size * (template.distance / canvas.grid.grid.options.dimensions.distance)\n        circleWall(template.x, template.y, radius)\n        await canvas.templates.deleteMany(template._id);\n    });\n\n    let template = new game.dnd5e.canvas.AbilityTemplate(templateData);\n    template.actorSheet = tactor.sheet;\n    template.drawPreview();\n\n    async function circleWall(cx, cy, radius) {\n        const step = 30;\n        for (let i = step; i <= 360; i += step) {\n            let theta0 = toRadians(i - step);\n            let theta1 = toRadians(i);\n\n            let lastX = Math.floor(radius * Math.cos(theta0) + cx);\n            let lastY = Math.floor(radius * Math.sin(theta0) + cy);\n            let newX = Math.floor(radius * Math.cos(theta1) + cx);\n            let newY = Math.floor(radius * Math.sin(theta1) + cy);\n\n            await Wall.create({\n                c: [lastX, lastY, newX, newY],\n                move: CONST.WALL_MOVEMENT_TYPES.NONE,\n                sense: CONST.WALL_SENSE_TYPES.NORMAL,\n                dir: CONST.WALL_DIRECTIONS.BOTH,\n                door: CONST.WALL_DOOR_TYPES.NONE,\n                ds: CONST.WALL_DOOR_STATES.CLOSED,\n                flags: {\n                    DAESRD: {\n                        Darkness: {\n                            ActorId: tactor.id\n                        }\n                    }\n                }\n            });\n        }\n\n    }\n\n}\n\nif (args[0] === \"off\") {\n    async function removeWalls() {\n        let darkWalls = canvas.walls.placeables.filter(w => w.data.flags?.DAESRD?.Darkness?.ActorId === tactor.id)\n        let wallArray = darkWalls.map(function (w) {\n            return w.data._id\n        })\n        await canvas.walls.deleteMany(wallArray)\n    }\n    removeWalls()\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Darkness","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId) || token;\n\n\nif (args[0] === \"on\") {\n\n    let templateData = {\n        t: \"circle\",\n        user: game.user._id,\n        distance: 15,\n        direction: 0,\n        x: 0,\n        y: 0,\n        fillColor: game.user.color,\n        flags: {\n            DAESRD: {\n                Darkness: {\n                    ActorId: tactor.id\n                }\n            }\n        }\n    };\n\n    Hooks.once(\"createMeasuredTemplate\", async (scene, template) => {\n        let radius = canvas.grid.size * (template.distance / canvas.grid.grid.options.dimensions.distance)\n        circleWall(template.x, template.y, radius)\n        await canvas.templates.deleteMany(template._id);\n    });\n\n    let template = new game.dnd5e.canvas.AbilityTemplate(templateData);\n    template.actorSheet = tactor.sheet;\n    template.drawPreview();\n\n    async function circleWall(cx, cy, radius) {\n        const step = 30;\n        for (let i = step; i <= 360; i += step) {\n            let theta0 = toRadians(i - step);\n            let theta1 = toRadians(i);\n\n            let lastX = Math.floor(radius * Math.cos(theta0) + cx);\n            let lastY = Math.floor(radius * Math.sin(theta0) + cy);\n            let newX = Math.floor(radius * Math.cos(theta1) + cx);\n            let newY = Math.floor(radius * Math.sin(theta1) + cy);\n\n            await Wall.create({\n                c: [lastX, lastY, newX, newY],\n                move: CONST.WALL_MOVEMENT_TYPES.NONE,\n                sense: CONST.WALL_SENSE_TYPES.NORMAL,\n                dir: CONST.WALL_DIRECTIONS.BOTH,\n                door: CONST.WALL_DOOR_TYPES.NONE,\n                ds: CONST.WALL_DOOR_STATES.CLOSED,\n                flags: {\n                    DAESRD: {\n                        Darkness: {\n                            ActorId: tactor.id\n                        }\n                    }\n                }\n            });\n        }\n\n    }\n\n}\n\nif (args[0] === \"off\") {\n    async function removeWalls() {\n        let darkWalls = canvas.walls.placeables.filter(w => w.data.flags?.DAESRD?.Darkness?.ActorId === tactor.id)\n        let wallArray = darkWalls.map(function (w) {\n            return w.data._id\n        })\n        await canvas.walls.deleteMany(wallArray)\n    }\n    removeWalls()\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/evil-eye-red-2.jpg","effects":[{"_id":"6URqXYM8cSWbMZ53","flags":{"dae":{"stackable":false,"specialDuration":[],"transfer":false}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/evil-eye-red-2.jpg","label":"Darkness","tint":"","transfer":false}]}
{"_id":"FnLpkm6fkxiunoN0","name":"Arcane Sword","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>You create a sword-shaped plane of force that hovers within range. It lasts for the Duration.</p><p>When the sword appears, you make a melee spell Attack against a target of your choice within 5 feet of the sword. On a hit, the target takes 3d10 force damage. Until the spell ends, you can use a Bonus Action on each of your turns to move the sword up to 20 feet to a spot you can see and repeat this Attack against the same target or a different one.</p><p>Until the spell ends, you can use a b⁠onus action on each of your turns to move the sword up to 20 feet to a spot you can see and repeat this Attack against the same target or a different one.</p>","chat":"","unidentified":""},"source":"","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":"0","chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":7,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A miniature platinum sword with a grip and pommel of copper and zinc, worth 250gp","consumed":false,"cost":250,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"itemacro":{"macro":{"_data":{"name":"Arcane Sword","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet casterToken = canvas.tokens.get(lastArg.tokenId) || token;\nconst DAEitem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEitem.data.save\n/**\n * Create Arcane Sword item in inventory\n */\nif (args[0] === \"on\") {\n    let image = DAEitem.img;\n    let range = MeasuredTemplate.create({\n        t: \"circle\",\n        user: game.user._id,\n        x: casterToken.x + canvas.grid.size / 2,\n        y: casterToken.y + canvas.grid.size / 2,\n        direction: 0,\n        distance: 60,\n        borderColor: \"#FF0000\",\n        flags: {\n            DAESRD: {\n                ArcaneSwordRange: {\n                    ActorId: tactor.id\n                }\n            }\n        }\n        //fillColor: \"#FF3366\",\n    });\n    range.then(result => {\n        let templateData = {\n            t: \"rect\",\n            user: game.user._id,\n            distance: 7,\n            direction: 45,\n            x: 0,\n            y: 0,\n            flags: {\n                DAESRD: {\n                    ArcaneSword: {\n                        ActorId: tactor.id\n                    }\n                }\n            },\n            fillColor: game.user.color\n        }\n        Hooks.once(\"createMeasuredTemplate\", deleteTemplates);\n\n        let template = new game.dnd5e.canvas.AbilityTemplate(templateData)\n        template.actorSheet = tactor.sheet;\n        template.drawPreview()\n\n        async function deleteTemplates(scene, template) {\n            let removeTemplates = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.ArcaneSwordRange?.ActorId === tactor.id);\n            await canvas.templates.deleteMany([removeTemplates[0].id]);\n        };\n\n    })\n    await tactor.createOwnedItem(\n        {\n            \"name\": \"Summoned Arcane Sword\",\n            \"type\": \"weapon\",\n            \"data\": {\n                \"quantity\": 1,\n                \"activation\": {\n                    \"type\": \"action\",\n                    \"cost\": 1,\n                    \"condition\": \"\"\n                },\n                \"target\": {\n                    \"value\": 1,\n                    \"type\": \"creature\"\n                },\n                \"range\": {\n                    \"value\": 5,\n                    \"long\": null,\n                    \"units\": \"\"\n                },\n                \"ability\": DAEitem.data.ability,\n                \"actionType\": \"msak\",\n                \"attackBonus\": \"0\",\n                \"chatFlavor\": \"\",\n                \"critical\": null,\n                \"damage\": {\n                    \"parts\": [\n                        [\n                            `3d10`,\n                            \"force\"\n                        ]\n                    ],\n                    \"versatile\": \"\"\n                },\n                \"weaponType\": \"simpleM\",\n                \"proficient\": true,\n            },\n            \"flags\": {\n                \"DAESRD\": {\n                  \"ArcaneSword\":\n                    tactor.id\n                }\n              },\n            \"img\": image,\n        }\n    );\n    ui.notifications.notify(\"Weapon created in your inventory\")\n}\n\n// Delete Flame Blade\nif (args[0] === \"off\") {\n    let sword = tactor.items.find(i => i.data.flags?.DAESRD?.ArcaneSword === tactor.id)\n  let template = canvas.templates.placeables.filter(i => i.data.flags.DAESRD.ArcaneSword?.ActorId === tactor.id)\n  if(sword) await tactor.deleteOwnedItem(sword.id);\n  if(template) await canvas.templates.deleteMany(template[0].id)\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Arcane Sword","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet casterToken = canvas.tokens.get(lastArg.tokenId) || token;\nconst DAEitem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEitem.data.save\n/**\n * Create Arcane Sword item in inventory\n */\nif (args[0] === \"on\") {\n    let image = DAEitem.img;\n    let range = MeasuredTemplate.create({\n        t: \"circle\",\n        user: game.user._id,\n        x: casterToken.x + canvas.grid.size / 2,\n        y: casterToken.y + canvas.grid.size / 2,\n        direction: 0,\n        distance: 60,\n        borderColor: \"#FF0000\",\n        flags: {\n            DAESRD: {\n                ArcaneSwordRange: {\n                    ActorId: tactor.id\n                }\n            }\n        }\n        //fillColor: \"#FF3366\",\n    });\n    range.then(result => {\n        let templateData = {\n            t: \"rect\",\n            user: game.user._id,\n            distance: 7,\n            direction: 45,\n            x: 0,\n            y: 0,\n            flags: {\n                DAESRD: {\n                    ArcaneSword: {\n                        ActorId: tactor.id\n                    }\n                }\n            },\n            fillColor: game.user.color\n        }\n        Hooks.once(\"createMeasuredTemplate\", deleteTemplates);\n\n        let template = new game.dnd5e.canvas.AbilityTemplate(templateData)\n        template.actorSheet = tactor.sheet;\n        template.drawPreview()\n\n        async function deleteTemplates(scene, template) {\n            let removeTemplates = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.ArcaneSwordRange?.ActorId === tactor.id);\n            await canvas.templates.deleteMany([removeTemplates[0].id]);\n        };\n\n    })\n    await tactor.createOwnedItem(\n        {\n            \"name\": \"Summoned Arcane Sword\",\n            \"type\": \"weapon\",\n            \"data\": {\n                \"quantity\": 1,\n                \"activation\": {\n                    \"type\": \"action\",\n                    \"cost\": 1,\n                    \"condition\": \"\"\n                },\n                \"target\": {\n                    \"value\": 1,\n                    \"type\": \"creature\"\n                },\n                \"range\": {\n                    \"value\": 5,\n                    \"long\": null,\n                    \"units\": \"\"\n                },\n                \"ability\": DAEitem.data.ability,\n                \"actionType\": \"msak\",\n                \"attackBonus\": \"0\",\n                \"chatFlavor\": \"\",\n                \"critical\": null,\n                \"damage\": {\n                    \"parts\": [\n                        [\n                            `3d10`,\n                            \"force\"\n                        ]\n                    ],\n                    \"versatile\": \"\"\n                },\n                \"weaponType\": \"simpleM\",\n                \"proficient\": true,\n            },\n            \"flags\": {\n                \"DAESRD\": {\n                  \"ArcaneSword\":\n                    tactor.id\n                }\n              },\n            \"img\": image,\n        }\n    );\n    ui.notifications.notify(\"Weapon created in your inventory\")\n}\n\n// Delete Flame Blade\nif (args[0] === \"off\") {\n    let sword = tactor.items.find(i => i.data.flags?.DAESRD?.ArcaneSword === tactor.id)\n  let template = canvas.templates.placeables.filter(i => i.data.flags.DAESRD.ArcaneSword?.ActorId === tactor.id)\n  if(sword) await tactor.deleteOwnedItem(sword.id);\n  if(template) await canvas.templates.deleteMany(template[0].id)\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/slice-orange-3.jpg","effects":[{"_id":"YlwXERtZ3aqSJD4g","flags":{"dae":{"stackable":false,"specialDuration":["None"],"transfer":false,"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"@attributes.spellcasting","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/slice-orange-3.jpg","label":"Arcane Sword","origin":"Item.lyClx971FpCZPlbQ","tint":"","transfer":false}]}
{"_id":"Gm518PXVa9c81fdB","name":"Dominate Beast","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You attempt to beguile a beast that you can see within range. It must succeed on a Wisdom saving throw or be charmed by you for the duration. If you or creatures that are friendly to you are fighting it, it has advantage on the saving throw.</p>\n<p>While the beast is charmed, you have a telepathic link with it as long as the two of you are on the same plane of existence. You can use this telepathic link to issue commands to the creature while you are conscious (no action required), which it does its best to obey. You can specify a simple and general course of action, such as \"Attack that creature,\" \"Run over there,\" or \"Fetch that object.\" If the creature completes the order and doesn't receive further direction from you, it defends and preserves itself to the best of its ability.</p>\n<p>You can use your action to take total and precise control of the target. Until the end of your next turn, the creature takes only the actions you choose, and doesn't do anything that you don't allow it to do. During this time, you can also cause the creature to use a reaction, but this requires you to use your own reaction as well.</p>\n<p>Each time the target takes damage, it makes a new Wisdom saving throw against the spell. If the saving throw succeeds, the spell ends.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell with a 5th-level spell slot, the duration is concentration, up to 10 minutes. When you use a 6th-level spell slot, the duration is concentration, up to 1 hour. When you use a spell slot of 7th level or higher, the duration is concentration, up to 8 hours.</p>","chat":"","unidentified":""},"source":"PHB pg. 234","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":4,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"v1hPfUV2Vn5h2yNH","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/air-burst-jade-3.jpg","effects":[{"_id":"jKssZMhxRZ8fwvBx","flags":{"core":{"statusId":"combat-utility-belt.charmed"},"combat-utility-belt":{"conditionId":"charmed"},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/charmed.svg","label":"Charmed","tint":"","transfer":false}]}
{"_id":"HGy1nRLnLAv3zHHD","name":"Blindness/Deafness (non-cub)","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>You can blind or deafen a foe. Choose one creature that you can see within range to make a Constitution saving throw. If it fails, the target is either blinded or deafened (your choice) for the duration. At the end of each of its turns, the target can make a Constitution saving throw. On a success, the spell ends.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 219","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"nec","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"\"BlindDeaf\" @target","mode":"+","targetSpecific":false,"id":1,"itemId":"YzSbwD21Q0oxKmEU","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Blindness/Deafness","type":"script","scope":"global","command":"","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/evil-eye-red-2.jpg","effects":[{"_id":"ZkjHaogXrbQJ2CFz","flags":{"core":{"statusId":"blind"},"dae":{"stackable":false,"specialDuration":"None","macroRepeat":"none","transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/svg/blind.svg","label":"Blind","tint":"","transfer":false},{"_id":"zUnsyPssbUBMmrOq","flags":{"core":{"statusId":"deaf"},"dae":{"stackable":false,"specialDuration":"None","macroRepeat":"none","transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/svg/deaf.svg","label":"Deaf","tint":"","transfer":false}]}
{"_id":"HVWI8wdLs54LkhUX","name":"Fear","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You project a phantasmal image of a creature's worst fears. Each creature in a 30-foot cone must succeed on a Wisdom saving throw or drop whatever it is holding and become Frightened for the duration.</p>\n<p>While Frightened by this spell, a creature must take the Dash action and move away from you by the safest available route on each of its turns, unless there is nowhere to move. If the creature ends its turn in a location where it doesn't have line of sight to you, the creature can make a Wisdom saving throw. On a successful save, the spell ends for that creature.</p>","chat":"","unidentified":""},"source":"PHB pg. 239","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":30,"width":null,"units":"ft","type":"cone"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":3,"school":"ill","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A white feather or the heart of a hen.","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Frightened","mode":"+","targetSpecific":false,"id":1,"itemId":"QDrZkRDh3yKlVjlf","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/horror-eerie-2.jpg","effects":[{"_id":"1TsHKFz7mHARKLTA","flags":{"core":{"statusId":"combat-utility-belt.frightened"},"combat-utility-belt":{"conditionId":"frightened"},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/frightened.svg","label":"Frightened","tint":"","transfer":false}]}
{"_id":"IMBuVsCM4tEgQT9y","name":"Dominate Monster","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You attempt to beguile a creature that you can see within range. It must succeed on a Wisdom saving throw or be charmed by you for the duration. If you or creatures that are friendly to you are fighting it, it has advantage on the saving throw.</p>\n<p>While the creature is charmed, you have a telepathic link with it as long as the two of you are on the same plane of existence. You can use this telepathic link to issue commands to the creature while you are conscious (no action required), which it does its best to obey. You can specify a simple and general course of action, such as \"Attack that creature,\" \"Run over there,\" or \"Fetch that object.\" If the creature completes the order and doesn't receive further direction from you, it defends and preserves itself to the best of its ability.</p>\n<p>You can use your action to take total and precise control of the target. Until the end of your next turn, the creature takes only the actions you choose, and doesn't do anything that you don't allow it to do. During this time, you can also cause the creature to use a reaction, but this requires you to use your own reaction as well.</p>\n<p>Each time the target takes damage, it makes a new Wisdom saving throw against the spell. If the saving throw succeeds, the spell ends.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell with a 9th-level spell slot, the duration is concentration, up to 8 hours.</p>","chat":"","unidentified":""},"source":"PHB pg. 235","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":8,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"zjOy4iyroppxddYp","active":true,"_targets":[]}]},"mess":{"templateTexture":""},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/air-burst-magenta-3.jpg","effects":[{"_id":"cPgOGiAQd2Uy6tY8","flags":{"core":{"statusId":"combat-utility-belt.charmed"},"combat-utility-belt":{"conditionId":"charmed","overlay":false},"dae":{"stackable":false,"specialDuration":[],"macroRepeat":"none","transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/charmed.svg","label":"Charmed","tint":"","transfer":false}]}
{"_id":"IsJxWYNAOYYw2apn","name":"Protection from Energy","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>For the duration, the willing creature you touch has resistance to one damage type of your choice: acid, cold, fire, lightning, or thunder.</p>","chat":"","unidentified":""},"source":"PHB pg. 270","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":3,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"ProtectionFromEnergy @target ","mode":"+","targetSpecific":false,"id":1,"itemId":"KKNq69wypjHpwo1b","active":true,"_targets":[],"label":"Macro Execute"}]},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Protection from Energy","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\n  if (args[0] === \"on\") {\n    new Dialog({\n      title: 'Choose a damage type',\n      content: `\n          <form class=\"flexcol\">\n            <div class=\"form-group\">\n              <select id=\"element\">\n                <option value=\"acid\">Acid</option>\n                <option value=\"cold\">Cold</option>\n                <option value=\"fire\">Fire</option>\n                <option value=\"lightning\">Lightning</option>\n                <option value=\"thunder\">Thunder</option>\n              </select>\n            </div>\n          </form>\n        `,\n      buttons: {\n        yes: {\n          icon: '<i class=\"fas fa-check\"></i>',\n          label: 'Yes',\n          callback: (html) => {\n            let element = html.find('#element').val();\n            let resistances = tactor.data.data.traits.dr.value;\n            resistances.push(element);\n            tactor.update({ \"data.traits.dr.value\": resistances });\n            DAE.setFlag(tactor, 'ProtectionFromEnergy', element);\n            ChatMessage.create({ content: `${tactor.name} gains resistance to ${element}` });\n          }\n        },\n      },\n    }).render(true);\n  }\n  if (args[0] === \"off\") {\n    let element = DAE.getFlag(tactor, 'ProtectionFromEnergy');\n    let resistances = tactor.data.data.traits.dr.value;\n    const index = resistances.indexOf(element);\n    resistances.splice(index, 1);\n    tactor.update({ \"data.traits.dr.value\": resistances });\n    DAE.unsetFlag(tactor, 'ProtectionFromEnergy');\n    ChatMessage.create({ content: `${tactor.name} loses resistance to ${element}`});\n  }","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Protection from Energy","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\n  if (args[0] === \"on\") {\n    new Dialog({\n      title: 'Choose a damage type',\n      content: `\n          <form class=\"flexcol\">\n            <div class=\"form-group\">\n              <select id=\"element\">\n                <option value=\"acid\">Acid</option>\n                <option value=\"cold\">Cold</option>\n                <option value=\"fire\">Fire</option>\n                <option value=\"lightning\">Lightning</option>\n                <option value=\"thunder\">Thunder</option>\n              </select>\n            </div>\n          </form>\n        `,\n      buttons: {\n        yes: {\n          icon: '<i class=\"fas fa-check\"></i>',\n          label: 'Yes',\n          callback: (html) => {\n            let element = html.find('#element').val();\n            let resistances = tactor.data.data.traits.dr.value;\n            resistances.push(element);\n            tactor.update({ \"data.traits.dr.value\": resistances });\n            DAE.setFlag(tactor, 'ProtectionFromEnergy', element);\n            ChatMessage.create({ content: `${tactor.name} gains resistance to ${element}` });\n          }\n        },\n      },\n    }).render(true);\n  }\n  if (args[0] === \"off\") {\n    let element = DAE.getFlag(tactor, 'ProtectionFromEnergy');\n    let resistances = tactor.data.data.traits.dr.value;\n    const index = resistances.indexOf(element);\n    resistances.splice(index, 1);\n    tactor.update({ \"data.traits.dr.value\": resistances });\n    DAE.unsetFlag(tactor, 'ProtectionFromEnergy');\n    ChatMessage.create({ content: `${tactor.name} loses resistance to ${element}`});\n  }","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/protect-jade-2.jpg","effects":[{"_id":"OHrHlzcUFOp2wOBv","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/protect-jade-2.jpg","label":"Protection from Energy","tint":"","transfer":false}]}
{"_id":"J7c5kq4xYkx3WiFI","name":"Regenerate","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You touch a creature and stimulate its natural Healing ability. The target regains 4d8 + 15 Hit Points. For the Duration of the spell, the target regains 1 hit point at the start of each of its turns (10 h⁠it points each minute).</p><p>The target’s severed body members (fingers, legs, tails, and so on), if any, are restored after 2 minutes. If you have the severed part and hold it to the stump, the spell instantaneously causes the limb to knit to the stump.</p>","chat":"","unidentified":""},"source":"PHB pg. 271","activation":{"type":"minute","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"heal","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["4d8 + 15","healing"]],"versatile":"1"},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":7,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A prayer wheel and holy water","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Regenerate","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @tactor\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\n/**\n * Set hooks to fire on combat update and world time update\n */\nif (args[0] === \"on\") {\n\n    // If 6s elapses, update HP by one\n    const timeHookId = Hooks.on(\"updateWorldTime\", (currentTime, updateInterval) => {\n        if (game.combats === []) return;\n        let effect = tactor.effects.find(i => i.data.label === \"Regenerate\");\n        let applyTime = effect.data.duration.startTime;\n        let expireTime = applyTime + effect.data.duration.seconds;\n        let healing = roundCount(currentTime, updateInterval, applyTime, expireTime);\n        console.log(`${tactor.name} healed for ${healing}`);\n        tactor.applyDamage(-healing);\n    }\n    );\n\n    tactor.setFlag(\"world\", \"Regenerate\", {\n        timeHook: timeHookId\n    }\n    );\n}\n\nif (args[0] === \"each\") {\n    tactor.applyDamage(-1);\n    ChatMessage.create({ content: `${tactor.name} gains 1 hp` });\n}\n\nif (args[0] === \"off\") {\n    async function RegenerateOff() {\n        let flag = await tactor.getFlag('world', 'Regenerate');\n        Hooks.off(\"updateWorldTime\", flag.timeHook);\n        tactor.unsetFlag(\"world\", \"Regenerate\");\n        console.log(\"Regenerate removed\");\n    };\n    RegenerateOff();\n}\n\n\n/**\n * \n * @param {Number} currentTime current world time\n * @param {Number} updateInterval amount the world time was incremented\n * @param {Number} applyTime time the effect was applied\n * @param {Number} expireTime time the effect should expire\n */\nfunction roundCount(currentTime, updateInterval, applyTime, expireTime) {\n    // Don't count time before applyTime\n    if (currentTime - updateInterval < applyTime) {\n        let offset = applyTime - (currentTime - updateInterval);\n        updateInterval -= offset;\n    }\n\n    // Don't count time after expireTime\n    if (currentTime > expireTime) {\n        let offset = currentTime - expireTime;\n        currentTime = expireTime;\n        updateInterval -= offset;\n    }\n\n    let sTime = currentTime - updateInterval;\n    let fRound = sTime + 6 - (sTime % 6); // Time of the first round\n    let lRound = currentTime - (currentTime % 6); // Time of the last round\n    let roundCount = 0;\n    if (lRound >= fRound)\n        roundCount = (lRound - fRound) / 6 + 1;\n\n    return roundCount;\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Regenerate","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @tactor\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\n/**\n * Set hooks to fire on combat update and world time update\n */\nif (args[0] === \"on\") {\n\n    // If 6s elapses, update HP by one\n    const timeHookId = Hooks.on(\"updateWorldTime\", (currentTime, updateInterval) => {\n        if (game.combats === []) return;\n        let effect = tactor.effects.find(i => i.data.label === \"Regenerate\");\n        let applyTime = effect.data.duration.startTime;\n        let expireTime = applyTime + effect.data.duration.seconds;\n        let healing = roundCount(currentTime, updateInterval, applyTime, expireTime);\n        console.log(`${tactor.name} healed for ${healing}`);\n        tactor.applyDamage(-healing);\n    }\n    );\n\n    tactor.setFlag(\"world\", \"Regenerate\", {\n        timeHook: timeHookId\n    }\n    );\n}\n\nif (args[0] === \"each\") {\n    tactor.applyDamage(-1);\n    ChatMessage.create({ content: `${tactor.name} gains 1 hp` });\n}\n\nif (args[0] === \"off\") {\n    async function RegenerateOff() {\n        let flag = await tactor.getFlag('world', 'Regenerate');\n        Hooks.off(\"updateWorldTime\", flag.timeHook);\n        tactor.unsetFlag(\"world\", \"Regenerate\");\n        console.log(\"Regenerate removed\");\n    };\n    RegenerateOff();\n}\n\n\n/**\n * \n * @param {Number} currentTime current world time\n * @param {Number} updateInterval amount the world time was incremented\n * @param {Number} applyTime time the effect was applied\n * @param {Number} expireTime time the effect should expire\n */\nfunction roundCount(currentTime, updateInterval, applyTime, expireTime) {\n    // Don't count time before applyTime\n    if (currentTime - updateInterval < applyTime) {\n        let offset = applyTime - (currentTime - updateInterval);\n        updateInterval -= offset;\n    }\n\n    // Don't count time after expireTime\n    if (currentTime > expireTime) {\n        let offset = currentTime - expireTime;\n        currentTime = expireTime;\n        updateInterval -= offset;\n    }\n\n    let sTime = currentTime - updateInterval;\n    let fRound = sTime + 6 - (sTime % 6); // Time of the first round\n    let lRound = currentTime - (currentTime % 6); // Time of the last round\n    let roundCount = 0;\n    if (lRound >= fRound)\n        roundCount = (lRound - fRound) / 6 + 1;\n\n    return roundCount;\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/heal-jade-3.jpg","effects":[{"_id":"gMvUlhgIUWdHEJ6r","flags":{"dae":{"stackable":false,"specialDuration":["None"],"transfer":false,"macroRepeat":"startEveryTurn"}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/heal-jade-3.jpg","label":"Regenerate","tint":"","transfer":false}]}
{"_id":"Jw2dI2nK3KlUOacF","name":"Darkvision","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You touch a willing creature to grant it the ability to see in the dark. For the duration, that creature has darkvision out to a range of 60 feet.</p>","chat":"","unidentified":""},"source":"PHB pg. 230","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":8,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"Either a pinch of dried carrot or an agate","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""},"core":{"sourceId":"Item.PWtHJNYiQPgnOqcb"},"itemacro":{"macro":{"_data":{"name":"Darkvision","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nlet dimVision = target.data.dimSight;\nif (args[0] === \"on\") {\n    DAE.setFlag(tactor, 'darkvisionSpell', dimVision);\n    target.update({\"dimSight\" : 60 });\n    ChatMessage.create({content: `${target.name}'s vision has been improved`});\n}\nif(args[0] === \"off\") {\n    let sight = DAE.getFlag(tactor, 'darkvisionSpell');\n    target.update({\"dimSight\" : sight });\n    DAE.unsetFlag(tactor, 'darkvisionSpell');\n    ChatMessage.create({content: `${target.name}'s vision has been returned`});\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Darkvision","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nlet dimVision = target.data.dimSight;\nif (args[0] === \"on\") {\n    DAE.setFlag(tactor, 'darkvisionSpell', dimVision);\n    target.update({\"dimSight\" : 60 });\n    ChatMessage.create({content: `${target.name}'s vision has been improved`});\n}\nif(args[0] === \"off\") {\n    let sight = DAE.getFlag(tactor, 'darkvisionSpell');\n    target.update({\"dimSight\" : sight });\n    DAE.unsetFlag(tactor, 'darkvisionSpell');\n    ChatMessage.create({content: `${target.name}'s vision has been returned`});\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/evil-eye-red-1.jpg","effects":[{"_id":"7WRR5qfCKAAqq2eg","flags":{"dae":{"stackable":false,"transfer":false,"specialDuration":["None"],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"data.attributes.senses.darkvision","value":60,"mode":4,"priority":20},{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/evil-eye-red-1.jpg","label":"Darkvision","tint":"","transfer":false}]}
{"_id":"KkPvayrMzhd7WnPW","name":"Alter Self","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You assume a different form. When you cast the spell, choose one of the following options, the effects of which last for the duration of the spell. While the spell lasts, you can end one option as an action to gain the benefits of a different one.</p>\n<p><strong>Aquatic Adaptation.&nbsp;</strong>You adapt your body to an aquatic environment, sprouting gills and growing webbing between your fingers. You can breathe underwater and gain a swimming speed equal to your walking speed.</p>\n<p><strong>Change Appearance.&nbsp;</strong>You transform your appearance. You decide what you look like, including your height, weight, facial features, sound of your voice, hair length, coloration, and distinguishing characteristics, if any. You can make yourself appear as a member of another race, though none of your statistics change. You also can't appear as a creature of a different size than you, and your basic shape stays the same; if you're bipedal, you can't use this spell to become quadrupedal, for instance. At any time for the duration of the spell, you can use your action to change your appearance in this way again.</p>\n<p><strong>Natural Weapons.&nbsp;</strong>You grow claws, fangs, spines, horns, or a different natural weapon of your choice. Your unarmed strikes deal 1d6 bludgeoning, piercing, or slashing damage, as appropriate to the natural weapon you chose, and you are proficient with your unarmed strikes. Finally, the natural weapon is magic and you have a +1 bonus to the attack and damage rolls you make using it.</p>","chat":"","unidentified":""},"source":"PHB pg. 211","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"macro.execute","value":"\"Alter Self\" @target","mode":"+","targetSpecific":false,"id":1,"itemId":"q2oOfBC73oDbRUPo","active":true,"_targets":[]}],"equipActive":false,"alwaysActive":false},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Alter Self","type":"script","scope":"global","command":"","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Alter Self","type":"script","scope":"global","command":"","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","effects":[{"_id":"ZFSPRxh2MSqLCb0V","flags":{"dae":{"stackable":false,"specialDuration":"None","transfer":false}},"changes":[{"key":"data.attributes.movement.swim","value":"@attributes.movement.walk","mode":4,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","label":"Aquatic Adaptation","tint":"","transfer":false},{"_id":"qXeD8bqXO4BjwI0w","flags":{"dae":{"stackable":false,"specialDuration":"None","transfer":false}},"changes":[{"key":"items.Unarmed Strike.data.damage.parts.0.0","value":"1d6+@mod+1","mode":5,"priority":20},{"key":"items.Unarmed Strike.data.properties.mgc","value":"true","mode":5,"priority":20},{"key":"items.Unarmed Strike.data.proficient","value":"true","mode":5,"priority":20},{"key":"items.Unarmed Strike.data.attackBonus","value":"1","mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","label":"Natural Weapons","tint":"","transfer":false}]}
{"_id":"L76fhPReGZsNacGP","name":"Contagion","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>Your touch inflicts disease. Make a melee spell attack against a creature within your reach. On a hit, you afflict the creature with a disease of your choice from any of the ones described below.</p><p>At the end of each of the target’s turns, it must make a Constitution saving throw. After failing three of these saving throws, the disease’s effects last for the duration, and the creature stops making these saves. After succeeding on three of these saving throws, the creature recovers from the disease, and the spell ends.</p><p>Since this spell induces a natural disease in its target, any effect that removes a disease or otherwise ameliorates a disease’s effects apply to it.</p><p><strong>Blinding Sickness.&nbsp;</strong>Pain grips the creature’s mind, and its eyes turn milky white. The creature has disadvantage on Wisdom checks and Wisdom saving throws and is blinded.</p><p><strong>Filth Fever.</strong>&nbsp;A raging fever sweeps through the creature’s body. The creature has disadvantage on Strength checks, Strength saving throws, and attack rolls that use Strength.</p><p><strong>Flesh Rot.&nbsp;</strong>The creature’s flesh decays. The creature has disadvantage on Charisma checks and vulnerability to all damage.</p><p><strong>Mindfire.</strong>&nbsp;The creature’s mind becomes feverish. The creature has disadvantage on Intelligence checks and Intelligence saving throws, and the creature behaves as if under the effects of the confusion spell during combat.</p><p><strong>Seizure.&nbsp;</strong>The creature is overcome with shaking. The creature has disadvantage on Dexterity checks, Dexterity saving throws, and attack rolls that use Dexterity.</p><p><strong>Slimy Doom.</strong>&nbsp;The creature begins to bleed uncontrollably. The creature has disadvantage on Constitution checks and Constitution saving throws. In addition, whenever the creature takes damage, it is stunned until the end of its next turn.</p>","chat":"","unidentified":""},"source":"PHB pg. 227","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":7,"units":"day"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"msak","attackBonus":"0","chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":5,"school":"nec","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"itemacro":{"macro":{"_data":{"name":"Contagion","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @attributes.spell.dc\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\n\nif (args[0] === \"on\") {\n\n    // Save the hook data for later access.\n    DAE.setFlag(tactor, \"ContagionSpell\",  {\n        count: 0,\n    });\n}\n\nif (args[0] === \"off\") {\n    // When off, clean up hooks and flags.\n\n    DAE.unsetFlag(tactor, \"ContagionSpell\", );\n}\n\nif (args[0] === \"each\") {\n    let contagion = lastArg.efData;\n    if (contagion.label === \"Contagion\")\n        Contagion()\n}\n\n/** \n * Execute contagion effects, update flag counts or remove effect\n * \n * @param {Actor5e} combatant Current combatant to test against\n * @param {Number} save Target DC for save\n */\nasync function Contagion() {\n    let flag = DAE.getFlag(tactor, \"ContagionSpell\", );\n\n    const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n    let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n\n    if (saveRoll < saveData.dc) {\n        if (flag.count === 2) {\n            ChatMessage.create({ content: `Contagion on ${tactor.name} is complete` });\n            ContagionMessage();\n            return;\n        }\n        else {\n            let contagionCount = (flag.count + 1);\n            DAE.setFlag(tactor, \"ContagionSpell\", {\n                count: contagionCount\n            });\n            console.log(`Contagion increased to ${contagionCount}`);\n        }\n    }\n    else if (saveRoll >= saveData.dc) {\n        tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId); \n    }\n}\n\n/**\n * Generates the GM client dialog for selecting final Effect, updates target effect with name, icon and new DAE effects.\n */\nasync function ContagionMessage() {\n    new Dialog({\n        title: \"Contagion options\",\n        content: \"<p>Select the effect</p>\",\n        buttons: {\n            one: {\n                label: \"Blinding Sickness\",\n                callback: async () => {\n                     let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.wis\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.wis\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon: \"modules/combat-utility-belt/icons/blinded.svg\",\n                        label: \"Blinding Sickness\",\n                        _id:  lastArg.effectId\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                },\n            },\n            two: {\n                label: \"Filth Fever\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.attack.mwak\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.attack.rwak\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.str\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.str\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        label: \"Filth Fever\",\n                        _id: lastArg.effectId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                }\n            },\n            three: {\n                label: \"Flesh Rot\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.cha\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"data.traits.dv.all\",\n                                mode: 0,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon : \"systems/dnd5e/icons/skills/blood_09.jpg\",\n                        label : \"Flesh Rot\",\n                        _id: lastArg.effectId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                },\n            },\n            four: {\n                label: \"Mindfire\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.int\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.int\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon : \"icons/svg/daze.svg\",\n                        label : \"Mindfire\",\n                        _id: lastArg.effectId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                }\n            },\n            five: {\n                label: \"Seizure\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.attack.mwak\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.attack.rwak\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.dex\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.dex\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon : \"icons/svg/paralysis.svg\",\n                        label : \"Seizure\",\n                        _id: lastArg.effectId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                }\n            },\n            six: {\n                label: \"Slimy Doom\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.con\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.con\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon : \"systems/dnd5e/icons/skills/blood_05.jpg\",\n                        label : \"Slimy Doom\",\n                        _id: lastArg.effecId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                }\n            },\n        }\n    }).render(true);\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Contagion","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @attributes.spell.dc\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\n\nif (args[0] === \"on\") {\n\n    // Save the hook data for later access.\n    DAE.setFlag(tactor, \"ContagionSpell\",  {\n        count: 0,\n    });\n}\n\nif (args[0] === \"off\") {\n    // When off, clean up hooks and flags.\n\n    DAE.unsetFlag(tactor, \"ContagionSpell\", );\n}\n\nif (args[0] === \"each\") {\n    let contagion = lastArg.efData;\n    if (contagion.label === \"Contagion\")\n        Contagion()\n}\n\n/** \n * Execute contagion effects, update flag counts or remove effect\n * \n * @param {Actor5e} combatant Current combatant to test against\n * @param {Number} save Target DC for save\n */\nasync function Contagion() {\n    let flag = DAE.getFlag(tactor, \"ContagionSpell\", );\n\n    const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n    let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n\n    if (saveRoll < saveData.dc) {\n        if (flag.count === 2) {\n            ChatMessage.create({ content: `Contagion on ${tactor.name} is complete` });\n            ContagionMessage();\n            return;\n        }\n        else {\n            let contagionCount = (flag.count + 1);\n            DAE.setFlag(tactor, \"ContagionSpell\", {\n                count: contagionCount\n            });\n            console.log(`Contagion increased to ${contagionCount}`);\n        }\n    }\n    else if (saveRoll >= saveData.dc) {\n        tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId); \n    }\n}\n\n/**\n * Generates the GM client dialog for selecting final Effect, updates target effect with name, icon and new DAE effects.\n */\nasync function ContagionMessage() {\n    new Dialog({\n        title: \"Contagion options\",\n        content: \"<p>Select the effect</p>\",\n        buttons: {\n            one: {\n                label: \"Blinding Sickness\",\n                callback: async () => {\n                     let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.wis\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.wis\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon: \"modules/combat-utility-belt/icons/blinded.svg\",\n                        label: \"Blinding Sickness\",\n                        _id:  lastArg.effectId\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                },\n            },\n            two: {\n                label: \"Filth Fever\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.attack.mwak\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.attack.rwak\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.str\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.str\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        label: \"Filth Fever\",\n                        _id: lastArg.effectId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                }\n            },\n            three: {\n                label: \"Flesh Rot\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.cha\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"data.traits.dv.all\",\n                                mode: 0,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon : \"systems/dnd5e/icons/skills/blood_09.jpg\",\n                        label : \"Flesh Rot\",\n                        _id: lastArg.effectId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                },\n            },\n            four: {\n                label: \"Mindfire\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.int\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.int\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon : \"icons/svg/daze.svg\",\n                        label : \"Mindfire\",\n                        _id: lastArg.effectId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                }\n            },\n            five: {\n                label: \"Seizure\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.attack.mwak\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.attack.rwak\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.dex\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.dex\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon : \"icons/svg/paralysis.svg\",\n                        label : \"Seizure\",\n                        _id: lastArg.effectId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                }\n            },\n            six: {\n                label: \"Slimy Doom\",\n                callback: async () => {\n                    let data = {\n                        changes: [\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.check.con\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                            {\n                                key: \"flags.midi-qol.disadvantage.ability.save.con\",\n                                mode: 5,\n                                priority: 20,\n                                value: \"1\",\n                            },\n                        ],\n                        icon : \"systems/dnd5e/icons/skills/blood_05.jpg\",\n                        label : \"Slimy Doom\",\n                        _id: lastArg.effecId,\n                    }\n                    tactor.updateEmbeddedEntity(\"ActiveEffect\", data);\n                }\n            },\n        }\n    }).render(true);\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/rip-magenta-3.jpg","effects":[{"_id":"YdTLJRhCX9pxPA4n","flags":{"dae":{"stackable":false,"specialDuration":["None"],"macroRepeat":"endEveryTurn","transfer":false},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/rip-magenta-3.jpg","label":"Contagion","origin":"Item.5OsXXJYEL6nq1P1h","tint":"","transfer":false}]}
{"_id":"LfoahAgvKfrLhZpZ","name":"Fly","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You touch a willing creature. The target gains a flying speed of 60 feet for the Duration. When the spell ends, the target falls if it is still aloft, unless it can stop the fall.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 4th level or higher, you can target one additional creature for each slot level above 3rd.</p>","chat":"","unidentified":""},"source":"PHB pg. 243","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":3,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A wing feather from any bird","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.attributes.speed.special","value":"60ft Fly","mode":"+","targetSpecific":false,"id":1,"itemId":"BE3x0mPPgMviE9GR","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"core":{"sourceId":"Item.j9p6foCgoUumzm8F"}},"img":"systems/dnd5e/icons/spells/link-spirit-1.jpg","effects":[{"_id":"VVu9uaQR0UaAvbBr","flags":{"dae":{"transfer":false,"stackable":false}},"changes":[{"key":"data.attributes.movement.fly","value":60,"mode":4,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/link-spirit-1.jpg","label":"Fly","tint":"","transfer":false}]}
{"_id":"MhbRwMn9laXsmL5d","name":"Confusion","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>This spell assails and distorts the minds of creatures, generating illusions and causing uncontrolled actions. Each creature in a sphere of 10-foot-radius centered on a point chosen in the range of the spell must make a Wisdom saving throw otherwise it will be affected by the spell.</p><p>An affected target can react and it must start at the beginning of 1d10 each of his game rounds to determine its behavior for that round.</p><p>At the end of each turn, an affected creature can make a saving throw of Wisdom. If successful, the effect of the spell ends for this target.</p><p><strong>Higher Levels.&nbsp;</strong>When you cast this spell using a level spell slot 5 or more, the radius of the sphere increases by 5 feet for each level of higher spell slot to 4.</p>","chat":"","unidentified":""},"source":"PHB pg. 224","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":10,"width":null,"units":"ft","type":"sphere"},"range":{"value":90,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"1d10","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":4,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Three walnut shells.","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"itemacro":{"macro":{"_data":{"name":"Confusion","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\nif (args[0] === \"each\") {\n\n        let confusionRoll = new Roll(\"1d10\").roll().total;\n        let content;\n        switch (confusionRoll) {\n            case 1:\n                content = \"The creature uses all its movement to move in a random direction. To determine the direction, roll a  [[d8]] and assign a direction to each die face. The creature doesn't take an action this turn.\";\n                break;\n            case 2:\n                content = \"\tThe creature doesn't move or take actions this turn.\";\n                break;\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                content = \"The creature uses its action to make a melee attack against a randomly determined creature within its reach. If there is no creature within its reach, the creature does nothing this turn.\";\n                break;\n            case 8:\n            case 9:\n            case 10:\n                content = \"The creature can act and move normally.\";\n                break;\n        }\n        ChatMessage.create({ content: `Confusion roll for ${tactor.name} is ${confusionRoll}: ` + content });\n\n        const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n        let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n\n    if(saveRoll >= DC) {\n        ChatMessage.create({ content: `Confusion ends for ${tactor.name} at the end of their turn`})\n        tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId); \n    }\n\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Confusion","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\nif (args[0] === \"each\") {\n\n        let confusionRoll = new Roll(\"1d10\").roll().total;\n        let content;\n        switch (confusionRoll) {\n            case 1:\n                content = \"The creature uses all its movement to move in a random direction. To determine the direction, roll a  [[d8]] and assign a direction to each die face. The creature doesn't take an action this turn.\";\n                break;\n            case 2:\n                content = \"\tThe creature doesn't move or take actions this turn.\";\n                break;\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                content = \"The creature uses its action to make a melee attack against a randomly determined creature within its reach. If there is no creature within its reach, the creature does nothing this turn.\";\n                break;\n            case 8:\n            case 9:\n            case 10:\n                content = \"The creature can act and move normally.\";\n                break;\n        }\n        ChatMessage.create({ content: `Confusion roll for ${tactor.name} is ${confusionRoll}: ` + content });\n\n        const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n        let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n\n    if(saveRoll >= DC) {\n        ChatMessage.create({ content: `Confusion ends for ${tactor.name} at the end of their turn`})\n        tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId); \n    }\n\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/wind-magenta-3.jpg","effects":[{"_id":"KVLW7oq1VcRL8DCt","flags":{"dae":{"stackable":false,"specialDuration":["None"],"transfer":false,"macroRepeat":"startEveryTurn"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/wind-magenta-3.jpg","label":"Confusion","tint":"","transfer":false}]}
{"_id":"NEykcw7XSNuYgx7n","name":"Warding Bond","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>This spell wards a willing creature you touch and creates a mystic connection between you and the target until the spell ends. While the target is within 60 feet of you, it gains a +1 bonus to AC and saving throws, and it has resistance to all damage. Also, each time it takes damage, you take the same amount of damage.</p>\n<p>The spell ends if you drop to 0 hit points or if you and the target become separated by more than 60 feet. It also ends if the spell is cast again on either of the connected creatures. You can also dismiss the spell as an action.</p>","chat":"","unidentified":""},"source":"PHB pg. 287","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A pair of platinum rings worth at least 50 gp each, which you and the target must wear for the duration","consumed":false,"cost":100,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.attributes.ac.value","value":"1","mode":"+","targetSpecific":false,"id":1,"itemId":"IMBPFYUMfvSlvnlM","active":true,"_targets":[],"label":"Attributes Armor Class"},{"modSpecKey":"data.traits.dr.all","value":"0","mode":"+","targetSpecific":false,"id":2,"itemId":"IMBPFYUMfvSlvnlM","active":true,"_targets":[],"label":"Traits Damage Resistance All"},{"modSpecKey":"data.bonuses.abilities.save","value":"1","mode":"+","targetSpecific":false,"id":3,"itemId":"IMBPFYUMfvSlvnlM","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Warding Bond","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @item\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\n\nlet caster = canvas.tokens.placeables.find(token => token?.actor?.items.get(DAEItem._id) != null)\n\nif (args[0] === \"on\") {\n    await DAE.setFlag(tactor, \"WardingBondIds\", {\n        tokenID: tactor.id,\n        casterID: caster.actor.id\n    })\n    SetWardingBondHook(target)\n\n}\n\nasync function SetWardingBondHook(target) {\n    const hookId = Hooks.on(\"preUpdateActor\", async (actor, update) => {\n        let flag = await DAE.getFlag(tactor, \"WardingBondIds\")\n        if (flag.tokenID !== actor.id) return\n        if (!\"actorData.data.attributes.hp\" in update) return;\n        let oldHP = actor.data.data.attributes.hp.value;\n        let newHP = getProperty(update, \"data.attributes.hp.value\");\n        let hpChange = oldHP - newHP\n        if (hpChange > 0 && typeof hpChange === \"number\") {\n            let caster = game.actors.get(flag.casterID).getActiveTokens()[0]\n            caster.actor.applyDamage(hpChange)\n        }\n    })\n    DAE.setFlag(tactor, \"WardingBondHook\", hookId)\n    \n}\n\nasync function RemoveHook() {\n    let flag = await DAE.getFlag(tactor, 'WardingBondHook');\n    Hooks.off(\"preUpdateActor\", flag);\n    await DAE.unsetFlag(tactor, \"WardingBondHook\");\n}\n\nif (args[0] === \"off\") {\n    RemoveHook()\n    await DAE.unsetFlag(tactor, \"WardingBondIds\");\n    console.log(\"Death Ward removed\");\n}\n\nif (args[0] === \"each\") {\n    await RemoveHook()\n    await SetWardingBondHook()\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Warding Bond","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @item\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\n\nlet caster = canvas.tokens.placeables.find(token => token?.actor?.items.get(DAEItem._id) != null)\n\nif (args[0] === \"on\") {\n    await DAE.setFlag(tactor, \"WardingBondIds\", {\n        tokenID: tactor.id,\n        casterID: caster.actor.id\n    })\n    SetWardingBondHook(target)\n\n}\n\nasync function SetWardingBondHook(target) {\n    const hookId = Hooks.on(\"preUpdateActor\", async (actor, update) => {\n        let flag = await DAE.getFlag(tactor, \"WardingBondIds\")\n        if (flag.tokenID !== actor.id) return\n        if (!\"actorData.data.attributes.hp\" in update) return;\n        let oldHP = actor.data.data.attributes.hp.value;\n        let newHP = getProperty(update, \"data.attributes.hp.value\");\n        let hpChange = oldHP - newHP\n        if (hpChange > 0 && typeof hpChange === \"number\") {\n            let caster = game.actors.get(flag.casterID).getActiveTokens()[0]\n            caster.actor.applyDamage(hpChange)\n        }\n    })\n    DAE.setFlag(tactor, \"WardingBondHook\", hookId)\n    \n}\n\nasync function RemoveHook() {\n    let flag = await DAE.getFlag(tactor, 'WardingBondHook');\n    Hooks.off(\"preUpdateActor\", flag);\n    await DAE.unsetFlag(tactor, \"WardingBondHook\");\n}\n\nif (args[0] === \"off\") {\n    RemoveHook()\n    await DAE.unsetFlag(tactor, \"WardingBondIds\");\n    console.log(\"Death Ward removed\");\n}\n\nif (args[0] === \"each\") {\n    await RemoveHook()\n    await SetWardingBondHook()\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/protect-sky-2.jpg","effects":[{"_id":"uFwBXvesTDbyGT7k","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"data.attributes.ac.value","value":1,"mode":2,"priority":20},{"key":"data.traits.dr.all","value":"0","mode":0,"priority":0},{"key":"data.bonuses.abilities.save","value":"1","mode":0,"priority":20},{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/protect-sky-2.jpg","label":"Warding Bond","tint":"","transfer":false}]}
{"_id":"NorLF3U1XNO9LOkY","name":"Ray of Enfeeblement","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>A black beam of enervating energy springs from your finger toward a creature within range. Make a ranged spell attack against the target. On a hit, the target deals only half damage with weapon attacks that use Strength until the spell ends.</p><p>At the end of each of the target's turns, it can make a Constitution saving throw against the spell. On a success, the spell ends.</p>","chat":"","unidentified":""},"source":"PHB pg. 271","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"rsak","attackBonus":"0","chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"nec","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Ray of Enfeeblement","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\nlet weapons = tactor.items.filter(i => i.data.type === `weapon`);\n\n/**\n * For every str weapon, update the damage formulas to half the damage, set flag of original\n */\nif (args[0] === \"on\") {\n    for (let weapon of weapons) {\n        if (weapon.abilityMod === \"str\") {\n            let newWeaponParts = duplicate(weapon.data.data.damage.parts);\n            weapon.setFlag('world', 'RayOfEnfeeblement', newWeaponParts);\n            for (let part of weapon.data.data.damage.parts) {\n                part[0] = `floor((${part[0]})/2)`;\n            }\n            weapon.update({ \"data.damage.parts\": weapon.data.data.damage.parts });\n        }\n    }\n}\n\n// Update weapons to old value\nif (args[0] === \"off\") {\n    for (let weapon of weapons) {\n        let parts = weapon.getFlag('world', 'RayOfEnfeeblement');\n\n        weapon.update({ \"data.damage.parts\": parts });\n    }\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Ray of Enfeeblement","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\nlet weapons = tactor.items.filter(i => i.data.type === `weapon`);\n\n/**\n * For every str weapon, update the damage formulas to half the damage, set flag of original\n */\nif (args[0] === \"on\") {\n    for (let weapon of weapons) {\n        if (weapon.abilityMod === \"str\") {\n            let newWeaponParts = duplicate(weapon.data.data.damage.parts);\n            weapon.setFlag('world', 'RayOfEnfeeblement', newWeaponParts);\n            for (let part of weapon.data.data.damage.parts) {\n                part[0] = `floor((${part[0]})/2)`;\n            }\n            weapon.update({ \"data.damage.parts\": weapon.data.data.damage.parts });\n        }\n    }\n}\n\n// Update weapons to old value\nif (args[0] === \"off\") {\n    for (let weapon of weapons) {\n        let parts = weapon.getFlag('world', 'RayOfEnfeeblement');\n\n        weapon.update({ \"data.damage.parts\": parts });\n    }\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"mess":{"templateTexture":""},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/beam-jade-2.jpg","effects":[{"_id":"kNbpGA7Bs2Tet6ne","flags":{"dae":{"stackable":false,"specialDuration":["None"],"transfer":false,"macroRepeat":"none"}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/beam-jade-2.jpg","label":"Ray of Enfeeblement","tint":"","transfer":false}]}
{"_id":"OJlgbnpItuXPbu0a","name":"Misty Step","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>Briefly surrounded by silvery mist, you teleport up to 30 feet to an unoccupied space that you can see.</p>","chat":"","unidentified":""},"source":"PHB pg. 260","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":null,"units":"inst"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"con","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"itemacro":{"macro":{"_data":{"name":"Misty Step","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId) || token;\n\n\nif (args[0] === \"on\") {\n    let range = MeasuredTemplate.create({\n        t: \"circle\",\n        user: game.user._id,\n        x: target.x + canvas.grid.size / 2,\n        y: target.y + canvas.grid.size / 2,\n        direction: 0,\n        distance: 30,\n        borderColor: \"#FF0000\",\n        flags: {\n            DAESRD: {\n                MistyStep: {\n                    ActorId: tactor.id\n                }\n            }\n        }\n        //fillColor: \"#FF3366\",\n    });\n\n    range.then(result => {\n        let templateData = {\n            t: \"rect\",\n            user: game.user._id,\n            distance: 7.5,\n            direction: 45,\n            x: 0,\n            y: 0,\n            fillColor: game.user.color,\n            flags: {\n                DAESRD: {\n                    MistyStep: {\n                        ActorId: tactor.id\n                    }\n                }\n            }\n        };\n\n\n\n        Hooks.once(\"createMeasuredTemplate\", deleteTemplatesAndMove);\n\n        let template = new game.dnd5e.canvas.AbilityTemplate(templateData);\n        template.actorSheet = tactor.sheet;\n        template.drawPreview();\n\n        async function deleteTemplatesAndMove(scene, template) {\n\n            let removeTemplates = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.MistyStep?.ActorId === tactor.id);\n            await target.update({ x: template.x, y: template.y })\n            await canvas.templates.deleteMany([removeTemplates[0].id, removeTemplates[1].id]);\n            await tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId); \n        };\n    });\n    \n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Misty Step","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId) || token;\n\n\nif (args[0] === \"on\") {\n    let range = MeasuredTemplate.create({\n        t: \"circle\",\n        user: game.user._id,\n        x: target.x + canvas.grid.size / 2,\n        y: target.y + canvas.grid.size / 2,\n        direction: 0,\n        distance: 30,\n        borderColor: \"#FF0000\",\n        flags: {\n            DAESRD: {\n                MistyStep: {\n                    ActorId: tactor.id\n                }\n            }\n        }\n        //fillColor: \"#FF3366\",\n    });\n\n    range.then(result => {\n        let templateData = {\n            t: \"rect\",\n            user: game.user._id,\n            distance: 7.5,\n            direction: 45,\n            x: 0,\n            y: 0,\n            fillColor: game.user.color,\n            flags: {\n                DAESRD: {\n                    MistyStep: {\n                        ActorId: tactor.id\n                    }\n                }\n            }\n        };\n\n\n\n        Hooks.once(\"createMeasuredTemplate\", deleteTemplatesAndMove);\n\n        let template = new game.dnd5e.canvas.AbilityTemplate(templateData);\n        template.actorSheet = tactor.sheet;\n        template.drawPreview();\n\n        async function deleteTemplatesAndMove(scene, template) {\n\n            let removeTemplates = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.MistyStep?.ActorId === tactor.id);\n            await target.update({ x: template.x, y: template.y })\n            await canvas.templates.deleteMany([removeTemplates[0].id, removeTemplates[1].id]);\n            await tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId); \n        };\n    });\n    \n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/wind-grasp-air-1.jpg","effects":[{"_id":"co3tPOrzgA6gTwI9","flags":{"dae":{"stackable":false,"specialDuration":"None","macroRepeat":"none","transfer":false}},"changes":[{"key":"macro.itemMacro","value":"@target","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":1,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/wind-grasp-air-1.jpg","label":"Misty Step","tint":"","transfer":false}]}
{"_id":"RPl904kdlKpkJa74","name":"Black Tentacles","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>Squirming, ebony tentacles fill a 20-foot square on ground that you can see within range. For the Duration, these tentacles turn the ground in the area into difficult terrain.</p>\n<p>When a creature enters the affected area for the first time on a turn or starts its turn there, the creature must succeed on a Dexterity saving throw or take 3d6 bludgeoning damage and be @JournalEntry[Restrai⁠ned] by the tentacles until the spell ends. A creature that starts its turn in the area and is already @JournalEntry[Restrai⁠ned] by the tentacles takes 3d6 bludgeoning damage.</p>\n<p>A creature @JournalEntry[Restrained] by the tentacles can use its action to make a Strength or D⁠exterity check (its choice) against your spell save DC. On a success, it frees itself.</p>","chat":"","unidentified":""},"source":"","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":20,"width":null,"units":"ft","type":"square"},"range":{"value":90,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["3d6","bludgeoning"]],"versatile":""},"formula":"","save":{"ability":"dex","dc":null,"scaling":"spell"},"level":4,"school":"con","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A piece of tentacle from a giant octopus or a giant squid","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Restrained","mode":"+","targetSpecific":false,"id":1,"itemId":"z72yFG8EEc5tZgby","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/vines-eerie-2.jpg","effects":[{"_id":"jjajvl1rRVpAXBMI","flags":{"dae":{"statusId":"restrained","transfer":false},"core":{"statusId":"restrain"}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/svg/net.svg","label":"Restrained","tint":"","transfer":false}]}
{"_id":"SP66bVwMD1PYlySJ","name":"Magic Weapon","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You touch a nonmagical weapon. Until the spell ends, that weapon becomes a magic weapon with a +1 bonus to Attack rolls and Damage Rolls.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 4th level or higher, the bonus increases to +2. When you use a spell slot of 6th level or higher, the bonus increases to +3.</p>","chat":"","unidentified":""},"source":"PHB pg. 257","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":0,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"\"Magic Weapon\" @target @item.level","mode":"+","targetSpecific":false,"id":1,"itemId":"f1nQIsVPzwoUTqOt","active":true,"_targets":[]}]},"itemacro":{"macro":{"_data":{"name":"Magic Weapon","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst DAEItem = lastArg.efData.flags.dae.itemData\n\nlet weapons = tactor.items.filter(i => i.data.type === `weapon`);\nlet weapon_content = ``;\n\nfunction value_limit(val, min, max) {\n    return val < min ? min : (val > max ? max : val);\n};\n\n//Filter for weapons\nfor (let weapon of weapons) {\n    weapon_content += `<option value=${weapon.id}>${weapon.name}</option>`;\n}\n\n/**\n * Select for weapon and apply bonus based on spell level\n */\nif (args[0] === \"on\") {\n    let content = `\n    <div class=\"form-group\">\n    <label>Weapons : </label>\n    <select name=\"weapons\">\n        ${weapon_content}\n        </select>\n    </div>`;\n\n    new Dialog({\n        content,\n        buttons:\n        {\n            Ok:\n            {\n                label: `Ok`,\n                callback: (html) => {\n                    let itemId = html.find('[name=weapons]')[0].value;\n                    let weaponItem = tactor.items.get(itemId);\n                    let copy_item = duplicate(weaponItem);\n                    let spellLevel = Math.floor(DAEItem.data.level / 2);\n                    let bonus = value_limit(spellLevel, 1, 3);\n                    let wpDamage = copy_item.data.damage.parts[0][0];\n                    let verDamage = copy_item.data.damage.versatile;\n                    DAE.setFlag(tactor, `magicWeapon`, {\n                        damage: weaponItem.data.data.attackBonus,\n                        weapon: itemId,\n                        weaponDmg: wpDamage,\n                        verDmg: verDamage,\n                    }\n                    );\n                    copy_item.data.attackBonus = `${parseInt(copy_item.data.attackBonus) + bonus}`;\n                    copy_item.data.damage.parts[0][0] = (wpDamage + \" + \" + bonus);\n                    if(verDamage !== \"\" && verDamage !== null) copy_item.data.damage.versatile = (verDamage + \" + \" + bonus);\n                    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\n                }\n            },\n            Cancel:\n            {\n                label: `Cancel`\n            }\n        }\n    }).render(true);\n}\n\n//Revert weapon and unset flag.\nif (args[0] === \"off\") {\n    let { damage, weapon, weaponDmg, verDmg } = DAE.getFlag(tactor, 'magicWeapon');\n    let weaponItem = tactor.items.get(weapon);\n    let copy_item = duplicate(weaponItem);\n    copy_item.data.attackBonus = `${parseInt(copy_item.data.attackBonus) - damage}`;\n    copy_item.data.damage.parts[0][0] = weaponDmg;\n    if(verDmg !== \"\" && verDmg !== null) copy_item.data.damage.versatile = verDmg;\n    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\n    DAE.unsetFlag(tactor, `magicWeapon`);\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Magic Weapon","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst DAEItem = lastArg.efData.flags.dae.itemData\n\nlet weapons = tactor.items.filter(i => i.data.type === `weapon`);\nlet weapon_content = ``;\n\nfunction value_limit(val, min, max) {\n    return val < min ? min : (val > max ? max : val);\n};\n\n//Filter for weapons\nfor (let weapon of weapons) {\n    weapon_content += `<option value=${weapon.id}>${weapon.name}</option>`;\n}\n\n/**\n * Select for weapon and apply bonus based on spell level\n */\nif (args[0] === \"on\") {\n    let content = `\n    <div class=\"form-group\">\n    <label>Weapons : </label>\n    <select name=\"weapons\">\n        ${weapon_content}\n        </select>\n    </div>`;\n\n    new Dialog({\n        content,\n        buttons:\n        {\n            Ok:\n            {\n                label: `Ok`,\n                callback: (html) => {\n                    let itemId = html.find('[name=weapons]')[0].value;\n                    let weaponItem = tactor.items.get(itemId);\n                    let copy_item = duplicate(weaponItem);\n                    let spellLevel = Math.floor(DAEItem.data.level / 2);\n                    let bonus = value_limit(spellLevel, 1, 3);\n                    let wpDamage = copy_item.data.damage.parts[0][0];\n                    let verDamage = copy_item.data.damage.versatile;\n                    DAE.setFlag(tactor, `magicWeapon`, {\n                        damage: weaponItem.data.data.attackBonus,\n                        weapon: itemId,\n                        weaponDmg: wpDamage,\n                        verDmg: verDamage,\n                    }\n                    );\n                    copy_item.data.attackBonus = `${parseInt(copy_item.data.attackBonus) + bonus}`;\n                    copy_item.data.damage.parts[0][0] = (wpDamage + \" + \" + bonus);\n                    if(verDamage !== \"\" && verDamage !== null) copy_item.data.damage.versatile = (verDamage + \" + \" + bonus);\n                    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\n                }\n            },\n            Cancel:\n            {\n                label: `Cancel`\n            }\n        }\n    }).render(true);\n}\n\n//Revert weapon and unset flag.\nif (args[0] === \"off\") {\n    let { damage, weapon, weaponDmg, verDmg } = DAE.getFlag(tactor, 'magicWeapon');\n    let weaponItem = tactor.items.get(weapon);\n    let copy_item = duplicate(weaponItem);\n    copy_item.data.attackBonus = `${parseInt(copy_item.data.attackBonus) - damage}`;\n    copy_item.data.damage.parts[0][0] = weaponDmg;\n    if(verDmg !== \"\" && verDmg !== null) copy_item.data.damage.versatile = verDmg;\n    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\n    DAE.unsetFlag(tactor, `magicWeapon`);\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/enchant-blue-2.jpg","effects":[{"_id":"xe1MqXU3Xz6XftZg","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"@item.level","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/enchant-blue-2.jpg","label":"Magic Weapon","tint":"","transfer":false}]}
{"_id":"VNkPZzkfmrVZvJ00","name":"Levitate","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>One creature or object of your choice that you can see within range rises vertically, up to 20 feet, and remains suspended there for the duration. The spell can levitate a target that weighs up to 500 pounds. An unwilling creature that succeeds on a Constitution saving throw is unaffected.</p>\n<p>The target can move only by pushing or pulling against a fixed object or surface within reach (such as a wall or a ceiling), which allows it to move as if it were climbing. You can change the target’s altitude by up to 20 feet in either direction on your turn. If you are the target, you can move up or down as part of your move. Otherwise, you can use your action to move the target, which must remain within the spell’s range.</p>\n<p>When the spell ends, the target floats gently to the ground if it is still aloft.</p>","chat":"","unidentified":""},"source":"PHB pg. 255","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Either a small leather loop or a piece of golden wire bent into a cup shape with a long shank on one end","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"Levitate @target","mode":"+","targetSpecific":false,"id":1,"itemId":"EDXeRSF3f6cl2O8L","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Levitate","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nif (args[0] === \"on\") {\n    ChatMessage.create({ content: `${target.name} is levitated 20ft` });\n    target.update({ \"elevation\": 20 });\n}\nif (args[0] === \"off\") {\n    target.update({\"elevation\": 0 });\n    ChatMessage.create({ content: `${target.name} is returned to the ground` });\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Levitate","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nif (args[0] === \"on\") {\n    ChatMessage.create({ content: `${target.name} is levitated 20ft` });\n    target.update({ \"elevation\": 20 });\n}\nif (args[0] === \"off\") {\n    target.update({\"elevation\": 0 });\n    ChatMessage.create({ content: `${target.name} is returned to the ground` });\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/wind-grasp-magenta-2.jpg","effects":[{"_id":"6BMAKrzsDsynMYBZ","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/wind-grasp-magenta-2.jpg","label":"Levitate","tint":"","transfer":false}]}
{"_id":"WCMqm6S8NObKCaGU","name":"Invisibility","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>A creature you touch becomes invisible until the spell ends. Anything the target is wearing or carrying is invisible as long as it is on the target's person. The spell ends for a target that attacks or casts a spell.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 254","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"ill","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"An eyelash encased in gum arabic","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"Invisibility @target","mode":"+","targetSpecific":false,"id":1,"itemId":"Ca4bXFRcwZU79yGi","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Invisibility","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\n\nif (args[0] === \"on\") {\n    ChatMessage.create({ content: `${target.name} turns invisible` });\n    target.update({ \"hidden\": true });\n}\nif (args[0] === \"off\") {\n    ChatMessage.create({ content: `${target.name} re-appears` });\n    target.update({ \"hidden\": false });\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Invisibility","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\n\nif (args[0] === \"on\") {\n    ChatMessage.create({ content: `${target.name} turns invisible` });\n    target.update({ \"hidden\": true });\n}\nif (args[0] === \"off\") {\n    ChatMessage.create({ content: `${target.name} re-appears` });\n    target.update({ \"hidden\": false });\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/fog-sky-2.jpg","effects":[{"_id":"4sj41iLn03Ucp7Uk","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"}},"changes":[{"key":"macro.itemMacro","value":"@target","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/fog-sky-2.jpg","label":"Invisibility","tint":"","transfer":false}]}
{"_id":"WDc7GX7bGoii11OR","name":"Hypnotic Pattern","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You create a twisting pattern of colors that weaves through the air inside a 30-foot cube within range. The pattern appears for a moment and vanishes. Each creature in the area who sees the pattern must make a&nbsp;Wisdom saving throw. On a failed save, the creature becomes charmed for the duration. While charmed by this spell, the creature is incapacitated and has a speed of 0.</p>\n<p>The spell ends for an affected creature if it takes any damage or if someone else uses an action to shake the creature out of its stupor.</p>","chat":"","unidentified":""},"source":"PHB pg. 252","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":30,"width":null,"units":"ft","type":"cube"},"range":{"value":120,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":3,"school":"ill","components":{"value":"","vocal":false,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A glowing stick of incense or a crystal vial filled with phosphorescent material.","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"giMYGgLa3Vy20LWh","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/air-burst-magenta-2.jpg","effects":[{"_id":"vf8qXWho8hhViUVl","flags":{"core":{"statusId":"combat-utility-belt.charmed"},"combat-utility-belt":{"conditionId":"charmed","overlay":false},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/charmed.svg","label":"Charmed","tint":"","transfer":false}]}
{"name":"Alter Self (old version)","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You assume a different form. When you cast the spell, choose one of the following options, the effects of which last for the duration of the spell. While the spell lasts, you can end one option as an action to gain the benefits of a different one.</p>\n<p><strong>Aquatic Adaptation.&nbsp;</strong>You adapt your body to an aquatic environment, sprouting gills and growing webbing between your fingers. You can breathe underwater and gain a swimming speed equal to your walking speed.</p>\n<p><strong>Change Appearance.&nbsp;</strong>You transform your appearance. You decide what you look like, including your height, weight, facial features, sound of your voice, hair length, coloration, and distinguishing characteristics, if any. You can make yourself appear as a member of another race, though none of your statistics change. You also can't appear as a creature of a different size than you, and your basic shape stays the same; if you're bipedal, you can't use this spell to become quadrupedal, for instance. At any time for the duration of the spell, you can use your action to change your appearance in this way again.</p>\n<p><strong>Natural Weapons.&nbsp;</strong>You grow claws, fangs, spines, horns, or a different natural weapon of your choice. Your unarmed strikes deal 1d6 bludgeoning, piercing, or slashing damage, as appropriate to the natural weapon you chose, and you are proficient with your unarmed strikes. Finally, the natural weapon is magic and you have a +1 bonus to the attack and damage rolls you make using it.</p>","chat":"","unidentified":""},"source":"PHB pg. 211","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":null,"width":null,"units":null,"type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"macro.execute","value":"\"Alter Self\" @target","mode":"+","targetSpecific":false,"id":1,"itemId":"q2oOfBC73oDbRUPo","active":true,"_targets":[]}],"equipActive":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","effects":[{"_id":"Z8yRGVFSsBf8lBaq","flags":{"dae":{"transfer":false}},"changes":[{"key":"macro.execute","value":"\"Alter Self\" @target","mode":0,"priority":0}],"duration":{},"icon":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","label":"Alter Self","transfer":false}],"_id":"YrDyupu134IpIG89"}
{"_id":"ZGZ1j55riwaOK6V0","name":"Call Lightning","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>A storm cloud appears in the shape of a cylinder that is 10 feet tall with a 60-foot radius, centered on a point you can see 100 feet directly above you. The spell fails if you can’t see a point in the air where the storm cloud could appear (for example, if you are in a room that can’t accommodate the cloud).</p><p>When you cast the spell, choose a point you can see within range. A bolt of lightning flashes down from the cloud to that point. Each creature within 5 feet of that point must make a Dexterity saving throw. A creature takes 3d10 lightning damage on a failed save, or half as much damage on a successful one. On each of your turns until the spell ends, you can use your action to call down lightning in this way again, targeting the same point or a different one.</p><p>If you are outdoors in stormy conditions when you cast this spell, the spell gives you control over the existing storm instead of creating a new one. Under such conditions, the spell’s damage increases by 1d10.</p><p><strong>Higher Levels.</strong> When you cast this spell using a spell slot of 4th or higher level, the damage increases by 1d10 for each slot level above 3rd.</p>","chat":"","unidentified":""},"source":"PHB pg. 220","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"4d10"},"formula":"","save":{"ability":"dex","dc":null,"scaling":"spell"},"level":3,"school":"con","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"itemacro":{"macro":{"_data":{"name":"Call Lightning","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" \nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEitem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEitem.data.save\n/**\n * Create Call Lightning Bolt item in inventory\n */\nif (args[0] === \"on\") {\n    let templateData = {\n        t: \"circle\",\n        user: game.user._id,\n        distance: 60,\n        direction: 0,\n        x: 0,\n        y: 0,\n        flags: {\n            DAESRD: {\n                CallLighting: {\n                    ActorId: tactor.id\n                }\n            }\n        },\n        fillColor: game.user.color\n    }\n    let template = new game.dnd5e.canvas.AbilityTemplate(templateData)\n    template.actorSheet = tactor.sheet;\n    template.drawPreview()\n    await tactor.createOwnedItem(\n        {\n            \"name\": \"Call Lightning - bolt\",\n            \"type\": \"spell\",\n            \"data\": {\n              \"description\": {\n                \"value\": \"<p><span style=\\\"color: #191813; font-size: 13px;\\\">A bolt of lightning flashes down from the cloud to that point. Each creature within 5 feet of that point must make a Dexterity saving throw. A creature takes 3d10 lightning damage on a failed save, or half as much damage on a successful one.</span></p>\"\n              },\n              \"activation\": {\n                \"type\": \"action\"\n              },\n              \"target\": {\n                \"value\": 5,\n                \"width\": null,\n                \"units\": \"ft\",\n                \"type\": \"radius\"\n              },\n              \"ability\": \"\",\n              \"actionType\": \"save\",\n              \"damage\": {\n                \"parts\": [\n                  [\n                    `${DAEitem.data.level}d10`,\n                    \"lightning\"\n                  ]\n                ],\n                \"versatile\": \"\"\n              },\n              \"formula\": \"\",\n              \"save\": {\n                \"ability\": \"dex\",\n                \"dc\": 16,\n                \"scaling\": \"spell\"\n              },\n              \"level\": 0,\n              \"school\": \"abj\",\n              \"preparation\": {\n                \"mode\": \"prepared\",\n                \"prepared\": false\n              },\n              \"scaling\": {\n                \"mode\": \"none\",\n                \"formula\": \"\"\n              }\n            },\n            \"img\": \"systems/dnd5e/icons/spells/lighting-sky-2.jpg\"\n          }\n    );\n}\n\n// Delete Flame Blade\nif (args[0] === \"off\") {\n    let castItem = tactor.data.items.find(i => i.name === \"Call Lightning - bolt\" && i.type === \"spell\")\n    if(castItem) await tactor.deleteOwnedItem(castItem._id)\n    let template = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.CallLighting?.ActorId === tactor.id)\n    if(template) await canvas.templates.deleteMany(template[0].id)\n\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Call Lightning","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" \nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEitem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEitem.data.save\n/**\n * Create Call Lightning Bolt item in inventory\n */\nif (args[0] === \"on\") {\n    let templateData = {\n        t: \"circle\",\n        user: game.user._id,\n        distance: 60,\n        direction: 0,\n        x: 0,\n        y: 0,\n        flags: {\n            DAESRD: {\n                CallLighting: {\n                    ActorId: tactor.id\n                }\n            }\n        },\n        fillColor: game.user.color\n    }\n    let template = new game.dnd5e.canvas.AbilityTemplate(templateData)\n    template.actorSheet = tactor.sheet;\n    template.drawPreview()\n    await tactor.createOwnedItem(\n        {\n            \"name\": \"Call Lightning - bolt\",\n            \"type\": \"spell\",\n            \"data\": {\n              \"description\": {\n                \"value\": \"<p><span style=\\\"color: #191813; font-size: 13px;\\\">A bolt of lightning flashes down from the cloud to that point. Each creature within 5 feet of that point must make a Dexterity saving throw. A creature takes 3d10 lightning damage on a failed save, or half as much damage on a successful one.</span></p>\"\n              },\n              \"activation\": {\n                \"type\": \"action\"\n              },\n              \"target\": {\n                \"value\": 5,\n                \"width\": null,\n                \"units\": \"ft\",\n                \"type\": \"radius\"\n              },\n              \"ability\": \"\",\n              \"actionType\": \"save\",\n              \"damage\": {\n                \"parts\": [\n                  [\n                    `${DAEitem.data.level}d10`,\n                    \"lightning\"\n                  ]\n                ],\n                \"versatile\": \"\"\n              },\n              \"formula\": \"\",\n              \"save\": {\n                \"ability\": \"dex\",\n                \"dc\": 16,\n                \"scaling\": \"spell\"\n              },\n              \"level\": 0,\n              \"school\": \"abj\",\n              \"preparation\": {\n                \"mode\": \"prepared\",\n                \"prepared\": false\n              },\n              \"scaling\": {\n                \"mode\": \"none\",\n                \"formula\": \"\"\n              }\n            },\n            \"img\": \"systems/dnd5e/icons/spells/lighting-sky-2.jpg\"\n          }\n    );\n}\n\n// Delete Flame Blade\nif (args[0] === \"off\") {\n    let castItem = tactor.data.items.find(i => i.name === \"Call Lightning - bolt\" && i.type === \"spell\")\n    if(castItem) await tactor.deleteOwnedItem(castItem._id)\n    let template = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.CallLighting?.ActorId === tactor.id)\n    if(template) await canvas.templates.deleteMany(template[0].id)\n\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/lighting-sky-2.jpg","effects":[{"_id":"xfVuiySO5CUntl2N","flags":{"dae":{"stackable":false,"specialDuration":"None","transfer":false}},"changes":[{"key":"macro.itemMacro","value":"@target @item.level","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/lighting-sky-2.jpg","label":"Call Lightning Summon","tint":"","transfer":false}]}
{"_id":"au0iE8QoEwuoS0Ld","name":"Alter Self (Macro version)","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>You assume a different form. When you cast the spell, choose one of the following options, the effects of which last for the duration of the spell. While the spell lasts, you can end one option as an action to gain the benefits of a different one.</p>\n<p><strong>Aquatic Adaptation.&nbsp;</strong>You adapt your body to an aquatic environment, sprouting gills and growing webbing between your fingers. You can breathe underwater and gain a swimming speed equal to your walking speed.</p>\n<p><strong>Change Appearance.&nbsp;</strong>You transform your appearance. You decide what you look like, including your height, weight, facial features, sound of your voice, hair length, coloration, and distinguishing characteristics, if any. You can make yourself appear as a member of another race, though none of your statistics change. You also can't appear as a creature of a different size than you, and your basic shape stays the same; if you're bipedal, you can't use this spell to become quadrupedal, for instance. At any time for the duration of the spell, you can use your action to change your appearance in this way again.</p>\n<p><strong>Natural Weapons.&nbsp;</strong>You grow claws, fangs, spines, horns, or a different natural weapon of your choice. Your unarmed strikes deal 1d6 bludgeoning, piercing, or slashing damage, as appropriate to the natural weapon you chose, and you are proficient with your unarmed strikes. Finally, the natural weapon is magic and you have a +1 bonus to the attack and damage rolls you make using it.</p>","chat":"","unidentified":""},"source":"PHB pg. 211","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"macro.execute","value":"\"Alter Self\" @target","mode":"+","targetSpecific":false,"id":1,"itemId":"q2oOfBC73oDbRUPo","active":true,"_targets":[]}],"equipActive":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Alter Self (Macro version)","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet DAEitem = tactor.items.find(i => i.name === `Unarmed Strike`); // find unarmed strike attack\n\n\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Are you using Natural Weapons\",\n        content: \"<p>Yes or no</p>\",\n        buttons: {\n            one: {\n                label: \"Yes\",\n                callback: () => {\n                    if (!DAEitem) {\n                        ChatMessage.create({ content: \"No unarmed strike found\" }); // exit out if no unarmed strike\n                        return;\n                    }\n                    let copy_item = duplicate(DAEitem);\n                    DAE.setFlag(tactor, 'AlterSelfSpell', copy_item.data.damage.parts[0][0]); //set flag of previous value\n                    copy_item.data.damage.parts[0][0] = \"1d6 +@mod\"; //replace with new value\n                    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item); //update item\n                    ChatMessage.create({ content: \"Unarmed strike is altered\" });\n                }\n            },\n            two: {\n                label: \"No\",\n                callback: () => ChatMessage.create({ content: `Unarmed strike not altered` })\n            },\n        }\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let damage = DAE.getFlag(tactor, 'AlterSelfSpell'); // find flag with previous values\n    let copy_item = duplicate(item);\n    copy_item.data.damage.parts[0][0] = damage; //replace with old value\n    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item); //update item\n    DAE.unsetFlag(tactor, 'world', 'AlterSelfSpell',); //remove flag\n    ChatMessage.create({ content: `Alter Self expired, unarmed strike returned` });\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Alter Self (Macro version)","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet DAEitem = tactor.items.find(i => i.name === `Unarmed Strike`); // find unarmed strike attack\n\n\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Are you using Natural Weapons\",\n        content: \"<p>Yes or no</p>\",\n        buttons: {\n            one: {\n                label: \"Yes\",\n                callback: () => {\n                    if (!DAEitem) {\n                        ChatMessage.create({ content: \"No unarmed strike found\" }); // exit out if no unarmed strike\n                        return;\n                    }\n                    let copy_item = duplicate(DAEitem);\n                    DAE.setFlag(tactor, 'AlterSelfSpell', copy_item.data.damage.parts[0][0]); //set flag of previous value\n                    copy_item.data.damage.parts[0][0] = \"1d6 +@mod\"; //replace with new value\n                    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item); //update item\n                    ChatMessage.create({ content: \"Unarmed strike is altered\" });\n                }\n            },\n            two: {\n                label: \"No\",\n                callback: () => ChatMessage.create({ content: `Unarmed strike not altered` })\n            },\n        }\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let damage = DAE.getFlag(tactor, 'AlterSelfSpell'); // find flag with previous values\n    let copy_item = duplicate(item);\n    copy_item.data.damage.parts[0][0] = damage; //replace with old value\n    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item); //update item\n    DAE.unsetFlag(tactor, 'world', 'AlterSelfSpell',); //remove flag\n    ChatMessage.create({ content: `Alter Self expired, unarmed strike returned` });\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","effects":[{"_id":"Z8yRGVFSsBf8lBaq","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":["None"],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","label":"Alter Self","tint":"","transfer":false}]}
{"_id":"dbDM3rVJenAemuCK","name":"Divine Favor","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>Your prayer empowers you with divine radiance. Until the spell ends, your weapon attacks deal an extra 1d4 radiant damage on a hit.&nbsp;</p>","chat":"","unidentified":""},"source":"PHB pg. 234","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["1d4","radiant"]],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.bonuses.mwak.damage","value":"1d4","mode":"+","targetSpecific":false,"id":1,"itemId":"pIAJpIhy3y7gkq8N","active":true,"_targets":[],"label":"Bonuses Melee Weapon Damage"},{"modSpecKey":"data.bonuses.rwak.damage","value":"1d4","mode":"+","targetSpecific":false,"id":2,"itemId":"ylWHtKMfk5WUheki","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/enchant-sky-2.jpg","effects":[{"_id":"aVCdeH1iRyP3xIwE","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":["None"],"macroRepeat":"none"}},"changes":[{"key":"data.bonuses.mwak.damage","value":"1d4[Radiant]","mode":0,"priority":0},{"key":"data.bonuses.rwak.damage","value":"1d4[Radiant]","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/enchant-sky-2.jpg","label":"Divine Favor","tint":"","transfer":false}]}
{"_id":"dnjg2ggj6emIemEb","name":"Banishment","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You attempt to send one creature that you can see within range to another plane of existence. The target must succeed on a Charisma saving throw or be banished.</p>\n<p>If the target is native to the plane of existence you're on, you banish the target to a harmless demiplane. While there, the target is incapacitated. The target remains there until the spell ends, at which point the target reappears in the space it left or in the nearest unoccupied space if that space is occupied.</p>\n<p>If the target is native to a different plane of existence than the one you're on, the target is banished with a faint popping noise, returning to its home plane. If the spell ends before 1 minute has passed, the target reappears in the space it left or in the nearest unoccupied space if that space is occupied. Otherwise, the target doesn't return.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 5th level or higher, you can target one additional creature for each slot level above 4th.</p>","chat":"","unidentified":""},"source":"PHB pg. 217","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"cha","dc":null,"scaling":"spell","value":""},"level":4,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"An item distasteful to the target","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"Banishment @target","mode":"+","targetSpecific":false,"id":1,"itemId":"pz0vjFCdPtQkdKKQ","active":true,"_targets":[],"label":"Macro Execute"}]},"betterRolls5e":{"critRange":{"type":"String","value":null},"critDamage":{"type":"String","value":""},"quickDesc":{"type":"Boolean","value":true,"altValue":true},"quickAttack":{"type":"Boolean","value":true,"altValue":true},"quickSave":{"type":"Boolean","value":true,"altValue":true},"quickDamage":{"type":"Array","value":[],"altValue":[],"context":[]},"quickVersatile":{"type":"Boolean","value":false,"altValue":false},"quickProperties":{"type":"Boolean","value":true,"altValue":true},"quickCharges":{"type":"Boolean","value":{"use":false,"resource":false},"altValue":{"use":false,"resource":false}},"quickTemplate":{"type":"Boolean","value":true,"altValue":true},"quickOther":{"type":"Boolean","value":true,"altValue":true,"context":""},"quickFlavor":{"type":"Boolean","value":true,"altValue":true},"quickPrompt":{"type":"Boolean","value":false,"altValue":false}},"dae":{"activeEquipped":false,"alwaysActive":false},"core":{"sourceId":"Item.BcZKJ53HIIPkOPeD"},"itemacro":{"macro":{"_data":{"name":"Banishment","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nif (args[0] === \"on\") {\n    target.update({hidden : true}); // hide targeted token\n    ChatMessage.create({content: target.name + \"  was banished\"});\n    \n}\nif(args[0]=== \"off\") {\n target.update({hidden : false}); // unhide token\n ChatMessage.create({content: target.name + \"  returned\"});\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Banishment","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nif (args[0] === \"on\") {\n    target.update({hidden : true}); // hide targeted token\n    ChatMessage.create({content: target.name + \"  was banished\"});\n    \n}\nif(args[0]=== \"off\") {\n target.update({hidden : false}); // unhide token\n ChatMessage.create({content: target.name + \"  returned\"});\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/link-eerie-3.jpg","effects":[{"_id":"DBqSEY0iu0S1PDxc","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/link-eerie-3.jpg","label":"Banishment","tint":"","transfer":false}]}
{"_id":"evnATsmepzJABYWr","name":"Mass Suggestion","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You suggest a course of activity (limited to a sentence or two) and magically influence up to twelve creatures of your choice that you can see within range and that can hear and understand you. Creatures that can't be charmed are immune to this effect. The suggestion must be worded in such a manner as to make the course of action sound reasonable. Asking the creature to stab itself, throw itself onto a spear, immolate itself, or do some other obviously harmful act automatically negates the effect of the spell.</p>\n<p>Each target must make a Wisdom saving throw. On a failed save, it pursues the course of action you described to the best of its ability. The suggested course of action can continue for the entire duration. If the suggested activity can be completed in a shorter time, the spell ends when the subject finishes what it was asked to do.</p>\n<p>You can also specify conditions that will trigger a special activity during the duration. For example, you might suggest that a group of soldiers give all their money to the first beggar they meet. If the condition isn't met before the spell ends, the activity isn't performed.</p>\n<p>If you or any of your companions damage a creature affected by this spell, the spell ends for that creature.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a 7th-level spell slot, the duration is 10 days. When you use an 8th-level spell slot, the duration is 30 days. When you use a 9th-level spell slot, the duration is a year and a day.</p>","chat":"","unidentified":""},"source":"PHB pg. 258","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":24,"units":"hour"},"target":{"value":12,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":6,"school":"enc","components":{"value":"","vocal":true,"somatic":false,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A snake's tongue and either a bit of honeycomb or a drop of sweet oil","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"lhh79ko51ZPb5A46","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/air-burst-magenta-3.jpg","effects":[{"_id":"n59bcZHuSHxpdwR0","flags":{"core":{"statusId":"combat-utility-belt.charmed"},"combat-utility-belt":{"conditionId":"charmed","overlay":false},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/charmed.svg","label":"Charmed","tint":"","transfer":false}]}
{"_id":"fmhnn1BxKrI8dFO2","name":"Hold Monster","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>Choose a creature that you can see within range. The target must succeed on a Wisdom saving throw or be Paralyzed for the Duration. This spell has no effect on Undead. At the end of each of its turns, the target can make another Wisdom saving throw. On a success, the spell ends on the target.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 6th level or higher, you can target one additional creature for each slot level above 5th. The creatures must be within 30 feet of each other when you target them.</p>","chat":"","unidentified":""},"source":"PHB pg. 251","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":90,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":5,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A small straight up piece of iron","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Paralyzed","mode":"+","targetSpecific":false,"id":1,"itemId":"MjXkRhWsByIQcAnB","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/shielding-fire-2.jpg","effects":[{"_id":"tCmy1xr2AfLc5vaf","flags":{"dae":{"statusId":"paralyzed","transfer":false},"core":{"statusId":"paralysis"}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/svg/paralysis.svg","label":"Paralyzed","tint":"","transfer":false}]}
{"_id":"gcKao9f4QpXC5rz2","name":"Spiritual Weapon","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>You create a floating, spectral weapon within range that lasts for the duration or until you cast this spell again. When you cast the spell, you can make a melee spell attack against a creature within 5 feet of the weapon. On a hit, the target takes force damage equal to 1d8 + your spellcasting ability modifier.</p><p>As a bonus action on your turn, you can move the weapon up to 20 feet and repeat the attack against a creature within 5 feet of it.</p><p>The weapon can take whatever form you choose. Clerics of deities who are associated with a particular weapon (as St. Cuthbert is known for his mace and Thor for his hammer) make this spell’s effect resemble that weapon.</p><p><strong>Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d8 for every two slot levels above the 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 278","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":"0","chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":"1d8"}},"flags":{"itemacro":{"macro":{"_data":{"name":"Spiritual Weapon","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @item.level @item\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId) || token;\n\nconst castingItem = lastArg.efData.flags.dae.itemData\n\nlet data = {}\n/**\n * Create Spiritual Weapon item in inventory\n */\nif (args[0] === \"on\") {\n  let damage = Math.floor((castingItem.data.level / 2));\n  let image = castingItem.img;\n\n  let range = MeasuredTemplate.create({\n    t: \"circle\",\n    user: game.user._id,\n    x: target.x + canvas.grid.size / 2,\n    y: target.y + canvas.grid.size / 2,\n    direction: 0,\n    distance: 60,\n    borderColor: \"#FF0000\",\n    flags: {\n      DAESRD: {\n        SpiritualWeaponRange: {\n          ActorId: tactor.id\n        }\n      }\n    }\n    //fillColor: \"#FF3366\",\n  });\n  range.then(result => {\n    let templateData = {\n      t: \"rect\",\n      user: game.user._id,\n      distance: 7,\n      direction: 45,\n      x: 0,\n      y: 0,\n      flags: {\n        DAESRD: {\n          SpiritualWeapon: {\n            ActorId: tactor.id\n          }\n        }\n      },\n      fillColor: game.user.color\n    }\n    Hooks.once(\"createMeasuredTemplate\", deleteTemplates);\n\n    let template = new game.dnd5e.canvas.AbilityTemplate(templateData)\n    template.actorSheet = tactor.sheet;\n    template.drawPreview()\n\n    async function deleteTemplates(scene, template) {\n      let removeTemplates = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.SpiritualWeaponRange?.ActorId === tactor.id);\n      await canvas.templates.deleteMany([removeTemplates[0].id]);\n    };\n  })\n  await tactor.createOwnedItem(\n    {\n      \"name\": \"Summoned Spiritual Weapon\",\n      \"type\": \"weapon\",\n      \"data\": {\n        \"equipped\": true,\n        \"identified\": true,\n        \"activation\": {\n          \"type\": \"bonus\",\n        },\n        \"target\": {\n          \"value\": 1,\n          \"width\": null,\n          \"type\": \"creature\"\n        },\n        \"range\": {\n          \"value\": 5,\n          \"units\": \"ft\"\n        },\n        \"ability\": \"\",\n        \"actionType\": \"msak\",\n        \"attackBonus\": \"0\",\n        \"chatFlavor\": \"\",\n        \"critical\": null,\n        \"damage\": {\n          \"parts\": [\n            [\n              `${damage}d8+@mod`,\n              \"force\"\n            ]\n          ],\n        },\n        \"weaponType\": \"simpleM\",\n        \"proficient\": true\n      },\n      \"flags\": {\n        \"DAESRD\": {\n          \"SpiritualWeapon\":\n            target.actor.id\n        }\n      },\n      \"img\": `${image}`,\n    },\n  );\n  ui.notifications.notify(\"Weapon created in your inventory\")\n\n}\n\n// Delete Spitirual Weapon and template\nif (args[0] === \"off\") {\n  let removeItem = tactor.items.find(i => i.data.flags?.DAESRD?.SpiritualWeapon === tactor.id)\n  let template = canvas.templates.placeables.filter(i => i.data.flags.DAESRD.SpiritualWeapon?.ActorId === tactor.id)\n  if(removeItem) await tactor.deleteOwnedItem(removeItem.id);\n  if(template) await canvas.templates.deleteMany(template[0].id)\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Spiritual Weapon","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @item.level @item\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId) || token;\n\nconst castingItem = lastArg.efData.flags.dae.itemData\n\nlet data = {}\n/**\n * Create Spiritual Weapon item in inventory\n */\nif (args[0] === \"on\") {\n  let damage = Math.floor((castingItem.data.level / 2));\n  let image = castingItem.img;\n\n  let range = MeasuredTemplate.create({\n    t: \"circle\",\n    user: game.user._id,\n    x: target.x + canvas.grid.size / 2,\n    y: target.y + canvas.grid.size / 2,\n    direction: 0,\n    distance: 60,\n    borderColor: \"#FF0000\",\n    flags: {\n      DAESRD: {\n        SpiritualWeaponRange: {\n          ActorId: tactor.id\n        }\n      }\n    }\n    //fillColor: \"#FF3366\",\n  });\n  range.then(result => {\n    let templateData = {\n      t: \"rect\",\n      user: game.user._id,\n      distance: 7,\n      direction: 45,\n      x: 0,\n      y: 0,\n      flags: {\n        DAESRD: {\n          SpiritualWeapon: {\n            ActorId: tactor.id\n          }\n        }\n      },\n      fillColor: game.user.color\n    }\n    Hooks.once(\"createMeasuredTemplate\", deleteTemplates);\n\n    let template = new game.dnd5e.canvas.AbilityTemplate(templateData)\n    template.actorSheet = tactor.sheet;\n    template.drawPreview()\n\n    async function deleteTemplates(scene, template) {\n      let removeTemplates = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.SpiritualWeaponRange?.ActorId === tactor.id);\n      await canvas.templates.deleteMany([removeTemplates[0].id]);\n    };\n  })\n  await tactor.createOwnedItem(\n    {\n      \"name\": \"Summoned Spiritual Weapon\",\n      \"type\": \"weapon\",\n      \"data\": {\n        \"equipped\": true,\n        \"identified\": true,\n        \"activation\": {\n          \"type\": \"bonus\",\n        },\n        \"target\": {\n          \"value\": 1,\n          \"width\": null,\n          \"type\": \"creature\"\n        },\n        \"range\": {\n          \"value\": 5,\n          \"units\": \"ft\"\n        },\n        \"ability\": \"\",\n        \"actionType\": \"msak\",\n        \"attackBonus\": \"0\",\n        \"chatFlavor\": \"\",\n        \"critical\": null,\n        \"damage\": {\n          \"parts\": [\n            [\n              `${damage}d8+@mod`,\n              \"force\"\n            ]\n          ],\n        },\n        \"weaponType\": \"simpleM\",\n        \"proficient\": true\n      },\n      \"flags\": {\n        \"DAESRD\": {\n          \"SpiritualWeapon\":\n            target.actor.id\n        }\n      },\n      \"img\": `${image}`,\n    },\n  );\n  ui.notifications.notify(\"Weapon created in your inventory\")\n\n}\n\n// Delete Spitirual Weapon and template\nif (args[0] === \"off\") {\n  let removeItem = tactor.items.find(i => i.data.flags?.DAESRD?.SpiritualWeapon === tactor.id)\n  let template = canvas.templates.placeables.filter(i => i.data.flags.DAESRD.SpiritualWeapon?.ActorId === tactor.id)\n  if(removeItem) await tactor.deleteOwnedItem(removeItem.id);\n  if(template) await canvas.templates.deleteMany(template[0].id)\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/enchant-magenta-2.jpg","effects":[{"_id":"atMn9UEVkYDOK1KK","flags":{"dae":{"stackable":false,"specialDuration":["None"],"macroRepeat":"none","transfer":false},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"@attributes.spellcasting @item.level","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/enchant-magenta-2.jpg","label":"Spiritual Weapon","tint":"","transfer":false}]}
{"_id":"gkehj8Ibf0Hsdmo3","name":"Grease","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>Slick grease covers the ground in a 10-foot square centered on a point within range and turns it into difficult terrain for the duration.</p><p>When the grease appears, each creature standing in its area must succeed on a Dexterity saving throw or fall prone. A creature that enters the area or ends its turn there must also succeed on a&nbsp;Dexterity saving throw or fall prone.</p>","chat":"","unidentified":""},"source":"PHB pg. 246","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":10,"width":null,"units":"ft","type":"square"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"dex","dc":null,"scaling":"spell"},"level":1,"school":"con","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A bit of pork rind or butter","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/fog-orange-1.jpg","effects":[{"_id":"EKeituZxAuKkuZm3","flags":{"core":{"statusId":"combat-utility-belt.prone"},"combat-utility-belt":{"conditionId":"prone","overlay":false},"dae":{"stackable":false,"specialDuration":"None","macroRepeat":"none","transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/prone.svg","label":"Prone","tint":"","transfer":false}]}
{"_id":"h7ElRUH4fQA4dY4i","name":"Charm Person","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You attempt to charm a humanoid you can see within range. It must make a Wisdom saving throw, and does so with advantage if you or your companions are fighting it. If it fails the saving throw, it is Charmed by you until the spell ends or until you or your companions do anything harmful to it. The Charmed creature regards you as a friendly acquaintance. When the spell ends, the creature knows it was Charmed by you.</p>","chat":"","unidentified":""},"source":"PHB pg. 221","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"uPKtziB4BMD9uNh9","active":true,"_targets":[]}],"equipActive":true,"alwaysActive":false},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/explosion-magenta-2.jpg","effects":[{"_id":"IlTwN6xjdDIiHdf4","flags":{"core":{"statusId":"combat-utility-belt.charmed"},"combat-utility-belt":{"conditionId":"charmed"},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/charmed.svg","label":"Charmed","tint":"","transfer":false}]}
{"_id":"kBzkcCyByTZsnYPD","name":"Eyebite","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>For the spell’s Duration, your eyes become an inky void imbued with dread power. One creature of your choice within 60 feet of you that you can see must succeed on a Wisdom saving throw or be affected by one of the following Effects of your choice for the Duration. On each of your turns until the spell ends, you can use your action to target another creature but can’t target a creature again if it has succeeded on a saving throw against this casting of eyebite.</p>\n<ul>\n<li><strong>Asleep</strong>. The target falls Unconscious. It wakes up if it takes any damage or if another creature uses its action to shake the sleeper awake.</li>\n<li><strong>Panicked</strong>. The target is Frightened of you. On each of its turns, the frigh⁠tened creature must take the Dash action and move away from you by the safest and shortest available route, unless there is nowhere to move. If the target moves to a place at least 60 feet away from you where it can no longer see you, this effect ends.</li>\n<li><strong>Sickened</strong>. The target has disadvantage on Attack rolls and Ability Checks. At the end of each of its turns, it can make another Wisdom saving throw. If it succeeds, the effect ends</li>\n</ul>","chat":"","unidentified":""},"source":"PHB pg. 238","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":""},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"flat"},"level":6,"school":"nec","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":false,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"Eyebite @target @attributes.spelldc ","mode":"+","targetSpecific":false,"id":1,"itemId":"XcK0JcIi8L5qpnzF","active":true,"_targets":[],"label":"Macro Execute"}]},"itemacro":{"macro":{"_data":{"name":"Eyebite","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\nlet folder = await game.packs.get(\"Dynamic-Effects-SRD.DAE SRD Macros\").getContent()\nlet CUBControl = folder.find(i => i.data.name === \"CUB Condition\")\n\n/**\n * Dialog appears on players screen, CondtionControll callback execute on GM end \n */\n\nfunction EyebiteDialog() {\n    new Dialog({\n        title: \"Eyebite options\",\n        content: \"<p>Target a token and select the effect</p>\",\n        buttons: {\n            one: {\n                label: \"Asleep\",\n                callback: async () => {\n                    for (let target of game.user.targets) {\n                        const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n                        let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n                        if (saveRoll < saveData.ability) {\n                            ChatMessage.create({ content: `${target.name} failed the save with a ${saveRoll}` });\n                            CUBControl.execute(\"apply\", \"Unconscious\", target);\n                        }\n                        else {\n                            ChatMessage.create({ content: `${target.name} passed the save with a ${saveRoll}` });\n                        }\n                    }\n                }\n            },\n            two: {\n                label: \"Panicked\",\n                callback: async () => {\n                    for (let target of game.user.targets) {\n                        const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n                        let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n                        if (saveRoll < saveData.ability) {\n                            ChatMessage.create({ content: `${target.name} failed the save with a ${saveRoll}` });\n                            CUBControl.execute(\"apply\", \"Frightened\", target);\n                        }\n                        else {\n                            ChatMessage.create({ content: `${target.name} passed the save with a ${saveRoll}` });\n                        }\n                    }\n                }\n            },\n            three: {\n                label: \"Sickened\",\n                callback: async () => {\n                    for (let target of game.user.targets) {\n                        const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n                        let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n                        if (saveRoll < saveData.ability) {\n                            ChatMessage.create({ content: `${target.name} failed the save with a ${saveRoll}` });\n                            CUBControl.execute(\"apply\", \"Poisoned\", target);\n                        }\n                        else {\n                            ChatMessage.create({ content: `${target.name} passed the save with a ${saveRoll}` });\n                        }\n                    }\n                }\n            },\n        }\n    }).render(true);\n}\n\nif (args[0] === \"on\") {\n    EyebiteDialog();\n    ChatMessage.create({ content: `${target.name} is blessed with Eyebite` });\n\n}\n\n//Cleanup hooks and flags.\nif (args[0] === \"each\") {\n    EyebiteDialog();\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Eyebite","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\nlet folder = await game.packs.get(\"Dynamic-Effects-SRD.DAE SRD Macros\").getContent()\nlet CUBControl = folder.find(i => i.data.name === \"CUB Condition\")\n\n/**\n * Dialog appears on players screen, CondtionControll callback execute on GM end \n */\n\nfunction EyebiteDialog() {\n    new Dialog({\n        title: \"Eyebite options\",\n        content: \"<p>Target a token and select the effect</p>\",\n        buttons: {\n            one: {\n                label: \"Asleep\",\n                callback: async () => {\n                    for (let target of game.user.targets) {\n                        const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n                        let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n                        if (saveRoll < saveData.ability) {\n                            ChatMessage.create({ content: `${target.name} failed the save with a ${saveRoll}` });\n                            CUBControl.execute(\"apply\", \"Unconscious\", target);\n                        }\n                        else {\n                            ChatMessage.create({ content: `${target.name} passed the save with a ${saveRoll}` });\n                        }\n                    }\n                }\n            },\n            two: {\n                label: \"Panicked\",\n                callback: async () => {\n                    for (let target of game.user.targets) {\n                        const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n                        let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n                        if (saveRoll < saveData.ability) {\n                            ChatMessage.create({ content: `${target.name} failed the save with a ${saveRoll}` });\n                            CUBControl.execute(\"apply\", \"Frightened\", target);\n                        }\n                        else {\n                            ChatMessage.create({ content: `${target.name} passed the save with a ${saveRoll}` });\n                        }\n                    }\n                }\n            },\n            three: {\n                label: \"Sickened\",\n                callback: async () => {\n                    for (let target of game.user.targets) {\n                        const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n                        let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n                        if (saveRoll < saveData.ability) {\n                            ChatMessage.create({ content: `${target.name} failed the save with a ${saveRoll}` });\n                            CUBControl.execute(\"apply\", \"Poisoned\", target);\n                        }\n                        else {\n                            ChatMessage.create({ content: `${target.name} passed the save with a ${saveRoll}` });\n                        }\n                    }\n                }\n            },\n        }\n    }).render(true);\n}\n\nif (args[0] === \"on\") {\n    EyebiteDialog();\n    ChatMessage.create({ content: `${target.name} is blessed with Eyebite` });\n\n}\n\n//Cleanup hooks and flags.\nif (args[0] === \"each\") {\n    EyebiteDialog();\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/evil-eye-red-3.jpg","effects":[{"_id":"z1vYz44IiLnxCyKe","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/evil-eye-red-3.jpg","label":"Eyebite","tint":"","transfer":false}]}
{"_id":"lWInHCtVOYQ73B03","name":"Greater Invisibility","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>You or a creature you touch becomes Invisible until the spell ends. Anything the target is wearing or carrying is Invisible as long as it is on the target’s person.</p>","chat":"","unidentified":""},"source":"PHB pg. 246","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":4,"school":"ill","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"Invisibility @target","mode":"+","targetSpecific":false,"id":1,"itemId":"H4h4NNlgyp0rFmjC","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Greater Invisibility","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\n\nlet target = canvas.tokens.get(args[1])\nif (args[0] === \"on\") {\n    ChatMessage.create({ content: `${target.name} turns invisible` });\n    target.update({ \"hidden\": true });\n}\nif (args[0] === \"off\") {\n    ChatMessage.create({ content: `${target.name} re-appears` });\n    target.update({ \"hidden\": false });\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Greater Invisibility","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\n\nlet target = canvas.tokens.get(args[1])\nif (args[0] === \"on\") {\n    ChatMessage.create({ content: `${target.name} turns invisible` });\n    target.update({ \"hidden\": true });\n}\nif (args[0] === \"off\") {\n    ChatMessage.create({ content: `${target.name} re-appears` });\n    target.update({ \"hidden\": false });\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/fog-water-air-3.jpg","effects":[{"_id":"XgWMGpftjCREyKXs","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":["None"],"macroRepeat":"none"}},"changes":[{"key":"macro.itemMacro","value":"@target","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/fog-water-air-3.jpg","label":"New Active Effect","tint":"","transfer":false}]}
{"_id":"o5KjAeWOCfPjO4pY","name":"Geas","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You place a magical comm⁠and on a creature that you can see within range, forcing it to carry out some service or refrain from some action or course of activity as you decide. If the creature can understand you, it must succeed on a Wisdom saving throw or become Charmed by you for the Duration. While the creature is cha⁠rmed by you, it takes 5d10 psychic damage each time it acts in a manner directly counter to your instructions, but no more than once each day. A creature that can’t understand you is unaffected by the spell.</p>\n<p>You can issue any comm⁠and you choose, short of an activity that would result in certain death. Should you issue a suicidal comm⁠and, the spell ends.</p>\n<p>You can end the spell early by using an action to dismiss it. A Remove Curse, Greater Restoration, or wish spell also ends it.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 7th or 8th level, the Duration is 1 year. When you cast this spell using a spell slot of 9th level, the spell lasts until it is ended by one of the Spells mentioned above.</p>","chat":"","unidentified":""},"source":"PHB pg. 244","activation":{"type":"minute","cost":1,"condition":""},"duration":{"value":30,"units":"day"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["5d10","psychic"]],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":5,"school":"enc","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"NIAyvC7zWFPPWqA8","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/air-burst-air-3.jpg","effects":[{"_id":"LMQSfitDZ7SSxXNb","flags":{"core":{"statusId":"combat-utility-belt.charmed"},"combat-utility-belt":{"conditionId":"charmed"},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/charmed.svg","label":"Charmed","tint":"","transfer":false}]}
{"_id":"pThYfEUf7rF2NTS0","name":"Faerie Fire","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>Each object in a 20-foot cube within range is outlined in blue, green, or violet light (your choice). Any creature in the area when the spell is cast is also outlined in light if it fails a Dexterity saving throw. For the duration, objects and affected creatures shed dim light in a 10-foot radius.</p><p>Any attack roll against an affected creature or object has advantage if the attacker can see it, and the affected creature or object can’t benefit from being invisible.</p>","chat":"","unidentified":""},"source":"PHB pg. 239","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":20,"width":null,"units":"ft","type":"cube"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"dex","dc":null,"scaling":"spell"},"level":1,"school":"evo","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"itemacro":{"macro":{"_data":{"name":"Faerie Fire","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nlet target = canvas.tokens.get(lastArg.tokenId)\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\nif(args[0]=== \"on\"){\n\n    new Dialog({\n        title: \"Choose the colour for Faerie Fire\",\n        buttons: {\n            one: {\n                label: \"Blue\",\n                callback: () => {\n                    DAE.setFlag(tactor, 'FaerieFire', {\n                        color: target.data.lightColor,\n                        alpha: target.data.lightAlpha,\n                        dimLight: target.data.dimLight\n                    });\n                    target.update({\"lightColor\": \"#5ab9e2\", \"lightAlpha\" : 0.16, \"dimLight\" : \"10\"})\n                }\n            },\n            two: {\n                label: \"Green\",\n                callback: () => {\n                    DAE.setFlag(tactor, 'FaerieFire', {\n                        color: target.data.lightColor,\n                        alpha: target.data.lightAlpha,\n                        dimLight: target.data.dimLight\n                    });\n                    target.update({\"lightColor\": \"#55d553\", \"lightAlpha\" : 0.16,\"dimLight\" : \"10\"})\n                }\n            },\n            three: {\n                label: \"Other\",\n                callback: () => {\n                    DAE.setFlag(tactor, 'FaerieFire', {\n                        color: target.data.lightColor,\n                        alpha: target.data.lightAlpha,\n                        dimLight: target.data.dimLight\n                    });\n                    target.update({\"lightColor\": \"#844ec6\", \"lightAlpha\" : 0.16,\"dimLight\" : \"10\"})\n                }\n            }\n        }\n    }).render(true);\n}\n\nif(args[0] === \"off\"){\n    let {color, alpha, dim} = await DAE.getFlag(tactor, \"FaerieFire\")\n    target.update({\"lightColor\": color, \"lightAlpha\": alpha,\"dimLight\" : dim})\n    DAE.unsetFlag(tactor, \"FaerieFire\")\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Faerie Fire","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nlet target = canvas.tokens.get(lastArg.tokenId)\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\nif(args[0]=== \"on\"){\n\n    new Dialog({\n        title: \"Choose the colour for Faerie Fire\",\n        buttons: {\n            one: {\n                label: \"Blue\",\n                callback: () => {\n                    DAE.setFlag(tactor, 'FaerieFire', {\n                        color: target.data.lightColor,\n                        alpha: target.data.lightAlpha,\n                        dimLight: target.data.dimLight\n                    });\n                    target.update({\"lightColor\": \"#5ab9e2\", \"lightAlpha\" : 0.16, \"dimLight\" : \"10\"})\n                }\n            },\n            two: {\n                label: \"Green\",\n                callback: () => {\n                    DAE.setFlag(tactor, 'FaerieFire', {\n                        color: target.data.lightColor,\n                        alpha: target.data.lightAlpha,\n                        dimLight: target.data.dimLight\n                    });\n                    target.update({\"lightColor\": \"#55d553\", \"lightAlpha\" : 0.16,\"dimLight\" : \"10\"})\n                }\n            },\n            three: {\n                label: \"Other\",\n                callback: () => {\n                    DAE.setFlag(tactor, 'FaerieFire', {\n                        color: target.data.lightColor,\n                        alpha: target.data.lightAlpha,\n                        dimLight: target.data.dimLight\n                    });\n                    target.update({\"lightColor\": \"#844ec6\", \"lightAlpha\" : 0.16,\"dimLight\" : \"10\"})\n                }\n            }\n        }\n    }).render(true);\n}\n\nif(args[0] === \"off\"){\n    let {color, alpha, dim} = await DAE.getFlag(tactor, \"FaerieFire\")\n    target.update({\"lightColor\": color, \"lightAlpha\": alpha,\"dimLight\" : dim})\n    DAE.unsetFlag(tactor, \"FaerieFire\")\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/fire-arrows-jade-2.jpg","effects":[{"_id":"0hz3Z5o2VSWZFDyA","flags":{"dae":{"stackable":false,"specialDuration":["None"],"macroRepeat":"none","transfer":false},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/fire-arrows-jade-2.jpg","label":"Faerie Fire","tint":"","transfer":false}]}
{"_id":"pp5fv0Avmy0rfsgI","name":"Blindness/Deafness","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You can blind or deafen a foe. Choose one creature that you can see within range to make a Constitution saving throw. If it fails, the target is either blinded or deafened (your choice) for the duration. At the end of each of its turns, the target can make a Constitution saving throw. On a success, the spell ends.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 219","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"nec","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"\"BlindDeaf\" @target","mode":"+","targetSpecific":false,"id":1,"itemId":"YzSbwD21Q0oxKmEU","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Blindness/Deafness","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nlet target = canvas.tokens.get(lastArg.tokenId)\nconst DAEitem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEitem.data.save\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Choose an Effect\",\n        buttons: {\n            one: {\n                label: \"Blindness\",\n                callback: () => {\n                    DAE.setFlag(tactor, \"DAEBlind\", \"blind\")\n                    game.cub.addCondition(\"Blinded\", target)\n                }\n            },\n            two: {\n                label: \"Deafness\",\n                callback: () => {\n                    DAE.setFlag(tactor, \"DAEBlind\", \"deaf\")\n                    game.cub.addCondition(\"Deafened\", target)\n                }\n            }\n        },\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, \"DAEBlind\")\n    if (flag === \"blind\") {\n        game.cub.removeCondition(\"Blinded\", target)\n    } else if (flag === \"deaf\") {\n        game.cub.removeCondition(\"Deafened\", target)\n    }\n    DAE.unsetFlag(tactor, \"DAEBlind\")\n}\n\nif (args[0] === \"each\") {\n    const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEitem?.name || \"\"}`;\n    let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n    if (saveRoll >= saveData.dc) tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId);\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null,"_data":{"name":"Blindness/Deafness","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nlet target = canvas.tokens.get(lastArg.tokenId)\nconst DAEitem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEitem.data.save\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Choose an Effect\",\n        buttons: {\n            one: {\n                label: \"Blindness\",\n                callback: () => {\n                    DAE.setFlag(tactor, \"DAEBlind\", \"blind\")\n                    game.cub.addCondition(\"Blinded\", target)\n                }\n            },\n            two: {\n                label: \"Deafness\",\n                callback: () => {\n                    DAE.setFlag(tactor, \"DAEBlind\", \"deaf\")\n                    game.cub.addCondition(\"Deafened\", target)\n                }\n            }\n        },\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, \"DAEBlind\")\n    if (flag === \"blind\") {\n        game.cub.removeCondition(\"Blinded\", target)\n    } else if (flag === \"deaf\") {\n        game.cub.removeCondition(\"Deafened\", target)\n    }\n    DAE.unsetFlag(tactor, \"DAEBlind\")\n}\n\nif (args[0] === \"each\") {\n    const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEitem?.name || \"\"}`;\n    let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n    if (saveRoll >= saveData.dc) tactor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId);\n}","author":"E4BVikjIkVl2lL2j"}}},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/evil-eye-red-2.jpg","effects":[{"_id":"AcxliM1QbpEbJ1zQ","flags":{"dae":{"stackable":false,"specialDuration":[],"macroRepeat":"none","transfer":false},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"","label":"Blindness/Deafness","tint":"","transfer":false}]}
{"_id":"qHWBKyQxm3CTm2yS","name":"Phantasmal Killer","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You tap into the nightmares of a creature you can see within range and create an illusory manifestation of its deepest fears, visible only to that creature. The target must make a Wisdom saving throw. On a failed save, the target becomes Frightened for the Duration. At the end of each of the target’s turns before the spell ends, the target must succeed on a Wisdo⁠m saving throw or take 4d10 psychic damage. On a successful save, the spell ends.</p>\n<p><strong>At Higher Levels</strong>. When you cast this spell using a spell slot of 5th level or higher, the damage increases by 1d10 for each slot level above 4th.</p>","chat":"","unidentified":""},"source":"PHB pg. 265","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":120,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["4d10","psychic"]],"versatile":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":4,"school":"ill","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":"1d10"}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Frightened","mode":"+","targetSpecific":false,"id":1,"itemId":"UWXxnmoLDNjm4DTU","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/horror-eerie-3.jpg","effects":[{"_id":"xzM7tIPM4P693aM3","flags":{"core":{"statusId":"combat-utility-belt.frightened"},"combat-utility-belt":{"conditionId":"frightened","overlay":false},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/frightened.svg","label":"Frightened","tint":"","transfer":false}]}
{"name":"Blindness/Deafness (old version)","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You can blind or deafen a foe. Choose one creature that you can see within range to make a Constitution saving throw. If it fails, the target is either blinded or deafened (your choice) for the duration. At the end of each of its turns, the target can make a Constitution saving throw. On a success, the spell ends.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 219","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"nec","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"\"BlindDeaf\" @target","mode":"+","targetSpecific":false,"id":1,"itemId":"YzSbwD21Q0oxKmEU","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Blindness/Deafness","type":"script","scope":"global","command":"","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/evil-eye-red-2.jpg","effects":[{"_id":"H9LqbcfPDXDFDtE5","flags":{"dae":{"transfer":false}},"changes":[{"key":"macro.execute","value":"\"BlindDeaf\" @target","mode":0,"priority":0}],"duration":{},"icon":"systems/dnd5e/icons/spells/evil-eye-red-2.jpg","label":"Blindness/Deafness","transfer":false}],"_id":"qygAvLGoA3GtND07"}
{"_id":"r70LzHV9qDX55KwA","name":"Moonbeam","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>A silvery beam of pale light shines down in a 5-foot-radius, 40-foot-high Cylinder centered on a point within range. Until the spell ends, dim light fills the cylind⁠er.</p><p>When a creature enters the spell’s area for the first time on a turn or starts its turn there, it is engulfed in ghostly flames that cause searing pain, and it must make a Constitution saving throw. It takes 2d10 radiant damage on a failed save, or half as much damage on a successful one.</p><p>A Shapechanger makes its saving throw with disadvantage. If it fails, it also instantly reverts to its original form and can’t assume a different form until it leaves the spell’s light.</p><p>On each of your turns after you cast this spell, you can use an action to move the beam up to 60 feet in any direction.</p><p><strong>At Higher Levels</strong>. When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d10 for each slot level above 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 261","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":2,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Several seeds of any moonseed plant and a piece of opalescent feldspar","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dae":{"activeEquipped":false,"alwaysActive":false},"core":{"sourceId":"Item.p7qDbkiwGTZYC3EG"},"itemacro":{"macro":{"_data":{"name":"Moonbeam","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\nconst DC = args[1]\n/**\n * Create Moonbeam item in inventory\n */\nif (args[0] === \"on\") {\n  let templateData = {\n    t: \"circle\",\n    user: game.user._id,\n    distance: 5,\n    direction: 0,\n    x: 0,\n    y: 0,\n    flags: {\n        DAESRD: {\n            Moonbeam: {\n                ActorId: tactor.id\n            }\n        }\n    },\n    fillColor: game.user.color\n}\nlet template = new game.dnd5e.canvas.AbilityTemplate(templateData)\ntemplate.actorSheet = tactor.sheet;\ntemplate.drawPreview()\n\n  let damage = DAEItem.data.level;\n  await tactor.createOwnedItem(\n    {\n      \"name\": \"Moonbeam repeating\",\n      \"type\": \"spell\",\n      \"data\": {\n        \"source\": \"Casting Moonbeam\",\n        \"ability\": \"\",\n        \"actionType\": \"save\",\n        \"attackBonus\": 0,\n        \"damage\": {\n          \"parts\": [\n            [\n              `${damage}d10`,\n              \"radiant\"\n            ]\n          ],\n        },\n        \"formula\": \"\",\n        \"save\": {\n          \"ability\": \"con\",\n          \"dc\": saveData.dc,\n          \"scaling\": \"spell\"\n        },\n        \"level\": 0,\n        \"school\": \"abj\",\n        \"preparation\": {\n          \"mode\": \"prepared\",\n          \"prepared\": false\n        },\n\n      },\n      \"img\": DAEItem.img,\n    }\n  );\n}\n\n// Delete Moonbeam\nif (args[0] === \"off\") {\n  let casterItem = tactor.data.items.find(i => i.name === \"Moonbeam repeating\" && i.type === \"spell\")\n  tactor.deleteOwnedItem(casterItem._id)\n  let template = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.Moonbeam?.ActorId === tactor.id)\n    canvas.templates.deleteMany(template[0].id)\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Moonbeam","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\nconst DC = args[1]\n/**\n * Create Moonbeam item in inventory\n */\nif (args[0] === \"on\") {\n  let templateData = {\n    t: \"circle\",\n    user: game.user._id,\n    distance: 5,\n    direction: 0,\n    x: 0,\n    y: 0,\n    flags: {\n        DAESRD: {\n            Moonbeam: {\n                ActorId: tactor.id\n            }\n        }\n    },\n    fillColor: game.user.color\n}\nlet template = new game.dnd5e.canvas.AbilityTemplate(templateData)\ntemplate.actorSheet = tactor.sheet;\ntemplate.drawPreview()\n\n  let damage = DAEItem.data.level;\n  await tactor.createOwnedItem(\n    {\n      \"name\": \"Moonbeam repeating\",\n      \"type\": \"spell\",\n      \"data\": {\n        \"source\": \"Casting Moonbeam\",\n        \"ability\": \"\",\n        \"actionType\": \"save\",\n        \"attackBonus\": 0,\n        \"damage\": {\n          \"parts\": [\n            [\n              `${damage}d10`,\n              \"radiant\"\n            ]\n          ],\n        },\n        \"formula\": \"\",\n        \"save\": {\n          \"ability\": \"con\",\n          \"dc\": saveData.dc,\n          \"scaling\": \"spell\"\n        },\n        \"level\": 0,\n        \"school\": \"abj\",\n        \"preparation\": {\n          \"mode\": \"prepared\",\n          \"prepared\": false\n        },\n\n      },\n      \"img\": DAEItem.img,\n    }\n  );\n}\n\n// Delete Moonbeam\nif (args[0] === \"off\") {\n  let casterItem = tactor.data.items.find(i => i.name === \"Moonbeam repeating\" && i.type === \"spell\")\n  tactor.deleteOwnedItem(casterItem._id)\n  let template = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.Moonbeam?.ActorId === tactor.id)\n    canvas.templates.deleteMany(template[0].id)\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/beam-blue-3.jpg","effects":[{"_id":"kQG5Br84cCacfPAd","flags":{"dae":{"stackable":false,"specialDuration":["None"],"transfer":false,"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"@attributes.spelldc","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/beam-blue-3.jpg","label":"Moonbeam Summon","tint":"","transfer":false}]}
{"_id":"rBsAQPR1WatxCs0y","name":"Animal Friendship","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>This spell lets you convince a beast that you mean it no harm. Choose a beast that you can see within range. It must see and hear you. If the beast's Intelligence is 4 or higher, the spell fails. Otherwise, the beast must succeed on a Wisdom saving throw or be charmed by you for the spell's duration. If you or one of your companions harms the target, the spell ends.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, you can affect one additional beast for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 212","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":24,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A morsel of food.","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"q3Nvmbb9hZeJDUkU","active":true,"_targets":[]}],"equipActive":true,"alwaysActive":false},"dae":{"activeEquipped":false,"alwaysActive":false}},"img":"systems/dnd5e/icons/spells/wild-jade-2.jpg","effects":[{"_id":"DesfGqDm53kqOTtp","flags":{"core":{"statusId":"combat-utility-belt.charmed"},"combat-utility-belt":{"conditionId":"charmed"},"dae":{"transfer":false}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/charmed.svg","label":"Charmed","tint":"","transfer":false}]}
{"name":"Web","permission":{"default":0,"E4BVikjIkVl2lL2j":3},"type":"spell","data":{"description":{"value":"<p>You conjure a mass of thick, sticky webbing at a point of your choice within range. The webs fill a 20-foot cube from that point for the Duration. The webs are difficult terrain and lightly obscure their area.</p>\n        <p>If the webs aren’t anchored between two solid masses (such as walls or trees) or layered across a floor, wall, or ceiling, the conjured web collapses on itself, and the spell ends at the start of your next turn. Webs layered over a flat surface have a depth of 5 feet.</p>\n        <p>Each creature that starts its turn in the webs or that enters them during its turn must make a Dexterity saving throw. On a failed save, the creature is Restrained as long as it remains in the webs or until it breaks free.</p>\n        <p>A creature Restrained by the webs can use its action to make a Strength check against your spell save DC. If it succeeds, it is no longer Restrained.</p>\n        <p>The webs are flammable. Any 5-foot cube of webs exposed to fire burns away in 1 round, dealing 2d4 fire damage to any creature that starts its turn in the fire.</p>","chat":"","unidentified":""},"source":"PHB pg. 287","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":20,"width":null,"units":"ft","type":"cube"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["2d4","fire"]],"versatile":"","value":""},"formula":"","save":{"ability":"dex","dc":null,"scaling":"spell"},"level":2,"school":"con","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A bit of spiderweb","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"midi-qol":{"onUseMacroName":""}},"img":"systems/dnd5e/icons/spells/shielding-spirit-3.jpg","effects":[{"_id":"1s049vONn2VyCOvH","flags":{"core":{"statusId":"combat-utility-belt.restrained"},"combat-utility-belt":{"conditionId":"restrained","overlay":false},"dae":{"stackable":false,"specialDuration":[],"transfer":false},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"alignment":"","type":"","aura":"None","radius":null,"save":"","savedc":null}},"changes":[],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"modules/combat-utility-belt/icons/restrained.svg","label":"Restrained","tint":"","transfer":false}],"_id":"rVDuKDZ3YdWiWKRr"}
{"_id":"viIsBmDscOJ7Niel","name":"Irresistible Dance","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>Choose one creature that you can see within range. The target begins a comic dance in place: shuffling, tapping its feet, and capering for the duration. Creatures that can't be charmed are immune to this spell.</p>\n<p>A dancing creature must use all its movement to dance without leaving its space and has disadvantage on Dexterity saving throws and attack rolls. While the target is affected by this spell, other creatures have advantage on attack rolls against it. As an action, a dancing creature makes a Wisdom saving throw to regain control of itself. On a successful save, the spell ends.</p>","chat":"","unidentified":""},"source":"PGB pg. 264","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":6,"school":"enc","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"flags.dnd5e.conditions","value":"Charmed","mode":"+","targetSpecific":false,"id":1,"itemId":"U5jQJ2Ry565NS8BY","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Irresistible Dance","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc @item\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\n\nif (args[0] === \"each\") {\n    new Dialog({\n        title: \"Use action to make a wisdom save to end Irresistible Dance?\",\n        buttons: {\n            one: {\n                label: \"Yes\",\n                callback: async () => {\n                    const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n                    let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n\n                    if (saveRoll >= saveData.dc) {\n                        target.actor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId);\n                    }\n                    if (saveRoll < saveData.dc) {\n                        ChatMessage.create({ content: `${target.name} fails the save` });\n                    }\n                }\n            },\n            two: {\n                label: \"No\",\n                callback: () => {\n                }\n            }\n        }\n    }).render(true);\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Irresistible Dance","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target @attributes.spelldc @item\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\nconst saveData = DAEItem.data.save\n\n\nif (args[0] === \"each\") {\n    new Dialog({\n        title: \"Use action to make a wisdom save to end Irresistible Dance?\",\n        buttons: {\n            one: {\n                label: \"Yes\",\n                callback: async () => {\n                    const flavor = `${CONFIG.DND5E.abilities[saveData.ability]} DC${saveData.dc} ${DAEItem?.name || \"\"}`;\n                    let saveRoll = (await tactor.rollAbilitySave(saveData.ability, { flavor })).total;\n\n                    if (saveRoll >= saveData.dc) {\n                        target.actor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId);\n                    }\n                    if (saveRoll < saveData.dc) {\n                        ChatMessage.create({ content: `${target.name} fails the save` });\n                    }\n                }\n            },\n            two: {\n                label: \"No\",\n                callback: () => {\n                }\n            }\n        }\n    }).render(true);\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/link-blue-2.jpg","effects":[{"_id":"3mNPKbwjiaapU9XI","flags":{"dae":{"stackable":false,"specialDuration":[],"macroRepeat":"none","transfer":false},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"0","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/link-blue-2.jpg","label":"Irresistible Dance","tint":"","transfer":false}]}
{"_id":"vtUhpbyJYzB2J9ok","name":"Shillelagh","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>The wood of a club or quarterstaff you are holding is imbued with nature's power. For the duration, you can use your spellcasting ability instead of Strength for the attack and damage rolls of melee attacks using that weapon, and the weapon's damage die becomes a d8. The weapon also becomes magical, if it isn't already. The spell ends if you cast it again or if you let go of the weapon.</p>","chat":"","unidentified":""},"source":"PHB pg. 275","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"spec","type":"object"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":0,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A shamrock leaf, and a club or quarterstaff","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":false,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"Shillelagh @target","mode":"+","targetSpecific":false,"id":1,"itemId":"HgYH1Eb3LQ19tsjJ","active":true,"_targets":[],"label":"Macro Execute"}]},"itemacro":{"macro":{"_data":{"name":"Shillelagh","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet weapons = tactor.items.filter(i => i.data.type === `weapon`);\nlet weapon_content = ``;\n\nfor (let weapon of weapons) {\n    weapon_content += `<option value=${weapon.id}>${weapon.name}</option>`;\n}\nif (args[0] === \"on\") {\n    let content = `\n<div class=\"form-group\">\n  <label>Weapons : </label>\n  <select name=\"weapons\">\n    ${weapon_content}\n  </select>\n</div>`;\n\n    new Dialog({\n        title: \"Choose a club or quarterstaff\",\n        content,\n        buttons:\n        {\n            Ok:\n            {\n                label: `Ok`,\n                callback: (html) => {\n                    let itemId = html.find('[name=weapons]')[0].value;\n                    let weaponItem = tactor.items.get(itemId);\n                    let copy_item = duplicate(weaponItem);\n                    DAE.setFlag(tactor, `shillelagh`, {\n                        id : itemId,\n                        damage : copy_item.data.damage.parts[0][0]    \n                    });\n                    let damage = copy_item.data.damage.parts[0][0];\n                    var newdamage = damage.replace(/1d(4|6)/g,\"1d8\");\n                    copy_item.data.damage.parts[0][0] = newdamage;\n                    copy_item.data.ability = \"wis\";\n                    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\n                    ChatMessage.create({content: copy_item.name + \" is empowered\"});\n                }\n            },\n            Cancel:\n            {\n                label: `Cancel`\n            }\n        }\n    }).render(true);\n}\n\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, `shillelagh`);\n    let weaponItem = tactor.items.get(flag.id);\n    let copy_item = duplicate(weaponItem);\n    copy_item.data.damage.parts[0][0] = flag.damage;\n    copy_item.data.ability = \"\";\n    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\n    DAE.unsetFlag(tactor, `shillelagh`);\n    ChatMessage.create({content: copy_item.name + \" returns to normal\"});\n\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Shillelagh","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet weapons = tactor.items.filter(i => i.data.type === `weapon`);\nlet weapon_content = ``;\n\nfor (let weapon of weapons) {\n    weapon_content += `<option value=${weapon.id}>${weapon.name}</option>`;\n}\nif (args[0] === \"on\") {\n    let content = `\n<div class=\"form-group\">\n  <label>Weapons : </label>\n  <select name=\"weapons\">\n    ${weapon_content}\n  </select>\n</div>`;\n\n    new Dialog({\n        title: \"Choose a club or quarterstaff\",\n        content,\n        buttons:\n        {\n            Ok:\n            {\n                label: `Ok`,\n                callback: (html) => {\n                    let itemId = html.find('[name=weapons]')[0].value;\n                    let weaponItem = tactor.items.get(itemId);\n                    let copy_item = duplicate(weaponItem);\n                    DAE.setFlag(tactor, `shillelagh`, {\n                        id : itemId,\n                        damage : copy_item.data.damage.parts[0][0]    \n                    });\n                    let damage = copy_item.data.damage.parts[0][0];\n                    var newdamage = damage.replace(/1d(4|6)/g,\"1d8\");\n                    copy_item.data.damage.parts[0][0] = newdamage;\n                    copy_item.data.ability = \"wis\";\n                    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\n                    ChatMessage.create({content: copy_item.name + \" is empowered\"});\n                }\n            },\n            Cancel:\n            {\n                label: `Cancel`\n            }\n        }\n    }).render(true);\n}\n\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, `shillelagh`);\n    let weaponItem = tactor.items.get(flag.id);\n    let copy_item = duplicate(weaponItem);\n    copy_item.data.damage.parts[0][0] = flag.damage;\n    copy_item.data.ability = \"\";\n    tactor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\n    DAE.unsetFlag(tactor, `shillelagh`);\n    ChatMessage.create({content: copy_item.name + \" returns to normal\"});\n\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/enchant-jade-1.jpg","effects":[{"_id":"x3I3PP0wLDynd8JN","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/enchant-jade-1.jpg","label":"Shillelagh","tint":"","transfer":false}]}
{"_id":"xQCOkFF4jxak2lvQ","name":"Heroism","permission":{"default":0,"NQHxXfbiVgh4JBIs":3},"type":"spell","data":{"description":{"value":"<p>A willing creature you touch is imbued with bravery. Until the spell ends, the creature is immune to being Frightened and gains Temporary Hit Points equal to your Spellcasting ability modifier at the start of each of its turns. When the spell ends, the target loses any remaining tempora⁠ry hit point⁠s from this spell.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 250","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["@mod","midi-none"]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"macro.execute","value":"\"Heroism\" @target @abilities.wis.mod","mode":"+","targetSpecific":false,"id":1,"itemId":"MZri1qA9dTyQqtvt","active":true,"_targets":[]}],"equipActive":true,"alwaysActive":false},"dae":{"activeEquipped":false,"alwaysActive":false},"betterRolls5e":{"critRange":{"type":"String","value":null},"critDamage":{"type":"String","value":""},"quickDesc":{"type":"Boolean","value":true,"altValue":true},"quickAttack":{"type":"Boolean","value":true,"altValue":true},"quickSave":{"type":"Boolean","value":true,"altValue":true},"quickDamage":{"type":"Array","value":{"0":true},"altValue":{"0":true},"context":[]},"quickVersatile":{"type":"Boolean","value":false,"altValue":false},"quickProperties":{"type":"Boolean","value":true,"altValue":true},"quickCharges":{"type":"Boolean","value":{"use":false,"resource":false},"altValue":{"use":false,"resource":false}},"quickTemplate":{"type":"Boolean","value":true,"altValue":true},"quickOther":{"type":"Boolean","value":true,"altValue":true,"context":""},"quickFlavor":{"type":"Boolean","value":true,"altValue":true},"quickPrompt":{"type":"Boolean","value":false,"altValue":false}},"core":{"sourceId":"Item.bbN0qAtGlt1VZNJl"},"midi-qol":{"onUseMacroName":""},"itemacro":{"macro":{"_data":{"name":"Heroism","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" t @damage (apply @mod damge of none type)\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nlet mod = args[1];\n\nif (args[0] === \"on\") {\n    ChatMessage.create({ content: `Heroism is applied to ${tactor.name}` })\n}\nif (args[0] === \"off\") {\n    ChatMessage.create({ content: \"Heroism ends\" });\n}\nif(args[0] === \"each\"){\nlet bonus = mod > tactor.data.data.attributes.hp.temp ? mod : tactor.data.data.attributes.hp.temp\n    tactor.update({ \"data.attributes.hp.temp\": mod });\n    ChatMessage.create({ content: \"Heroism continues on \" + tactor.name })\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Heroism","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" t @damage (apply @mod damge of none type)\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nlet mod = args[1];\n\nif (args[0] === \"on\") {\n    ChatMessage.create({ content: `Heroism is applied to ${tactor.name}` })\n}\nif (args[0] === \"off\") {\n    ChatMessage.create({ content: \"Heroism ends\" });\n}\nif(args[0] === \"each\"){\nlet bonus = mod > tactor.data.data.attributes.hp.temp ? mod : tactor.data.data.attributes.hp.temp\n    tactor.update({ \"data.attributes.hp.temp\": mod });\n    ChatMessage.create({ content: \"Heroism continues on \" + tactor.name })\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"mess":{"templateTexture":""}},"img":"systems/dnd5e/icons/spells/heal-sky-2.jpg","effects":[{"_id":"ofPxOG62bxg60zIO","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"startEveryTurn"}},"changes":[{"key":"macro.itemMacro","value":"@damage","mode":0,"priority":0},{"key":"data.traits.ci.value","value":"frightened","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/heal-sky-2.jpg","label":"Heroism","tint":"","transfer":false}]}
{"_id":"xedFUGushERJ3TFL","name":"Fire Shield","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>Thin and wispy flames wreathe your body for the Duration, shedding bright light in a 10-foot radius and dim light for an additional 10 feet. You can end the spell early by using an action to dismiss it.</p>\n<p>The flames provide you with a warm shi⁠eld or a chill sh⁠ield, as you choose. The warm shi⁠eld grants you Resistance to cold damage, and the chill shi⁠eld grants you resist⁠ance to fire damage.</p>\n<p>In addition, whenever a creature within 5 feet of you hits you with a melee Attack, the shiel⁠d erupts with flame. The attacker takes 2d8 fire damage from a warm shie⁠ld, or 2d8 cold damage from a cold sh⁠ield.</p>","chat":"","unidentified":""},"source":"PHB pg. 242","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"2d8","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":4,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A bit of phosphorus or a firefly","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"FireShield @target","mode":"+","targetSpecific":false,"id":1,"itemId":"QTP4gLcjbhZ2khVy","active":true,"_targets":[]}]},"itemacro":{"macro":{"_data":{"name":"Fire Shield","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\n\nif (args[0] === \"on\") {  \n        new Dialog({\n            title: \"Warm or Cold Shield\",\n            buttons: {\n                one: {\n                    label: \"Warm\",\n                    callback: () => {\n                        let resistances = tactor.data.data.traits.dr.value;\n                        resistances.push(\"cold\");\n                        tactor.update({ \"data.traits.dr.value\": resistances });\n                        DAE.setFlag(tactor, 'FireShield', \"cold\");\n                        ChatMessage.create({ content: `${target.name} gains resistnace to cold` });\n                    }\n                },\n                two: {\n                    label: \"Cold\",\n                    callback: () => {\n                        let resistances = tactor.data.data.traits.dr.value;\n                        resistances.push(\"fire\");\n                        tactor.update({ \"data.traits.dr.value\": resistances });\n                        DAE.setFlag(tactor, 'FireShield', \"fire\");\n                        ChatMessage.create({ content: `${target.name} gains resistnace to fire` });\n                    }\n                },\n            }\n        }).render(true);\n}\nif (args[0] === \"off\") {\n    let element = DAE.getFlag(tactor, 'FireShield');\n    let resistances = tactor.data.data.traits.dr.value;\n    const index = resistances.indexOf(element);\n    resistances.splice(index, 1);\n    tactor.update({ \"data.traits.dr.value\": resistances });\n    ChatMessage.create({ content: \"Fire Shield expires on \" + target.name});\n    DAE.unsetFlag(tactor, 'FireShield');\n\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Fire Shield","type":"script","scope":"global","command":"const lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\n\nif (args[0] === \"on\") {  \n        new Dialog({\n            title: \"Warm or Cold Shield\",\n            buttons: {\n                one: {\n                    label: \"Warm\",\n                    callback: () => {\n                        let resistances = tactor.data.data.traits.dr.value;\n                        resistances.push(\"cold\");\n                        tactor.update({ \"data.traits.dr.value\": resistances });\n                        DAE.setFlag(tactor, 'FireShield', \"cold\");\n                        ChatMessage.create({ content: `${target.name} gains resistnace to cold` });\n                    }\n                },\n                two: {\n                    label: \"Cold\",\n                    callback: () => {\n                        let resistances = tactor.data.data.traits.dr.value;\n                        resistances.push(\"fire\");\n                        tactor.update({ \"data.traits.dr.value\": resistances });\n                        DAE.setFlag(tactor, 'FireShield', \"fire\");\n                        ChatMessage.create({ content: `${target.name} gains resistnace to fire` });\n                    }\n                },\n            }\n        }).render(true);\n}\nif (args[0] === \"off\") {\n    let element = DAE.getFlag(tactor, 'FireShield');\n    let resistances = tactor.data.data.traits.dr.value;\n    const index = resistances.indexOf(element);\n    resistances.splice(index, 1);\n    tactor.update({ \"data.traits.dr.value\": resistances });\n    ChatMessage.create({ content: \"Fire Shield expires on \" + target.name});\n    DAE.unsetFlag(tactor, 'FireShield');\n\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/protect-red-3.jpg","effects":[{"_id":"AKvaMvKe2qN5j8zf","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/protect-red-3.jpg","label":"Fire Shield","tint":"","transfer":false}]}
{"_id":"z5KCsLXSKyh00b2N","name":"Heroes' Feast","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You bring forth a great feast, including magnificent food and drink. The feast takes 1 Hour to consume and disappears at the end of that time, and the beneficial Effects don’t set in until this hour is over. Up to twelve creatures can partake of the feast.</p>\n<p>A creature that partakes of the feast gains several benefits. The creature is cured of all Diseases and poison, becomes immune to poison and being Frightened, and makes all Wisdom Saving Throws with advantage. Its hit point maximum also increases by 2d10, and it gains the same number of Hit Points. These benefits last for 24 hours.</p>","chat":"","unidentified":""},"source":"PHB pg. 250","activation":{"type":"minute","cost":10,"condition":""},"duration":{"value":24,"units":"hour"},"target":{"value":0,"width":null,"units":"","type":""},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["2d10","midi-none"]],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":6,"school":"con","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A gem-encrusted bowl worth at least 1000gp, which the spell consumes","consumed":true,"cost":1000,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":false,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"HeroesFeast @target","mode":"+","targetSpecific":false,"id":1,"itemId":"nWkh3MEfiaxZEuvs","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"midi-qol":{"onUseMacroName":""},"itemacro":{"macro":{"_data":{"name":"Heroes' Feast","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\n\nlet amount = args[2]\n/**\n * Update HP and Max HP to roll formula, save result as flag\n */\nif (args[0] === \"on\") {\n        let hpMax = tactor.data.data.attributes.hp.max;\n        let hp = tactor.data.data.attributes.hp.value;\n        await tactor.update({\"data.attributes.hp.max\": (hpMax + amount), \"data.attributes.hp.value\": (hp + amount) });\n        ChatMessage.create({content: `${target.name} gains ${amount} Max HP`});\n        await DAE.setFlag(tactor, 'HeroesFeast', amount);\n};\n\n// Remove Max Hp and reduce HP to max if needed\nif (args[0] === \"off\") {\n        let amountOff = await DAE.getFlag(tactor, 'HeroesFeast');\n        let hpMax = tactor.data.data.attributes.hp.max;\n        let newHpMax = hpMax - amountOff;\n        let hp = tactor.data.data.attributes.hp.value > newHpMax ? newHpMax : tactor.data.data.attributes.hp.value\n        await tactor.update({\"data.attributes.hp.max\": newHpMax, \"data.attributes.hp.value\" : hp });\n        ChatMessage.create({content: target.name + \"'s Max HP returns to normal\"});\n        DAE.unsetFlag(tactor, 'HeroesFeast');\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Heroes' Feast","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\n\nlet amount = args[2]\n/**\n * Update HP and Max HP to roll formula, save result as flag\n */\nif (args[0] === \"on\") {\n        let hpMax = tactor.data.data.attributes.hp.max;\n        let hp = tactor.data.data.attributes.hp.value;\n        await tactor.update({\"data.attributes.hp.max\": (hpMax + amount), \"data.attributes.hp.value\": (hp + amount) });\n        ChatMessage.create({content: `${target.name} gains ${amount} Max HP`});\n        await DAE.setFlag(tactor, 'HeroesFeast', amount);\n};\n\n// Remove Max Hp and reduce HP to max if needed\nif (args[0] === \"off\") {\n        let amountOff = await DAE.getFlag(tactor, 'HeroesFeast');\n        let hpMax = tactor.data.data.attributes.hp.max;\n        let newHpMax = hpMax - amountOff;\n        let hp = tactor.data.data.attributes.hp.value > newHpMax ? newHpMax : tactor.data.data.attributes.hp.value\n        await tactor.update({\"data.attributes.hp.max\": newHpMax, \"data.attributes.hp.value\" : hp });\n        ChatMessage.create({content: target.name + \"'s Max HP returns to normal\"});\n        DAE.unsetFlag(tactor, 'HeroesFeast');\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/heal-royal-3.jpg","effects":[{"_id":"dUhuzikjyBLRoari","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"macro.itemMacro","value":"@damage","mode":0,"priority":0},{"key":"data.traits.di.value","value":"poison","mode":0,"priority":20},{"key":"data.traits.ci.value","value":"frightened","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/heal-royal-3.jpg","label":"Heroes' Feast","tint":"","transfer":false}]}
{"_id":"KkPvayrMzhd7WnPW","name":"Alter Self","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You assume a different form. When you cast the spell, choose one of the following options, the effects of which last for the duration of the spell. While the spell lasts, you can end one option as an action to gain the benefits of a different one.</p>\n<p><strong>Aquatic Adaptation.&nbsp;</strong>You adapt your body to an aquatic environment, sprouting gills and growing webbing between your fingers. You can breathe underwater and gain a swimming speed equal to your walking speed.</p>\n<p><strong>Change Appearance.&nbsp;</strong>You transform your appearance. You decide what you look like, including your height, weight, facial features, sound of your voice, hair length, coloration, and distinguishing characteristics, if any. You can make yourself appear as a member of another race, though none of your statistics change. You also can't appear as a creature of a different size than you, and your basic shape stays the same; if you're bipedal, you can't use this spell to become quadrupedal, for instance. At any time for the duration of the spell, you can use your action to change your appearance in this way again.</p>\n<p><strong>Natural Weapons.&nbsp;</strong>You grow claws, fangs, spines, horns, or a different natural weapon of your choice. Your unarmed strikes deal 1d6 bludgeoning, piercing, or slashing damage, as appropriate to the natural weapon you chose, and you are proficient with your unarmed strikes. Finally, the natural weapon is magic and you have a +1 bonus to the attack and damage rolls you make using it.</p>","chat":"","unidentified":""},"source":"PHB pg. 211","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"macro.execute","value":"\"Alter Self\" @target","mode":"+","targetSpecific":false,"id":1,"itemId":"q2oOfBC73oDbRUPo","active":true,"_targets":[]}],"equipActive":false,"alwaysActive":false},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Alter Self","type":"script","scope":"global","command":"","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Alter Self","type":"script","scope":"global","command":"","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","effects":[{"_id":"ZFSPRxh2MSqLCb0V","flags":{"dae":{"stackable":false,"specialDuration":"None","transfer":false}},"changes":[{"key":"data.attributes.movement.swim","value":"@attributes.movement.walk","mode":4,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","label":"Aquatic Adaptation","tint":"","transfer":false},{"_id":"qXeD8bqXO4BjwI0w","flags":{"dae":{"stackable":false,"specialDuration":"None","transfer":false}},"changes":[{"key":"items.Unarmed Strike.data.damage.parts.0.0","value":"1d6+@mod+1","mode":5,"priority":20},{"key":"items.Unarmed Strike.data.properties.mgc","value":"true","mode":5,"priority":20},{"key":"items.Unarmed Strike.data.proficient","value":"true","mode":5,"priority":20},{"key":"items.Unarmed Strike.data.attackBonus","value":"1","mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg","label":"Natural Weapons","tint":"","transfer":false}]}
{"name":"Fortune's Favor","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<div  class=\"rd__b  rd__b--3\"><p>You impart latent luck to yourself or one willing creature you can see within range. When the chosen creature makes an attack roll, an ability check, or a saving throw before the spell ends, it can dismiss this spell on itself to roll an additional [[/r d20]] and choose which of the [[/r d20]]s to use. Alternatively, when an attack roll is made against the chosen creature, it can dismiss this spell on itself to roll a [[/r d20]] and choose which of the [[/r d20]]s to use, the one it rolled or the one the attacker rolled.</p><div class=\"rd__spc-inline-post\"></div><p>If the original [[/r d20]] roll has advantage or disadvantage, the creature rolls the additional [[/r d20]] after advantage or disadvantage has been applied to the original roll.</p></div><div  class=\"rd__b  rd__b--3\"><div  class=\"rd__b  rd__b--3\"><span class=\"rd__h rd__h--3\" data-title-index=\"2260\" > <span class=\"entry-title-inner\">At Higher Levels.</span></span> <p>When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p><div class=\"rd__spc-inline-post\"></div></div><div class=\"rd__spc-inline-post\"></div></div>","chat":"","unidentified":""},"source":"EGW","activation":{"type":"minute","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":0,"width":null,"units":"","type":""},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"d20","save":{"ability":"","dc":null,"scaling":"spell"},"level":2,"school":"div","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"a white pearl worth at least 100 gp, which the spell consumes","consumed":true,"cost":100,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"https://i.imgur.com/3CcFZH9.jpg","effects":[{"_id":"QaSoNH2xRguPlgrA","flags":{"dae":{"stackable":false,"specialDuration":[],"transfer":true}},"changes":[{"key":"data.attributes.inspiration","value":1,"mode":4,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"https://i.imgur.com/3CcFZH9.jpg","label":"Fortune's Favor","origin":"Item.hBAenJRVyq0nzIks","tint":"","transfer":true}],"_id":"w1HRZEQTUBgIfQ5H"}
{"_id":"KWxP6PDFTksi8wgG","name":"Bane","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>Up to three creatures of your choice that you can see within range must make Charisma saving throws. Whenever a target that fails this saving throw makes an attack roll or a saving throw before the spell ends, the target must roll a d4 and subtract the number rolled from the attack roll or saving throw.</p>\n<p><strong>Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 216","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":3,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"cha","dc":null,"scaling":"spell"},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A drop of blood","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"data.bonuses.All-Attacks","value":"-1d4","mode":"+","targetSpecific":false,"id":1,"itemId":"9GH7tsdS6JjUJMQX","active":true,"_targets":[],"label":"Bonuses All Attack Bonuses"},{"modSpecKey":"data.bonuses.abilities.save","value":"-1d4","mode":"+","targetSpecific":false,"id":2,"itemId":"9GH7tsdS6JjUJMQX","active":true,"_targets":[]}],"equipActive":true,"alwaysActive":false},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickSave":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true}}},"img":"systems/dnd5e/icons/spells/rip-magenta-2.jpg","effects":[{"_id":"O6D0D9RsGQt8GxjP","flags":{"dae":{"transfer":false}},"changes":[{"key":"data.bonuses.All-Attacks","value":"-1d4","mode":0,"priority":0},{"key":"data.bonuses.abilities.save","value":"-1d4","mode":2,"priority":20}],"duration":{},"icon":"systems/dnd5e/icons/spells/rip-magenta-2.jpg","label":"Bane","transfer":false}]}
{"name":"Bane","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>Up to three creatures of your choice that you can see within range must make Charisma saving throws. Whenever a target that fails this saving throw makes an attack roll or a saving throw before the spell ends, the target must roll a d4 and subtract the number rolled from the attack roll or saving throw.</p>\n<p><strong>Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 216","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":3,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"cha","dc":null,"scaling":"spell"},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A drop of blood","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"data.bonuses.All-Attacks","value":"-1d4","mode":"+","targetSpecific":false,"id":1,"itemId":"9GH7tsdS6JjUJMQX","active":true,"_targets":[],"label":"Bonuses All Attack Bonuses"},{"modSpecKey":"data.bonuses.abilities.save","value":"-1d4","mode":"+","targetSpecific":false,"id":2,"itemId":"9GH7tsdS6JjUJMQX","active":true,"_targets":[]}],"equipActive":true,"alwaysActive":false},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickSave":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/rip-magenta-2.jpg","effects":[{"_id":"O6D0D9RsGQt8GxjP","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.bonuses.All-Attacks","value":"-1d4","mode":0,"priority":0},{"key":"data.bonuses.abilities.save","value":"-1d4","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/rip-magenta-2.jpg","label":"Bane","tint":"","transfer":false}],"_id":"y0ogZEJ08DuT6IAF"}
{"_id":"y0ogZEJ08DuT6IAF","name":"Bane","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>Up to three creatures of your choice that you can see within range must make Charisma saving throws. Whenever a target that fails this saving throw makes an attack roll or a saving throw before the spell ends, the target must roll a d4 and subtract the number rolled from the attack roll or saving throw.</p>\n<p><strong>Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 216","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":3,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"cha","dc":null,"scaling":"spell"},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A drop of blood","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"data.bonuses.All-Attacks","value":"-1d4","mode":"+","targetSpecific":false,"id":1,"itemId":"9GH7tsdS6JjUJMQX","active":true,"_targets":[],"label":"Bonuses All Attack Bonuses"},{"modSpecKey":"data.bonuses.abilities.save","value":"-1d4","mode":"+","targetSpecific":false,"id":2,"itemId":"9GH7tsdS6JjUJMQX","active":true,"_targets":[]}],"equipActive":true,"alwaysActive":false},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickSave":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/rip-magenta-2.jpg","effects":[{"_id":"O6D0D9RsGQt8GxjP","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.bonuses.All-Attacks","value":"-1d4","mode":0,"priority":0},{"key":"data.bonuses.abilities.save","value":"-1d4","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/rip-magenta-2.jpg","label":"Bane","tint":"","transfer":false}]}
{"name":"Barkskin","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You touch a willing creature. Until the spell ends, the target's skin has a rough, bark-like appearance, and the target's AC can't be less than 16, regardless of what kind of armor it is wearing.</p>","chat":"","unidentified":""},"source":"PHB pg. 217","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A handful of oak bark","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"Barkskin @target","mode":"+","targetSpecific":false,"id":1,"itemId":"khqqVjNBG599mBx7","active":true,"_targets":[],"label":"Macro Execute"},{"modSpecKey":"data.attributes.ac.value","value":"16","mode":"=","targetSpecific":false,"id":2,"itemId":"khqqVjNBG599mBx7","active":false,"_targets":[]}]},"betterRolls5e":{"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickOther":{"value":true,"altValue":true},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/protect-orange-2.jpg","effects":[{"_id":"553TIeeXTYXI01P3","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.attributes.ac.value","value":16,"mode":4,"priority":100}],"disabled":false,"duration":{"startTime":null,"seconds":3600,"rounds":600,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/protect-orange-2.jpg","label":"Barkskin","tint":"","transfer":false}],"_id":"lNLByYLWO3IScwyq"}
{"name":"Enlarge","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You cause a creature or an object you can see within range to grow larger or smaller for the Duration. Choose either a creature or an object that is neither worn nor carried. If the target is unwilling, it can make a Constitution saving throw. On a success, the spell has no effect.</p>\n<p>If the target is a creature, everything it is wearing and carrying changes size with it. Any item dropped by an affected creature returns to normal size at once.</p>\n<p><strong>Enlarge</strong>. The target’s size doubles in all dimensions, and its weight is multiplied by eight. This growth increases its size by one category—from Medium to Large, for example. If there isn’t enough room for the target to double its size, the creature or object attains the maximum possible size in the space available. Until the spell ends, the target also has advantage on Strength Checks and Strength Saving Throws. The target’s Weapons also grow to match its new size. While these Weapons are enlarged, the target’s attacks with them deal 1d4 extra damage.</p>\n<p><strong>Reduce</strong>. The target’s size is halved in all dimensions, and its weight is reduced to one-eighth of normal. This reduction decreases its size by one category—from Medium to Small, for example. Until the spell ends, the target also has disadvantage on Strength Checks and Strength Saving Throws. The target’s Weapons also shrink to match its new size. While these Weapons are reduced, the target’s attacks with them deal 1d4 less damage (this can’t reduce the damage below 1).</p>","chat":"","unidentified":""},"source":"PHB pg. 237","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A pinch of powdered iron","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"EnlargeReduce @target","mode":"+","targetSpecific":false,"id":1,"itemId":"l3i21wVEWMHVOXyj","active":true,"_targets":[],"label":"Macro Execute"}]},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Enlarge/Reduce","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\n/**\n * For each target, the GM will have to choose \n */\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet target = canvas.tokens.get(lastArg.tokenId);\nlet originalSize = target.data.width;\nlet mwak = target.actor.data.data.bonuses.mwak.damage;\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Enlarge or Reduce\",\n        buttons: {\n            one: {\n                label: \"Enlarge\",\n                callback: () => {\n                    let bonus = mwak + \"+ 1d4\";\n                    let enlarge = (originalSize + 1);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": enlarge, \"height\": enlarge });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is enlarged` });\n                }\n            },\n            two: {\n                label: \"Reduce\",\n                callback: () => {\n                    let bonus = mwak + \" -1d4\";\n                    let size = originalSize;\n                    let newSize = (size > 1) ? (size - 1) : (size - 0.3);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": newSize, \"height\": newSize });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is reduced` });\n                }\n            },\n        }\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, 'enlageReduceSpell');\n    tactor.update({ \"data.bonuses.mwak.damage\": flag.ogMwak });\n    target.update({ \"width\": flag.size, \"height\": flag.size });\n    DAE.unsetFlag(tactor, 'enlageReduceSpell');\n    ChatMessage.create({ content: `${target.name} is returned to normal size` });\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Enlarge/Reduce","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\n/**\n * For each target, the GM will have to choose \n */\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet target = canvas.tokens.get(lastArg.tokenId);\nlet originalSize = target.data.width;\nlet mwak = target.actor.data.data.bonuses.mwak.damage;\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Enlarge or Reduce\",\n        buttons: {\n            one: {\n                label: \"Enlarge\",\n                callback: () => {\n                    let bonus = mwak + \"+ 1d4\";\n                    let enlarge = (originalSize + 1);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": enlarge, \"height\": enlarge });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is enlarged` });\n                }\n            },\n            two: {\n                label: \"Reduce\",\n                callback: () => {\n                    let bonus = mwak + \" -1d4\";\n                    let size = originalSize;\n                    let newSize = (size > 1) ? (size - 1) : (size - 0.3);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": newSize, \"height\": newSize });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is reduced` });\n                }\n            },\n        }\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, 'enlageReduceSpell');\n    tactor.update({ \"data.bonuses.mwak.damage\": flag.ogMwak });\n    target.update({ \"width\": flag.size, \"height\": flag.size });\n    DAE.unsetFlag(tactor, 'enlageReduceSpell');\n    ChatMessage.create({ content: `${target.name} is returned to normal size` });\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickSave":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/link-blue-2.jpg","effects":[{"_id":"a7fBAHk1NcIg80wi","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"data.bonuses.mwak.damage","value":"1d4","mode":0,"priority":20},{"key":"data.bonuses.rwak.damage","value":"1d4","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/link-blue-2.jpg","label":"Enlarge","tint":"","transfer":false}],"_id":"KHapYRcJ1dweBSUs"}
{"name":"Reduce","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You cause a creature or an object you can see within range to grow larger or smaller for the Duration. Choose either a creature or an object that is neither worn nor carried. If the target is unwilling, it can make a Constitution saving throw. On a success, the spell has no effect.</p>\n<p>If the target is a creature, everything it is wearing and carrying changes size with it. Any item dropped by an affected creature returns to normal size at once.</p>\n<p><strong>Enlarge</strong>. The target’s size doubles in all dimensions, and its weight is multiplied by eight. This growth increases its size by one category—from Medium to Large, for example. If there isn’t enough room for the target to double its size, the creature or object attains the maximum possible size in the space available. Until the spell ends, the target also has advantage on Strength Checks and Strength Saving Throws. The target’s Weapons also grow to match its new size. While these Weapons are enlarged, the target’s attacks with them deal 1d4 extra damage.</p>\n<p><strong>Reduce</strong>. The target’s size is halved in all dimensions, and its weight is reduced to one-eighth of normal. This reduction decreases its size by one category—from Medium to Small, for example. Until the spell ends, the target also has disadvantage on Strength Checks and Strength Saving Throws. The target’s Weapons also shrink to match its new size. While these Weapons are reduced, the target’s attacks with them deal 1d4 less damage (this can’t reduce the damage below 1).</p>","chat":"","unidentified":""},"source":"PHB pg. 237","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A pinch of powdered iron","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"EnlargeReduce @target","mode":"+","targetSpecific":false,"id":1,"itemId":"l3i21wVEWMHVOXyj","active":true,"_targets":[],"label":"Macro Execute"}]},"dae":{"activeEquipped":false,"alwaysActive":false},"itemacro":{"macro":{"_data":{"name":"Enlarge/Reduce","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\n/**\n * For each target, the GM will have to choose \n */\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet target = canvas.tokens.get(lastArg.tokenId);\nlet originalSize = target.data.width;\nlet mwak = target.actor.data.data.bonuses.mwak.damage;\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Enlarge or Reduce\",\n        buttons: {\n            one: {\n                label: \"Enlarge\",\n                callback: () => {\n                    let bonus = mwak + \"+ 1d4\";\n                    let enlarge = (originalSize + 1);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": enlarge, \"height\": enlarge });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is enlarged` });\n                }\n            },\n            two: {\n                label: \"Reduce\",\n                callback: () => {\n                    let bonus = mwak + \" -1d4\";\n                    let size = originalSize;\n                    let newSize = (size > 1) ? (size - 1) : (size - 0.3);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": newSize, \"height\": newSize });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is reduced` });\n                }\n            },\n        }\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, 'enlageReduceSpell');\n    tactor.update({ \"data.bonuses.mwak.damage\": flag.ogMwak });\n    target.update({ \"width\": flag.size, \"height\": flag.size });\n    DAE.unsetFlag(tactor, 'enlageReduceSpell');\n    ChatMessage.create({ content: `${target.name} is returned to normal size` });\n}","author":"E4BVikjIkVl2lL2j"},"data":{"name":"Enlarge/Reduce","type":"script","scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\n/**\n * For each target, the GM will have to choose \n */\n\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\n\nlet target = canvas.tokens.get(lastArg.tokenId);\nlet originalSize = target.data.width;\nlet mwak = target.actor.data.data.bonuses.mwak.damage;\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Enlarge or Reduce\",\n        buttons: {\n            one: {\n                label: \"Enlarge\",\n                callback: () => {\n                    let bonus = mwak + \"+ 1d4\";\n                    let enlarge = (originalSize + 1);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": enlarge, \"height\": enlarge });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is enlarged` });\n                }\n            },\n            two: {\n                label: \"Reduce\",\n                callback: () => {\n                    let bonus = mwak + \" -1d4\";\n                    let size = originalSize;\n                    let newSize = (size > 1) ? (size - 1) : (size - 0.3);\n                    tactor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": newSize, \"height\": newSize });\n                    DAE.setFlag(tactor, 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: `${target.name} is reduced` });\n                }\n            },\n        }\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, 'enlageReduceSpell');\n    tactor.update({ \"data.bonuses.mwak.damage\": flag.ogMwak });\n    target.update({ \"width\": flag.size, \"height\": flag.size });\n    DAE.unsetFlag(tactor, 'enlageReduceSpell');\n    ChatMessage.create({ content: `${target.name} is returned to normal size` });\n}","author":"E4BVikjIkVl2lL2j"},"options":{},"apps":{},"compendium":null}},"midi-qol":{"onUseMacroName":""},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickSave":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/link-blue-2.jpg","effects":[{"_id":"a7fBAHk1NcIg80wi","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"},"ActiveAuras":{"isAura":false,"ignoreSelf":false,"hidden":false,"height":false,"aura":"None","radius":null}},"changes":[{"key":"data.bonuses.mwak.damage","value":"-1d4","mode":0,"priority":20},{"key":"data.bonuses.rwak.damage","value":"-1d4","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/link-blue-2.jpg","label":"Enlarge","tint":"","transfer":false}],"_id":"5TRhN5ExZZsEXGBz"}
{"_id":"n05KDSrgCZnZfV8U","name":"Bless","permission":{"default":0,"gSvPH9u5wzkE1oU1":3},"type":"spell","data":{"description":{"value":"<p>You bless up to three creatures of your choice within range. Whenever a target makes an attack roll or a saving throw before the spell ends, the target can roll 1d4 and add the number rolled to the attack roll or saving throw.</p>\n<p><strong>Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 219","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":3,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"1d4","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A sprinkling of holy water","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.bonuses.abilities.save","value":"1d4","mode":"+","targetSpecific":false,"id":1,"itemId":"hYWYJJbVMe5U7GbQ","active":true,"_targets":[],"label":"Bonuses Abilities Save"},{"modSpecKey":"data.bonuses.All-Attacks","value":"1d4","mode":"+","targetSpecific":false,"id":2,"itemId":"hYWYJJbVMe5U7GbQ","active":true,"_targets":[]}]},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true}}},"img":"systems/dnd5e/icons/spells/haste-sky-1.jpg","effects":[{"_id":"lsEz6wG7eXIutwZI","flags":{"dae":{"transfer":false}},"changes":[{"key":"data.bonuses.abilities.save","value":"1d4","mode":2,"priority":20},{"key":"data.bonuses.All-Attacks","value":"1d4","mode":0,"priority":0}],"duration":{},"icon":"systems/dnd5e/icons/spells/haste-sky-1.jpg","label":"Bless","transfer":false}]}
{"name":"Bless","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You bless up to three creatures of your choice within range. Whenever a target makes an attack roll or a saving throw before the spell ends, the target can roll 1d4 and add the number rolled to the attack roll or saving throw.</p>\n<p><strong>Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 219","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":3,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"1d4","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A sprinkling of holy water","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.bonuses.abilities.save","value":"1d4","mode":"+","targetSpecific":false,"id":1,"itemId":"hYWYJJbVMe5U7GbQ","active":true,"_targets":[],"label":"Bonuses Abilities Save"},{"modSpecKey":"data.bonuses.All-Attacks","value":"1d4","mode":"+","targetSpecific":false,"id":2,"itemId":"hYWYJJbVMe5U7GbQ","active":true,"_targets":[]}]},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/haste-sky-1.jpg","effects":[{"_id":"lsEz6wG7eXIutwZI","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.bonuses.abilities.save","value":"1d4","mode":0,"priority":20},{"key":"data.bonuses.All-Attacks","value":"1d4","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/haste-sky-1.jpg","label":"Bless","tint":"","transfer":false}],"_id":"dCN4r1R2z4wuYY5U"}
{"_id":"dCN4r1R2z4wuYY5U","name":"Bless","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You bless up to three creatures of your choice within range. Whenever a target makes an attack roll or a saving throw before the spell ends, the target can roll 1d4 and add the number rolled to the attack roll or saving throw.</p>\n<p><strong>Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 219","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":3,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"1d4","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A sprinkling of holy water","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.bonuses.abilities.save","value":"1d4","mode":"+","targetSpecific":false,"id":1,"itemId":"hYWYJJbVMe5U7GbQ","active":true,"_targets":[],"label":"Bonuses Abilities Save"},{"modSpecKey":"data.bonuses.All-Attacks","value":"1d4","mode":"+","targetSpecific":false,"id":2,"itemId":"hYWYJJbVMe5U7GbQ","active":true,"_targets":[]}]},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/haste-sky-1.jpg","effects":[{"_id":"lsEz6wG7eXIutwZI","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.bonuses.abilities.save","value":"1d4","mode":0,"priority":20},{"key":"data.bonuses.All-Attacks","value":"1d4","mode":0,"priority":0}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/haste-sky-1.jpg","label":"Bless","tint":"","transfer":false}]}
{"name":"Gift of Alacrity","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<div  class=\"rd__b  rd__b--3\"><p>You touch a willing creature. For the duration, the target can add [[/r 1d8]] to its initiative rolls.</p><div class=\"rd__spc-inline-post\"></div></div>","chat":"","unidentified":""},"source":"EGW","activation":{"type":"minute","cost":1,"condition":""},"duration":{"value":8,"units":"hour"},"target":{"value":null,"width":null,"units":"touch","type":""},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"1d8","save":{"ability":"","dc":null,"scaling":"spell"},"level":1,"school":"div","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"https://i.imgur.com/TPja2eQ.jpg","effects":[{"_id":"8yjBubJxH2ZbKW4G","flags":{"dae":{"stackable":false,"specialDuration":[],"transfer":true}},"changes":[{"key":"data.attributes.init.value","value":"1d8","mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":28800,"rounds":4800,"turns":null,"startRound":null,"startTurn":null},"icon":"https://i.imgur.com/TPja2eQ.jpg","label":"Gift of Alacrity","origin":"Item.Eex2S9Bxz3HKZkCM","tint":"","transfer":true}],"_id":"LETzxAQlGNb0iXyT"}
{"name":"Guidance","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You touch one willing creature. Once before the spell ends, the target can roll a d4 and add the number rolled to one ability check of its choice. It can roll the die before or after making the ability check. The spell then ends.</p>","chat":"","unidentified":""},"source":"PHB pg. 248","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"1d4","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":0,"school":"div","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true}}},"img":"/systems/dnd5e/icons/spells/haste-sky-1.jpg","effects":[{"_id":"iV3hCm1ZrFy2knUZ","flags":{"dae":{"stackable":false,"specialDuration":[],"transfer":true}},"changes":[{"key":"data.bonuses.abilities.check","value":"1d4","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/haste-sky-1.jpg","label":"Guidance","origin":"Item.454X2qWziQwblNHr","tint":"","transfer":true}],"_id":"hvhfTvHy4cKnFJVw"}
{"name":"Haste","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>Choose a willing creature that you can see within range. Until the spell ends, the target’s speed is doubled, it gains a +2 bonus to AC, it has advantage on Dexterity Saving Throws, and it gains an additional action on each of its turns. That action can be used only to take the Attack (one weapon attac⁠k only), Dash, Disengage, Hide, or Use an Object action.</p>\n<p>When the spell ends, the target can’t move or take Actions until after its next turn, as a wave of lethargy sweeps over it.</p>","chat":"","unidentified":""},"source":"PHB pg. 250","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":3,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A shaving of licorice root","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"n4AhwxY8hCTyI5nb","active":true,"_targets":[]},{"modSpecKey":"data.attributes.ac.value","value":"2","mode":"+","targetSpecific":false,"id":2,"itemId":"n4AhwxY8hCTyI5nb","active":true,"_targets":[],"label":"Attributes Armor Class"}]},"itemacro":{"macro":{"data":{"name":"Haste","type":"script","scope":"global","command":"","author":"devnIbfBHb74U9Zv"},"options":{},"apps":{},"compendium":null,"_data":{"name":"Haste","type":"script","scope":"global","command":"","author":"devnIbfBHb74U9Zv"}}},"dae":{"activeEquipped":false,"alwaysActive":false},"core":{"sourceId":"Item.amrbkImxY8OJO528"},"midi-qol":{"onUseMacroName":""},"exportSource":{"world":"testWorld","system":"dnd5e","coreVersion":"0.7.7","systemVersion":"1.1.1"},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/haste-royal-2.jpg","effects":[{"_id":"0VoBuTMoLbqIwtJJ","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.attributes.ac.value","value":2,"mode":2,"priority":20},{"key":"flags.midi-qol.advantage.ability.save.dex","value":"2","mode":0,"priority":20},{"key":"data.attributes.movement.burrow","value":2,"mode":1,"priority":10},{"key":"data.attributes.movement.climb","value":2,"mode":1,"priority":10},{"key":"data.attributes.movement.fly","value":2,"mode":1,"priority":10},{"key":"data.attributes.movement.hover","value":"2","mode":1,"priority":10},{"key":"data.attributes.movement.swim","value":2,"mode":1,"priority":10},{"key":"data.attributes.movement.walk","value":2,"mode":1,"priority":10}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/haste-royal-2.jpg","label":"Haste","tint":"","transfer":false}],"_id":"ahHFmh82TsNK41kF"}
{"name":"Hunter's Mark","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You choose a creature you can see within range and mystically mark it as your quarry. Until the spell ends, you deal an extra {@dice 1d6} damage to the target whenever you hit it with a weapon attack, and you have advantage on any Wisdom (Perception) or Wisdom (Survival) check you make to find it. If the target drops to 0 hit points before this spell ends, you can use a bonus action on a subsequent turn of yours to mark a new creature.</p>","chat":"","unidentified":""},"source":"PHB pg. 251","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":90,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["1d6",""]],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"div","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""},"attributes":{"spelldc":10}},"flags":{"betterRolls5e":{"quickDamage":{"context":{"0":""},"value":{"0":true},"altValue":{"0":true}},"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/evil-eye-red-1.jpg","effects":[{"_id":"NGjjmXoMlmm9AnNP","flags":{"dae":{"stackable":false,"specialDuration":[],"transfer":true}},"changes":[{"key":"data.bonuses.mwak.damage","value":"1d6","mode":0,"priority":20},{"key":"data.bonuses.rwak.damage","value":"1d6","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":3600,"rounds":600,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/evil-eye-red-1.jpg","label":"Hunter's Mark","origin":"Item.3s3ZTkB3quvajB4x","tint":"","transfer":true}],"_id":"xlHXZuEdmlqYtE94"}
{"name":"Hunter's Mark (8h)","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You choose a creature you can see within range and mystically mark it as your quarry. Until the spell ends, you deal an extra {@dice 1d6} damage to the target whenever you hit it with a weapon attack, and you have advantage on any Wisdom (Perception) or Wisdom (Survival) check you make to find it. If the target drops to 0 hit points before this spell ends, you can use a bonus action on a subsequent turn of yours to mark a new creature.</p>","chat":"","unidentified":""},"source":"PHB pg. 251","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":8,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":90,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["1d6",""]],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"div","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""},"attributes":{"spelldc":10}},"flags":{"betterRolls5e":{"quickDamage":{"context":{"0":""},"value":{"0":true},"altValue":{"0":true}},"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/evil-eye-red-1.jpg","effects":[{"_id":"NGjjmXoMlmm9AnNP","flags":{"dae":{"stackable":false,"specialDuration":[],"transfer":true}},"changes":[{"key":"data.bonuses.mwak.damage","value":"1d6","mode":0,"priority":20},{"key":"data.bonuses.rwak.damage","value":"1d6","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":28800,"rounds":4800,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/evil-eye-red-1.jpg","label":"Hunter's Mark (8h)","origin":"Item.3s3ZTkB3quvajB4x","tint":"","transfer":true}],"_id":"PhTgUtooI9cckyse"}
{"name":"Hunter's Mark (24h)","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You choose a creature you can see within range and mystically mark it as your quarry. Until the spell ends, you deal an extra {@dice 1d6} damage to the target whenever you hit it with a weapon attack, and you have advantage on any Wisdom (Perception) or Wisdom (Survival) check you make to find it. If the target drops to 0 hit points before this spell ends, you can use a bonus action on a subsequent turn of yours to mark a new creature.</p>","chat":"","unidentified":""},"source":"PHB pg. 251","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":8,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":90,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["1d6",""]],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"div","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""},"attributes":{"spelldc":10}},"flags":{"betterRolls5e":{"quickDamage":{"context":{"0":""},"value":{"0":true},"altValue":{"0":true}},"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/evil-eye-red-1.jpg","effects":[{"_id":"NGjjmXoMlmm9AnNP","flags":{"dae":{"stackable":false,"specialDuration":[],"transfer":true}},"changes":[{"key":"data.bonuses.mwak.damage","value":"1d6","mode":0,"priority":20},{"key":"data.bonuses.rwak.damage","value":"1d6","mode":0,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":86400,"rounds":14400,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/evil-eye-red-1.jpg","label":"Hunter's Mark (24h)","origin":"Item.3s3ZTkB3quvajB4x","tint":"","transfer":true}],"_id":"zS6mflr8vugoSyDv"}
{"name":"Longstrider","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You touch a creature. The target's speed increases by 10 feet until the spell ends.</p>","chat":"","unidentified":""},"source":"PHB pg. 256","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A pinch of dirt","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"Longstrider @target","mode":"+","targetSpecific":false,"id":1,"itemId":"YQuzJthgy3cQd9Ow","active":true,"_targets":[],"label":"Macro Execute"}]},"dae":{"activeEquipped":false,"alwaysActive":false},"core":{"sourceId":"Item.oo8xSLPoRhzHdZlg"},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/wind-sky-1.jpg","effects":[{"_id":"KX061GBZGEC1RRji","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.attributes.movement.walk","value":10,"mode":2,"priority":20},{"key":"data.attributes.movement.fly","value":10,"mode":2,"priority":20},{"key":"data.attributes.movement.burrow","value":10,"mode":2,"priority":20},{"key":"data.attributes.movement.climb","value":10,"mode":2,"priority":20},{"key":"data.attributes.movement.swim","value":10,"mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":3600,"rounds":600,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/wind-sky-1.jpg","label":"Longstrider","tint":"","transfer":false}],"_id":"TILVW2wanUq3uxPp"}
{"name":"Mage Armor","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You touch a willing creature who isn't wearing armor, and a protective magical force surrounds it until the spell ends. The target's base AC becomes 13 + its Dexterity modifier. The spell ends if the target dons armor or if you dismiss the spell as an action.</p>","chat":"","unidentified":""},"source":"PHB pg. 256","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":8,"units":"hour"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A piece of cured leather","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"_sheetTab":"details","dynamiceffects":{"effects":[{"modSpecKey":"data.attributes.ac.value","value":"13 + @abilities.dex.mod","mode":"=","targetSpecific":false,"id":1,"itemId":"KWepVspVtjeboJgf","active":true,"_targets":[]}],"alwaysActive":false,"equipActive":true},"dae":{"activeEquipped":false,"alwaysActive":false},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/protect-blue-1.jpg","effects":[{"_id":"XRkvYT9cV0BX5oJc","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.attributes.ac.value","value":"13 + @abilities.dex.mod","mode":5,"priority":5}],"disabled":false,"duration":{"startTime":null,"seconds":28800,"rounds":4800,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/protect-blue-1.jpg","label":"Mage Armor","tint":"","transfer":false}],"_id":"owkgsyKiE11oAT53"}
{"name":"Pass without Trace","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>A veil of shadows and Silence radiates from you, masking you and your companions from detection. For the Duration, each creature you choose within 30 feet of you (including you) has a +10 bonus to Dexterity (Stealth) checks and can’t be tracked except by magical means. A creature that receives this bonus leaves behind no tracks or other traces of its passage.</p>","chat":"","unidentified":""},"source":"PHB pg. 264","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":30,"width":null,"units":"ft","type":"radius"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Ashes from a burned leaf of mistletoe and a sprig of spruce","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickTemplate":{"value":true,"altValue":true},"quickFlavor":{"value":true,"altValue":true}}},"img":"/systems/dnd5e/icons/spells/fog-air-1.jpg","effects":[{"_id":"0pPJTH9EsxKRabhU","flags":{"dae":{"stackable":false,"specialDuration":[],"transfer":true}},"changes":[{"key":"data.skills.ste.mod","value":10,"mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":3600,"rounds":600,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/fog-air-1.jpg","label":"Pass without Trace","origin":"Item.bxB5OM6rlSUrG9p4","tint":"","transfer":true}],"_id":"MOqveFfxEhaQ4ZXp"}
{"name":"Shield","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>An invisible barrier of magical force appears and protects you. Until the start of your next turn, you have a +5 bonus to AC, including against the triggering attack, and you take no damage from magic missile.</p>","chat":"","unidentified":""},"source":"PHB pg. 275","activation":{"type":"reaction","cost":1,"condition":"Which you take when you are hit by an attack or targeted by the magic missile spell"},"duration":{"value":1,"units":"round"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"_sheetTab":"description","dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.attributes.ac.value","value":"5","mode":"+","targetSpecific":false,"id":1,"itemId":"sEwmlXP3wXnd41oR","active":true,"_targets":[]}]},"midi-qol":{"onUseMacroName":""},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/protect-magenta-1.jpg","effects":[{"_id":"hzQdCAC3gFDfLREf","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[],"macroRepeat":"none"}},"changes":[{"key":"data.attributes.ac.value","value":5,"mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/protect-magenta-1.jpg","label":"Shield","tint":"","transfer":false}],"_id":"RfNWWLtAJJowicX0"}
{"name":"Shield of Faith","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>A shimmering field appears and surrounds a creature of your choice within range, granting it a +2 bonus to AC for the duration.</p>","chat":"","unidentified":""},"source":"PHB pg. 275","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A small parchment with a bit of holy text written on it.","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.attributes.ac.value","value":"2","mode":"+","targetSpecific":false,"id":1,"itemId":"Vd17BhyN4J8OQljO","active":true,"_targets":[]}]},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/protect-sky-2.jpg","effects":[{"_id":"GGw83YdWNiJ94ubi","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.attributes.ac.value","value":2,"mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":600,"rounds":100,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/protect-sky-2.jpg","label":"Shield of Faith","tint":"","transfer":false}],"_id":"t4RepDSZoTIAeqP9"}
{"_id":"t4RepDSZoTIAeqP9","name":"Shield of Faith","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>A shimmering field appears and surrounds a creature of your choice within range, granting it a +2 bonus to AC for the duration.</p>","chat":"","unidentified":""},"source":"PHB pg. 275","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A small parchment with a bit of holy text written on it.","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.attributes.ac.value","value":"2","mode":"+","targetSpecific":false,"id":1,"itemId":"Vd17BhyN4J8OQljO","active":true,"_targets":[]}]},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/protect-sky-2.jpg","effects":[{"_id":"GGw83YdWNiJ94ubi","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.attributes.ac.value","value":2,"mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":600,"rounds":100,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/protect-sky-2.jpg","label":"Shield of Faith","tint":"","transfer":false}]}
{"_id":"t4RepDSZoTIAeqP9","name":"Shield of Faith","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>A shimmering field appears and surrounds a creature of your choice within range, granting it a +2 bonus to AC for the duration.</p>","chat":"","unidentified":""},"source":"PHB pg. 275","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A small parchment with a bit of holy text written on it.","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"data.attributes.ac.value","value":"2","mode":"+","targetSpecific":false,"id":1,"itemId":"Vd17BhyN4J8OQljO","active":true,"_targets":[]}]},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickFlavor":{"value":true,"altValue":true},"quickCharges":{"value":{"use":false},"altValue":{"use":false}}}},"img":"/systems/dnd5e/icons/spells/protect-sky-2.jpg","effects":[{"_id":"GGw83YdWNiJ94ubi","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.attributes.ac.value","value":2,"mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":600,"rounds":100,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/protect-sky-2.jpg","label":"Shield of Faith","tint":"","transfer":false}]}
{"name":"Slow","permission":{"default":0,"gz5bbhiTO9Y5saZX":3},"type":"spell","data":{"description":{"value":"<p>You alter time around up to six creatures of your choice in a 40-foot cube within range. Each target must succeed on a Wisdom saving throw or be affected by this spell for the duration.</p>\n<p>An affected target’s speed is halved, it takes a -2 penalty to AC and Dexterity saving throws, and it can’t use reactions. On its turn, it can use either an action or a bonus action, not both. Regardless of the creature’s abilities or magic items, it can’t make more than one melee or ranged attack during its turn.</p>\n<p>If the creature attempts to cast a spell with a casting time of 1 action, roll a d20. On an 11 or higher, the spell doesn’t take effect until the creature’s next turn, and the creature must use its action on that turn to complete the spell. If it can’t, the spell is wasted.</p>\n<p>A creature affected by this spell makes another Wisdom saving throw at the end of its turn. On a successful save, the effect ends for it.</p>","chat":"","unidentified":""},"source":"PHB pg. 277","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":40,"width":null,"units":"ft","type":"cube"},"range":{"value":120,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"1d20","save":{"ability":"wis","dc":null,"scaling":"spell"},"level":3,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A drop of molasses.","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"Slow","mode":"+","targetSpecific":false,"id":1,"itemId":"FQy3csyQLdC6oQkD","active":true,"_targets":[],"label":"Macro Execute"},{"modSpecKey":"data.attributes.ac.value","value":"-2","mode":"+","targetSpecific":false,"id":2,"itemId":"FQy3csyQLdC6oQkD","active":true,"_targets":[]}]},"dae":{"activeEquipped":false,"alwaysActive":false},"core":{"sourceId":"Item.SChk2pLAW8jxJPAK"},"betterRolls5e":{"quickOther":{"context":"","value":true,"altValue":true},"critRange":{"value":null},"critDamage":{"value":""},"quickDesc":{"value":true,"altValue":true},"quickSave":{"value":true,"altValue":true},"quickProperties":{"value":true,"altValue":true},"quickVersatile":{"value":false,"altValue":false},"quickTemplate":{"value":true,"altValue":true},"quickFlavor":{"value":true,"altValue":true}}},"img":"/systems/dnd5e/icons/spells/fog-magenta-2.jpg","effects":[{"_id":"Qb65ygpbdcoa0FjR","flags":{"dae":{"transfer":false,"stackable":false,"specialDuration":[]}},"changes":[{"key":"data.attributes.ac.value","value":-2,"mode":2,"priority":20},{"key":"data.attributes.movement.burrow","value":0,"mode":2,"priority":20},{"key":"data.attributes.movement.climb","value":0,"mode":2,"priority":20},{"key":"data.attributes.movement.fly","value":0,"mode":2,"priority":20},{"key":"data.attributes.movement.hover","value":"0","mode":2,"priority":20},{"key":"data.attributes.movement.swim","value":0,"mode":2,"priority":20},{"key":"data.attributes.movement.walk","value":0,"mode":2,"priority":20},{"key":"data.abilities.dex.save","value":-2,"mode":2,"priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":60,"rounds":10,"turns":null,"startRound":null,"startTurn":null},"icon":"systems/dnd5e/icons/spells/fog-magenta-2.jpg","label":"Slow","tint":"","transfer":false}],"_id":"IbmPnjZwsTpkMehp"}
